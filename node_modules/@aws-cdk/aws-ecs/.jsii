{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-applicationautoscaling": "1.91.0",
    "@aws-cdk/aws-autoscaling": "1.91.0",
    "@aws-cdk/aws-autoscaling-hooktargets": "1.91.0",
    "@aws-cdk/aws-certificatemanager": "1.91.0",
    "@aws-cdk/aws-cloudwatch": "1.91.0",
    "@aws-cdk/aws-ec2": "1.91.0",
    "@aws-cdk/aws-ecr": "1.91.0",
    "@aws-cdk/aws-ecr-assets": "1.91.0",
    "@aws-cdk/aws-elasticloadbalancing": "1.91.0",
    "@aws-cdk/aws-elasticloadbalancingv2": "1.91.0",
    "@aws-cdk/aws-iam": "1.91.0",
    "@aws-cdk/aws-kms": "1.91.0",
    "@aws-cdk/aws-lambda": "1.91.0",
    "@aws-cdk/aws-logs": "1.91.0",
    "@aws-cdk/aws-route53": "1.91.0",
    "@aws-cdk/aws-route53-targets": "1.91.0",
    "@aws-cdk/aws-s3": "1.91.0",
    "@aws-cdk/aws-s3-assets": "1.91.0",
    "@aws-cdk/aws-secretsmanager": "1.91.0",
    "@aws-cdk/aws-servicediscovery": "1.91.0",
    "@aws-cdk/aws-sns": "1.91.0",
    "@aws-cdk/aws-sqs": "1.91.0",
    "@aws-cdk/aws-ssm": "1.91.0",
    "@aws-cdk/core": "1.91.0",
    "@aws-cdk/cx-api": "1.91.0",
    "constructs": "^3.2.0"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-apigateway": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.APIGateway",
          "packageId": "Amazon.CDK.AWS.APIGateway"
        },
        "java": {
          "maven": {
            "artifactId": "apigateway",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.apigateway"
        },
        "js": {
          "npm": "@aws-cdk/aws-apigateway"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-apigateway",
          "module": "aws_cdk.aws_apigateway"
        }
      }
    },
    "@aws-cdk/aws-apigatewayv2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.APIGatewayv2",
          "packageId": "Amazon.CDK.AWS.APIGatewayv2"
        },
        "java": {
          "maven": {
            "artifactId": "apigatewayv2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.apigatewayv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-apigatewayv2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-apigatewayv2",
          "module": "aws_cdk.aws_apigatewayv2"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling",
          "packageId": "Amazon.CDK.AWS.AutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling",
          "module": "aws_cdk.aws_autoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-hooktargets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets",
          "packageId": "Amazon.CDK.AWS.AutoScaling.HookTargets"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-hooktargets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-hooktargets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-hooktargets",
          "module": "aws_cdk.aws_autoscaling_hooktargets"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudfront": {
      "submodules": {
        "@aws-cdk/aws-cloudfront.experimental": {
          "locationInModule": {
            "filename": "lib/index.ts",
            "line": 11
          }
        }
      },
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFront",
          "packageId": "Amazon.CDK.AWS.CloudFront"
        },
        "java": {
          "maven": {
            "artifactId": "cloudfront",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudfront"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudfront"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudfront",
          "module": "aws_cdk.aws_cloudfront"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-cognito": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Cognito",
          "packageId": "Amazon.CDK.AWS.Cognito"
        },
        "java": {
          "maven": {
            "artifactId": "cognito",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cognito"
        },
        "js": {
          "npm": "@aws-cdk/aws-cognito"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cognito",
          "module": "aws_cdk.aws_cognito"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancing": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancing"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancing",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancing"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancing"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancing",
          "module": "aws_cdk.aws_elasticloadbalancing"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancingv2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancingv2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancingv2",
          "module": "aws_cdk.aws_elasticloadbalancingv2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-route53-targets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53.Targets",
          "packageId": "Amazon.CDK.AWS.Route53.Targets"
        },
        "java": {
          "maven": {
            "artifactId": "route53-targets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53.targets"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53-targets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53-targets",
          "module": "aws_cdk.aws_route53_targets"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SAM",
          "packageId": "Amazon.CDK.AWS.SAM"
        },
        "java": {
          "maven": {
            "artifactId": "sam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sam"
        },
        "js": {
          "npm": "@aws-cdk/aws-sam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sam",
          "module": "aws_cdk.aws_sam"
        }
      }
    },
    "@aws-cdk/aws-secretsmanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SecretsManager",
          "packageId": "Amazon.CDK.AWS.SecretsManager"
        },
        "java": {
          "maven": {
            "artifactId": "secretsmanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.secretsmanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-secretsmanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-secretsmanager",
          "module": "aws_cdk.aws_secretsmanager"
        }
      }
    },
    "@aws-cdk/aws-servicediscovery": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ServiceDiscovery",
          "packageId": "Amazon.CDK.AWS.ServiceDiscovery"
        },
        "java": {
          "maven": {
            "artifactId": "servicediscovery",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.servicediscovery"
        },
        "js": {
          "npm": "@aws-cdk/aws-servicediscovery"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-servicediscovery",
          "module": "aws_cdk.aws_servicediscovery"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sns-subscriptions": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS.Subscriptions",
          "packageId": "Amazon.CDK.AWS.SNS.Subscriptions"
        },
        "java": {
          "maven": {
            "artifactId": "sns-subscriptions",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns.subscriptions"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns-subscriptions"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns-subscriptions",
          "module": "aws_cdk.aws_sns_subscriptions"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::ECS",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.21.0 (build 4262b22)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "ecs"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@aws-cdk/aws-ecs",
  "readme": {
    "markdown": "# Amazon ECS Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis package contains constructs for working with **Amazon Elastic Container\nService** (Amazon ECS).\n\nAmazon ECS is a highly scalable, fast, container management service\nthat makes it easy to run, stop,\nand manage Docker containers on a cluster of Amazon EC2 instances.\n\nFor further information on Amazon ECS,\nsee the [Amazon ECS documentation](https://docs.aws.amazon.com/ecs)\n\nThe following example creates an Amazon ECS cluster,\nadds capacity to it,\nand instantiates the Amazon ECS Service with an automatic load balancer.\n\n```ts\nimport * as ecs from '@aws-cdk/aws-ecs';\n\n// Create an ECS cluster\nconst cluster = new ecs.Cluster(this, 'Cluster', {\n  vpc,\n});\n\n// Add capacity to it\ncluster.addCapacity('DefaultAutoScalingGroupCapacity', {\n  instanceType: new ec2.InstanceType(\"t2.xlarge\"),\n  desiredCapacity: 3,\n});\n\nconst taskDefinition = new ecs.Ec2TaskDefinition(this, 'TaskDef');\n\ntaskDefinition.addContainer('DefaultContainer', {\n  image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  memoryLimitMiB: 512,\n});\n\n// Instantiate an Amazon ECS Service\nconst ecsService = new ecs.Ec2Service(this, 'Service', {\n  cluster,\n  taskDefinition,\n});\n```\n\nFor a set of constructs defining common ECS architectural patterns, see the `@aws-cdk/aws-ecs-patterns` package.\n\n## Launch Types: AWS Fargate vs Amazon EC2\n\nThere are two sets of constructs in this library; one to run tasks on Amazon EC2 and\none to run tasks on AWS Fargate.\n\n- Use the `Ec2TaskDefinition` and `Ec2Service` constructs to run tasks on Amazon EC2 instances running in your account.\n- Use the `FargateTaskDefinition` and `FargateService` constructs to run tasks on\n  instances that are managed for you by AWS.\n\nHere are the main differences:\n\n- **Amazon EC2**: instances are under your control. Complete control of task to host\n  allocation. Required to specify at least a memory reseration or limit for\n  every container. Can use Host, Bridge and AwsVpc networking modes. Can attach\n  Classic Load Balancer. Can share volumes between container and host.\n- **AWS Fargate**: tasks run on AWS-managed instances, AWS manages task to host\n  allocation for you. Requires specification of memory and cpu sizes at the\n  taskdefinition level. Only supports AwsVpc networking modes and\n  Application/Network Load Balancers. Only the AWS log driver is supported.\n  Many host features are not supported such as adding kernel capabilities\n  and mounting host devices/volumes inside the container.\n\nFor more information on Amazon EC2 vs AWS Fargate and networking see the AWS Documentation:\n[AWS Fargate](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS_Fargate.html) and\n[Task Networking](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html).\n\n## Clusters\n\nA `Cluster` defines the infrastructure to run your\ntasks on. You can run many tasks on a single cluster.\n\nThe following code creates a cluster that can run AWS Fargate tasks:\n\n```ts\nconst cluster = new ecs.Cluster(this, 'Cluster', {\n  vpc: vpc\n});\n```\n\nTo use tasks with Amazon EC2 launch-type, you have to add capacity to\nthe cluster in order for tasks to be scheduled on your instances.  Typically,\nyou add an AutoScalingGroup with instances running the latest\nAmazon ECS-optimized AMI to the cluster. There is a method to build and add such an\nAutoScalingGroup automatically, or you can supply a customized AutoScalingGroup\nthat you construct yourself. It's possible to add multiple AutoScalingGroups\nwith various instance types.\n\nThe following example creates an Amazon ECS cluster and adds capacity to it:\n\n```ts\nconst cluster = new ecs.Cluster(this, 'Cluster', {\n  vpc: vpc\n});\n\n// Either add default capacity\ncluster.addCapacity('DefaultAutoScalingGroupCapacity', {\n  instanceType: new ec2.InstanceType(\"t2.xlarge\"),\n  desiredCapacity: 3,\n});\n\n// Or add customized capacity. Be sure to start the Amazon ECS-optimized AMI.\nconst autoScalingGroup = new autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: new ec2.InstanceType('t2.xlarge'),\n  machineImage: EcsOptimizedImage.amazonLinux(),\n  // Or use Amazon ECS-Optimized Amazon Linux 2 AMI\n  // machineImage: EcsOptimizedImage.amazonLinux2(),\n  desiredCapacity: 3,\n  // ... other options here ...\n});\n\ncluster.addAutoScalingGroup(autoScalingGroup);\n```\n\nIf you omit the property `vpc`, the construct will create a new VPC with two AZs.\n\n\n### Bottlerocket\n\n[Bottlerocket](https://aws.amazon.com/bottlerocket/) is a Linux-based open source operating system that is\npurpose-built by AWS for running containers. You can launch Amazon ECS container instances with the Bottlerocket AMI.\n\n> **NOTICE**: The Bottlerocket AMI is in developer preview release for Amazon ECS and is subject to change.\n\nThe following example will create a capacity with self-managed Amazon EC2 capacity of 2 `c5.large` Linux instances running with `Bottlerocket` AMI.\n\nNote that you must specify either a `machineImage` or `machineImageType`, at least one, not both.\n\nThe following example adds Bottlerocket capacity to the cluster:\n\n```ts\ncluster.addCapacity('bottlerocket-asg', {\n  minCapacity: 2,\n  instanceType: new ec2.InstanceType('c5.large'),\n  machineImageType: ecs.MachineImageType.BOTTLEROCKET,\n});\n```\n\n### Spot Instances\n\nTo add spot instances into the cluster, you must specify the `spotPrice` in the `ecs.AddCapacityOptions` and optionally enable the `spotInstanceDraining` property.\n\n```ts\n// Add an AutoScalingGroup with spot instances to the existing cluster\ncluster.addCapacity('AsgSpot', {\n  maxCapacity: 2,\n  minCapacity: 2,\n  desiredCapacity: 2,\n  instanceType: new ec2.InstanceType('c5.xlarge'),\n  spotPrice: '0.0735',\n  // Enable the Automated Spot Draining support for Amazon ECS\n  spotInstanceDraining: true,\n});\n```\n\n### SNS Topic Encryption\n\nWhen the `ecs.AddCapacityOptions` that you provide has a non-zero `taskDrainTime` (the default) then an SNS topic and Lambda are created to ensure that the\ncluster's instances have been properly drained of tasks before terminating. The SNS Topic is sent the instance-terminating lifecycle event from the AutoScalingGroup,\nand the Lambda acts on that event. If you wish to engage [server-side encryption](https://docs.aws.amazon.com/sns/latest/dg/sns-data-encryption.html) for this SNS Topic\nthen you may do so by providing a KMS key for the `topicEncryptionKey` propery of `ecs.AddCapacityOptions`.\n\n```ts\n// Given\nconst key = kms.Key(...);\n// Then, use that key to encrypt the lifecycle-event SNS Topic.\ncluster.addCapacity('ASGEncryptedSNS', {\n  instanceType: new ec2.InstanceType(\"t2.xlarge\"),\n  desiredCapacity: 3,\n  topicEncryptionKey: key,\n});\n```\n\n## Task definitions\n\nA task Definition describes what a single copy of a **task** should look like.\nA task definition has one or more containers; typically, it has one\nmain container (the *default container* is the first one that's added\nto the task definition, and it is marked *essential*) and optionally\nsome supporting containers which are used to support the main container,\ndoings things like upload logs or metrics to monitoring services.\n\nTo run a task or service with Amazon EC2 launch type, use the `Ec2TaskDefinition`. For AWS Fargate tasks/services, use the\n`FargateTaskDefinition`. These classes provide a simplified API that only contain\nproperties relevant for that specific launch type.\n\nFor a `FargateTaskDefinition`, specify the task size (`memoryLimitMiB` and `cpu`):\n\n```ts\nconst fargateTaskDefinition = new ecs.FargateTaskDefinition(this, 'TaskDef', {\n  memoryLimitMiB: 512,\n  cpu: 256\n});\n```\n\nTo add containers to a task definition, call `addContainer()`:\n\n```ts\nconst container = fargateTaskDefinition.addContainer(\"WebContainer\", {\n  // Use an image from DockerHub\n  image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  // ... other options here ...\n});\n```\n\nFor a `Ec2TaskDefinition`:\n\n```ts\nconst ec2TaskDefinition = new ecs.Ec2TaskDefinition(this, 'TaskDef', {\n  networkMode: NetworkMode.BRIDGE\n});\n\nconst container = ec2TaskDefinition.addContainer(\"WebContainer\", {\n  // Use an image from DockerHub\n  image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  memoryLimitMiB: 1024\n  // ... other options here ...\n});\n```\n\nYou can specify container properties when you add them to the task definition, or with various methods, e.g.:\n\n```ts\ncontainer.addPortMappings({\n  containerPort: 3000\n})\n```\n\nTo add data volumes to a task definition, call `addVolume()`:\n\n```ts\nconst volume = ecs.Volume(\"Volume\", {\n  // Use an Elastic FileSystem\n  name: \"mydatavolume\",\n  efsVolumeConfiguration: ecs.EfsVolumeConfiguration({\n    fileSystemId: \"EFS\"\n    // ... other options here ...\n  })\n});\n\nconst container = fargateTaskDefinition.addVolume(\"mydatavolume\");\n```\n\nTo use a TaskDefinition that can be used with either Amazon EC2 or\nAWS Fargate launch types, use the `TaskDefinition` construct.\n\nWhen creating a task definition you have to specify what kind of\ntasks you intend to run: Amazon EC2, AWS Fargate, or both.\nThe following example uses both:\n\n```ts\nconst taskDefinition = new ecs.TaskDefinition(this, 'TaskDef', {\n  memoryMiB: '512',\n  cpu: '256',\n  networkMode: NetworkMode.AWS_VPC,\n  compatibility: ecs.Compatibility.EC2_AND_FARGATE,\n});\n```\n\n### Images\n\nImages supply the software that runs inside the container. Images can be\nobtained from either DockerHub or from ECR repositories, or built directly from a local Dockerfile.\n\n- `ecs.ContainerImage.fromRegistry(imageName)`: use a public image.\n- `ecs.ContainerImage.fromRegistry(imageName, { credentials: mySecret })`: use a private image that requires credentials.\n- `ecs.ContainerImage.fromEcrRepository(repo, tag)`: use the given ECR repository as the image\n  to start. If no tag is provided, \"latest\" is assumed.\n- `ecs.ContainerImage.fromAsset('./image')`: build and upload an\n  image directly from a `Dockerfile` in your source directory.\n- `ecs.ContainerImage.fromDockerImageAsset(asset)`: uses an existing\n  `@aws-cdk/aws-ecr-assets.DockerImageAsset` as a container image.\n\n### Environment variables\n\nTo pass environment variables to the container, you can use the `environment`, `environmentFiles`, and `secrets` props.\n\n```ts\ntaskDefinition.addContainer('container', {\n  image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  memoryLimitMiB: 1024,\n  environment: { // clear text, not for sensitive data\n    STAGE: 'prod',\n  },\n  environmentFiles: [ // list of environment files hosted either on local disk or S3\n    ecs.EnvironmentFile.fromAsset('./demo-env-file.env'),\n    ecs.EnvironmentFile.fromBucket(s3Bucket, 'assets/demo-env-file.env'),\n  ],\n  secrets: { // Retrieved from AWS Secrets Manager or AWS Systems Manager Parameter Store at container start-up.\n    SECRET: ecs.Secret.fromSecretsManager(secret),\n    DB_PASSWORD: ecs.Secret.fromSecretsManager(dbSecret, 'password'), // Reference a specific JSON field, (requires platform version 1.4.0 or later for Fargate tasks)\n    PARAMETER: ecs.Secret.fromSsmParameter(parameter),\n  }\n});\n```\n\nThe task execution role is automatically granted read permissions on the secrets/parameters. Support for environment\nfiles is restricted to the EC2 launch type for files hosted on S3. Further details provided in the AWS documentation\nabout [specifying environment variables](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html).\n\n## Service\n\nA `Service` instantiates a `TaskDefinition` on a `Cluster` a given number of\ntimes, optionally associating them with a load balancer.\nIf a task fails,\nAmazon ECS automatically restarts the task.\n\n```ts\nconst taskDefinition;\n\nconst service = new ecs.FargateService(this, 'Service', {\n  cluster,\n  taskDefinition,\n  desiredCount: 5\n});\n```\n\n`Services` by default will create a security group if not provided.\nIf you'd like to specify which security groups to use you can override the `securityGroups` property.\n\n### Deployment circuit breaker and rollback\n\nAmazon ECS [deployment circuit breaker](https://aws.amazon.com/tw/blogs/containers/announcing-amazon-ecs-deployment-circuit-breaker/)\nautomatically rolls back unhealthy service deployments without the need for manual intervention. Use `circuitBreaker` to enable\ndeployment circuit breaker and optionally enable `rollback` for automatic rollback. See [Using the deployment circuit breaker](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-ecs.html)\nfor more details.\n\n```ts\nconst service = new ecs.FargateService(stack, 'Service', {\n  cluster,\n  taskDefinition,\n  circuitBreaker: { rollback: true },\n});\n```\n\n### Include an application/network load balancer\n\n`Services` are load balancing targets and can be added to a target group, which will be attached to an application/network load balancers:\n\n```ts\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\nconst service = new ecs.FargateService(this, 'Service', { /* ... */ });\n\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', { vpc, internetFacing: true });\nconst listener = lb.addListener('Listener', { port: 80 });\nconst targetGroup1 = listener.addTargets('ECS1', {\n  port: 80,\n  targets: [service]\n});\nconst targetGroup2 = listener.addTargets('ECS2', {\n  port: 80,\n  targets: [service.loadBalancerTarget({\n    containerName: 'MyContainer',\n    containerPort: 8080\n  })]\n});\n```\n\nNote that in the example above, the default `service` only allows you to register the first essential container or the first mapped port on the container as a target and add it to a new target group. To have more control over which container and port to register as targets, you can use `service.loadBalancerTarget()` to return a load balancing target for a specific container and port.\n\nAlternatively, you can also create all load balancer targets to be registered in this service, add them to target groups, and attach target groups to listeners accordingly.\n\n```ts\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\nconst service = new ecs.FargateService(this, 'Service', { /* ... */ });\n\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', { vpc, internetFacing: true });\nconst listener = lb.addListener('Listener', { port: 80 });\nservice.registerLoadBalancerTargets(\n  {\n    containerName: 'web',\n    containerPort: 80,\n    newTargetGroupId: 'ECS',\n    listener: ecs.ListenerConfig.applicationListener(listener, {\n      protocol: elbv2.ApplicationProtocol.HTTPS\n    }),\n  },\n);\n```\n\n### Using a Load Balancer from a different Stack\n\nIf you want to put your Load Balancer and the Service it is load balancing to in\ndifferent stacks, you may not be able to use the convenience methods\n`loadBalancer.addListener()` and `listener.addTargets()`.\n\nThe reason is that these methods will create resources in the same Stack as the\nobject they're called on, which may lead to cyclic references between stacks.\nInstead, you will have to create an `ApplicationListener` in the service stack,\nor an empty `TargetGroup` in the load balancer stack that you attach your\nservice to.\n\nSee the [ecs/cross-stack-load-balancer example](https://github.com/aws-samples/aws-cdk-examples/tree/master/typescript/ecs/cross-stack-load-balancer/)\nfor the alternatives.\n\n### Include a classic load balancer\n\n`Services` can also be directly attached to a classic load balancer as targets:\n\n```ts\nimport * as elb from '@aws-cdk/aws-elasticloadbalancing';\n\nconst service = new ecs.Ec2Service(this, 'Service', { /* ... */ });\n\nconst lb = new elb.LoadBalancer(stack, 'LB', { vpc });\nlb.addListener({ externalPort: 80 });\nlb.addTarget(service);\n```\n\nSimilarly, if you want to have more control over load balancer targeting:\n\n```ts\nimport * as elb from '@aws-cdk/aws-elasticloadbalancing';\n\nconst service = new ecs.Ec2Service(this, 'Service', { /* ... */ });\n\nconst lb = new elb.LoadBalancer(stack, 'LB', { vpc });\nlb.addListener({ externalPort: 80 });\nlb.addTarget(service.loadBalancerTarget{\n  containerName: 'MyContainer',\n  containerPort: 80\n});\n```\n\nThere are two higher-level constructs available which include a load balancer for you that can be found in the aws-ecs-patterns module:\n\n- `LoadBalancedFargateService`\n- `LoadBalancedEc2Service`\n\n## Task Auto-Scaling\n\nYou can configure the task count of a service to match demand. Task auto-scaling is\nconfigured by calling `autoScaleTaskCount()`:\n\n```ts\nconst scaling = service.autoScaleTaskCount({ maxCapacity: 10 });\nscaling.scaleOnCpuUtilization('CpuScaling', {\n  targetUtilizationPercent: 50\n});\n\nscaling.scaleOnRequestCount('RequestScaling', {\n  requestsPerTarget: 10000,\n  targetGroup: target\n})\n```\n\nTask auto-scaling is powered by *Application Auto-Scaling*.\nSee that section for details.\n\n## Instance Auto-Scaling\n\nIf you're running on AWS Fargate, AWS manages the physical machines that your\ncontainers are running on for you. If you're running an Amazon ECS cluster however,\nyour Amazon EC2 instances might fill up as your number of Tasks goes up.\n\nTo avoid placement errors, configure auto-scaling for your\nAmazon EC2 instance group so that your instance count scales with demand. To keep\nyour Amazon EC2 instances halfway loaded, scaling up to a maximum of 30 instances\nif required:\n\n```ts\nconst autoScalingGroup = cluster.addCapacity('DefaultAutoScalingGroup', {\n  instanceType: new ec2.InstanceType(\"t2.xlarge\"),\n  minCapacity: 3,\n  maxCapacity: 30,\n  desiredCapacity: 3,\n\n  // Give instances 5 minutes to drain running tasks when an instance is\n  // terminated. This is the default, turn this off by specifying 0 or\n  // change the timeout up to 900 seconds.\n  taskDrainTime: Duration.seconds(300)\n});\n\nautoScalingGroup.scaleOnCpuUtilization('KeepCpuHalfwayLoaded', {\n  targetUtilizationPercent: 50\n});\n```\n\nSee the `@aws-cdk/aws-autoscaling` library for more autoscaling options\nyou can configure on your instances.\n\n## Integration with CloudWatch Events\n\nTo start an Amazon ECS task on an Amazon EC2-backed Cluster, instantiate an\n`@aws-cdk/aws-events-targets.EcsTask` instead of an `Ec2Service`:\n\n```ts\nimport * as targets from '@aws-cdk/aws-events-targets';\n\n// Create a Task Definition for the container to start\nconst taskDefinition = new ecs.Ec2TaskDefinition(this, 'TaskDef');\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromAsset(path.resolve(__dirname, '..', 'eventhandler-image')),\n  memoryLimitMiB: 256,\n  logging: new ecs.AwsLogDriver({ streamPrefix: 'EventDemo' })\n});\n\n// An Rule that describes the event trigger (in this case a scheduled run)\nconst rule = new events.Rule(this, 'Rule', {\n  schedule: events.Schedule.expression('rate(1 min)')\n});\n\n// Pass an environment variable to the container 'TheContainer' in the task\nrule.addTarget(new targets.EcsTask({\n  cluster,\n  taskDefinition,\n  taskCount: 1,\n  containerOverrides: [{\n    containerName: 'TheContainer',\n    environment: [{\n      name: 'I_WAS_TRIGGERED',\n      value: 'From CloudWatch Events'\n    }]\n  }]\n}));\n```\n\n## Log Drivers\n\nCurrently Supported Log Drivers:\n\n- awslogs\n- fluentd\n- gelf\n- journald\n- json-file\n- splunk\n- syslog\n- awsfirelens\n\n### awslogs Log Driver\n\n```ts\n// Create a Task Definition for the container to start\nconst taskDefinition = new ecs.Ec2TaskDefinition(this, 'TaskDef');\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('example-image'),\n  memoryLimitMiB: 256,\n  logging: ecs.LogDrivers.awsLogs({ streamPrefix: 'EventDemo' })\n});\n```\n\n### fluentd Log Driver\n\n```ts\n// Create a Task Definition for the container to start\nconst taskDefinition = new ecs.Ec2TaskDefinition(this, 'TaskDef');\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('example-image'),\n  memoryLimitMiB: 256,\n  logging: ecs.LogDrivers.fluentd()\n});\n```\n\n### gelf Log Driver\n\n```ts\n// Create a Task Definition for the container to start\nconst taskDefinition = new ecs.Ec2TaskDefinition(this, 'TaskDef');\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('example-image'),\n  memoryLimitMiB: 256,\n  logging: ecs.LogDrivers.gelf({ address: 'my-gelf-address' })\n});\n```\n\n### journald Log Driver\n\n```ts\n// Create a Task Definition for the container to start\nconst taskDefinition = new ecs.Ec2TaskDefinition(this, 'TaskDef');\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('example-image'),\n  memoryLimitMiB: 256,\n  logging: ecs.LogDrivers.journald()\n});\n```\n\n### json-file Log Driver\n\n```ts\n// Create a Task Definition for the container to start\nconst taskDefinition = new ecs.Ec2TaskDefinition(this, 'TaskDef');\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('example-image'),\n  memoryLimitMiB: 256,\n  logging: ecs.LogDrivers.jsonFile()\n});\n```\n\n### splunk Log Driver\n\n```ts\n// Create a Task Definition for the container to start\nconst taskDefinition = new ecs.Ec2TaskDefinition(this, 'TaskDef');\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('example-image'),\n  memoryLimitMiB: 256,\n  logging: ecs.LogDrivers.splunk({\n    token: cdk.SecretValue.secretsManager('my-splunk-token'),\n    url: 'my-splunk-url'\n  })\n});\n```\n\n### syslog Log Driver\n\n```ts\n// Create a Task Definition for the container to start\nconst taskDefinition = new ecs.Ec2TaskDefinition(this, 'TaskDef');\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('example-image'),\n  memoryLimitMiB: 256,\n  logging: ecs.LogDrivers.syslog()\n});\n```\n\n### firelens Log Driver\n\n```ts\n// Create a Task Definition for the container to start\nconst taskDefinition = new ecs.Ec2TaskDefinition(this, 'TaskDef');\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('example-image'),\n  memoryLimitMiB: 256,\n  logging: ecs.LogDrivers.firelens({\n    options: {\n        Name: 'firehose',\n        region: 'us-west-2',\n        delivery_stream: 'my-stream',\n    }\n  })\n});\n```\n\n### Generic Log Driver\n\nA generic log driver object exists to provide a lower level abstraction of the log driver configuration.\n\n```ts\n// Create a Task Definition for the container to start\nconst taskDefinition = new ecs.Ec2TaskDefinition(this, 'TaskDef');\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('example-image'),\n  memoryLimitMiB: 256,\n  logging: new ecs.GenericLogDriver({\n    logDriver: 'fluentd',\n    options: {\n      tag: 'example-tag'\n    }\n  })\n});\n```\n\n## Capacity Providers\n\nCurrently, only `FARGATE` and `FARGATE_SPOT` capacity providers are supported.\n\nTo enable capacity providers on your cluster, set the `capacityProviders` field\nto [`FARGATE`, `FARGATE_SPOT`]. Then, specify capacity provider strategies on\nthe `capacityProviderStrategies` field for your Fargate Service.\n\n```ts\nimport * as cdk from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as ecs from '../../lib';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-ecs-integ-capacity-provider');\n\nconst vpc = new ec2.Vpc(stack, 'Vpc', { maxAzs: 2 });\n\nconst cluster = new ecs.Cluster(stack, 'FargateCPCluster', {\n  vpc,\n  capacityProviders: ['FARGATE', 'FARGATE_SPOT'],\n});\n\nconst taskDefinition = new ecs.FargateTaskDefinition(stack, 'TaskDef');\n\ntaskDefinition.addContainer('web', {\n  image: ecs.ContainerImage.fromRegistry('amazon/amazon-ecs-sample'),\n});\n\nnew ecs.FargateService(stack, 'FargateService', {\n  cluster,\n  taskDefinition,\n  capacityProviderStrategies: [\n    {\n      capacityProvider: 'FARGATE_SPOT',\n      weight: 2,\n    },\n    {\n      capacityProvider: 'FARGATE',\n      weight: 1,\n    }\n  ],\n});\n\napp.synth();\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-ecs",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.ECS",
      "packageId": "Amazon.CDK.AWS.ECS"
    },
    "java": {
      "maven": {
        "artifactId": "ecs",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.ecs"
    },
    "js": {
      "npm": "@aws-cdk/aws-ecs"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-ecs",
      "module": "aws_cdk.aws_ecs"
    }
  },
  "types": {
    "@aws-cdk/aws-ecs.AddAutoScalingGroupCapacityOptions": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for adding an AutoScalingGroup."
      },
      "fqn": "@aws-cdk/aws-ecs.AddAutoScalingGroupCapacityOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 845
      },
      "name": "AddAutoScalingGroupCapacityOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies whether the containers can access the container instance role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 851
          },
          "name": "canContainersAccessInstanceRole",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "MachineImageType.AMAZON_LINUX_2",
            "stability": "stable",
            "summary": "Specify the machine image type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 890
          },
          "name": "machineImageType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.MachineImageType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "For more information, see [Using Spot Instances](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-spot.html).",
            "stability": "stable",
            "summary": "Specify whether to enable Automated Draining for Spot Instances running Amazon ECS Services."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 872
          },
          "name": "spotInstanceDraining",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5)",
            "remarks": "This creates a Lambda function that is used by a lifecycle hook for the\nAutoScalingGroup that will delay instance termination until all ECS tasks\nhave drained from the instance. Set to 0 to disable task draining.\n\nSet to 0 to disable task draining.",
            "stability": "stable",
            "summary": "The time period to wait before force terminating an instance that is draining."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 864
          },
          "name": "taskDrainTime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The SNS Topic will not be encrypted.",
            "stability": "stable",
            "summary": "If {@link AddAutoScalingGroupCapacityOptions.taskDrainTime} is non-zero, then the ECS cluster creates an SNS Topic to as part of a system to drain instances of tasks when the instance is being shut down. If this property is provided, then this key will be used to encrypt the contents of that SNS Topic. See [SNS Data Encryption](https://docs.aws.amazon.com/sns/latest/dg/sns-data-encryption.html) for more information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 882
          },
          "name": "topicEncryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.AddCapacityOptions": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for adding instance capacity to an AutoScalingGroup."
      },
      "fqn": "@aws-cdk/aws-ecs.AddCapacityOptions",
      "interfaces": [
        "@aws-cdk/aws-ecs.AddAutoScalingGroupCapacityOptions",
        "@aws-cdk/aws-autoscaling.CommonAutoScalingGroupProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 896
      },
      "name": "AddCapacityOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The EC2 instance type to use when launching instances into the AutoScalingGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 900
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Amazon Linux 2",
            "remarks": "For more information, see\n[Amazon ECS-optimized AMIs](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html).\nYou must define either `machineImage` or `machineImageType`, not both.",
            "stability": "stable",
            "summary": "The ECS-optimized AMI variant to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 909
          },
          "name": "machineImage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IMachineImage"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.AmiHardwareType": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "remarks": "For more information, see\n[Amazon ECS-optimized AMIs](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html).",
        "stability": "stable",
        "summary": "The ECS-optimized AMI variant to use."
      },
      "fqn": "@aws-cdk/aws-ecs.AmiHardwareType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 940
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Use the standard Amazon ECS-optimized AMI."
          },
          "name": "STANDARD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use the Amazon ECS GPU-optimized AMI."
          },
          "name": "GPU"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use the Amazon ECS-optimized Amazon Linux 2 (arm64) AMI."
          },
          "name": "ARM"
        }
      ],
      "name": "AmiHardwareType"
    },
    "@aws-cdk/aws-ecs.AppMeshProxyConfiguration": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.ProxyConfiguration",
      "docs": {
        "remarks": "For tasks using the EC2 launch type, the container instances require at least version 1.26.0 of the container agent and at least version\n1.26.0-1 of the ecs-init package to enable a proxy configuration. If your container instances are launched from the Amazon ECS-optimized\nAMI version 20190301 or later, then they contain the required versions of the container agent and ecs-init.\nFor more information, see [Amazon ECS-optimized AMIs](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html).\n\nFor tasks using the Fargate launch type, the task or service requires platform version 1.3.0 or later.",
        "stability": "stable",
        "summary": "The class for App Mesh proxy configurations."
      },
      "fqn": "@aws-cdk/aws-ecs.AppMeshProxyConfiguration",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the AppMeshProxyConfiguration class."
        },
        "locationInModule": {
          "filename": "lib/proxy-configuration/app-mesh-proxy-configuration.ts",
          "line": 81
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.AppMeshProxyConfigurationConfigProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/proxy-configuration/app-mesh-proxy-configuration.ts",
        "line": 77
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the proxy configuration is configured on a task definition."
          },
          "locationInModule": {
            "filename": "lib/proxy-configuration/app-mesh-proxy-configuration.ts",
            "line": 93
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.ProxyConfiguration",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_taskDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ProxyConfigurationProperty"
            }
          }
        }
      ],
      "name": "AppMeshProxyConfiguration"
    },
    "@aws-cdk/aws-ecs.AppMeshProxyConfigurationConfigProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The configuration to use when setting an App Mesh proxy configuration."
      },
      "fqn": "@aws-cdk/aws-ecs.AppMeshProxyConfigurationConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/proxy-configuration/app-mesh-proxy-configuration.ts",
        "line": 55
      },
      "name": "AppMeshProxyConfigurationConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the container that will serve as the App Mesh proxy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/proxy-configuration/app-mesh-proxy-configuration.ts",
            "line": 59
          },
          "name": "containerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The set of network configuration parameters to provide the Container Network Interface (CNI) plugin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/proxy-configuration/app-mesh-proxy-configuration.ts",
            "line": 64
          },
          "name": "properties",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.AppMeshProxyConfigurationProps"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.AppMeshProxyConfigurationProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Interface for setting the properties of proxy configuration."
      },
      "fqn": "@aws-cdk/aws-ecs.AppMeshProxyConfigurationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/proxy-configuration/app-mesh-proxy-configuration.ts",
        "line": 12
      },
      "name": "AppMeshProxyConfigurationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Network traffic to these ports is forwarded to the ProxyIngressPort and ProxyEgressPort.",
            "stability": "stable",
            "summary": "The list of ports that the application uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/proxy-configuration/app-mesh-proxy-configuration.ts",
            "line": 29
          },
          "name": "appPorts",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specifies the port that outgoing traffic from the AppPorts is directed to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/proxy-configuration/app-mesh-proxy-configuration.ts",
            "line": 39
          },
          "name": "proxyEgressPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specifies the port that incoming traffic to the AppPorts is directed to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/proxy-configuration/app-mesh-proxy-configuration.ts",
            "line": 34
          },
          "name": "proxyIngressPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "It can be an empty list.",
            "stability": "stable",
            "summary": "The egress traffic going to these specified IP addresses is ignored and not redirected to the ProxyEgressPort."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/proxy-configuration/app-mesh-proxy-configuration.ts",
            "line": 49
          },
          "name": "egressIgnoredIPs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "It can be an empty list.",
            "stability": "stable",
            "summary": "The egress traffic going to these specified ports is ignored and not redirected to the ProxyEgressPort."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/proxy-configuration/app-mesh-proxy-configuration.ts",
            "line": 44
          },
          "name": "egressIgnoredPorts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is used to ensure the proxy ignores its own traffic. If IgnoredUID is specified, this field can be empty.",
            "stability": "stable",
            "summary": "The group ID (GID) of the proxy container as defined by the user parameter in a container definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/proxy-configuration/app-mesh-proxy-configuration.ts",
            "line": 23
          },
          "name": "ignoredGID",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is used to ensure the proxy ignores its own traffic. If IgnoredGID is specified, this field can be empty.",
            "stability": "stable",
            "summary": "The user ID (UID) of the proxy container as defined by the user parameter in a container definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/proxy-configuration/app-mesh-proxy-configuration.ts",
            "line": 17
          },
          "name": "ignoredUID",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.AssetEnvironmentFile": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.EnvironmentFile",
      "docs": {
        "stability": "stable",
        "summary": "Environment file from a local directory."
      },
      "fqn": "@aws-cdk/aws-ecs.AssetEnvironmentFile",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/environment-file.ts",
          "line": 50
        },
        "parameters": [
          {
            "docs": {
              "summary": "The path to the asset file or directory."
            },
            "name": "path",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-s3-assets.AssetOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/environment-file.ts",
        "line": 43
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the container is initialized to allow this object to bind to the stack."
          },
          "locationInModule": {
            "filename": "lib/environment-file.ts",
            "line": 54
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.EnvironmentFile",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.EnvironmentFileConfig"
            }
          }
        }
      ],
      "name": "AssetEnvironmentFile",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The path to the asset file or directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/environment-file.ts",
            "line": 50
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.AssetImage": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.ContainerImage",
      "docs": {
        "stability": "stable",
        "summary": "An image that will be built from a local directory with a Dockerfile."
      },
      "fqn": "@aws-cdk/aws-ecs.AssetImage",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the AssetImage class."
        },
        "locationInModule": {
          "filename": "lib/images/asset-image.ts",
          "line": 24
        },
        "parameters": [
          {
            "docs": {
              "summary": "The directory containing the Dockerfile."
            },
            "name": "directory",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.AssetImageProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/images/asset-image.ts",
        "line": 18
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the image is used by a ContainerDefinition."
          },
          "locationInModule": {
            "filename": "lib/images/asset-image.ts",
            "line": 28
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.ContainerImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ContainerImageConfig"
            }
          }
        }
      ],
      "name": "AssetImage"
    },
    "@aws-cdk/aws-ecs.AssetImageProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for building an AssetImage."
      },
      "fqn": "@aws-cdk/aws-ecs.AssetImageProps",
      "interfaces": [
        "@aws-cdk/aws-ecr-assets.DockerImageAssetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/images/asset-image.ts",
        "line": 12
      },
      "name": "AssetImageProps"
    },
    "@aws-cdk/aws-ecs.AuthorizationConfig": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The authorization configuration details for the Amazon EFS file system."
      },
      "fqn": "@aws-cdk/aws-ecs.AuthorizationConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 773
      },
      "name": "AuthorizationConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "No id",
            "remarks": "If an access point is specified, the root directory value will be\nrelative to the directory set for the access point.\nIf specified, transit encryption must be enabled in the EFSVolumeConfiguration.",
            "stability": "stable",
            "summary": "The access point ID to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 782
          },
          "name": "accessPointId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "If this parameter is omitted, the default value of DISABLED is used.",
            "remarks": "If enabled, transit encryption must be enabled in the EFSVolumeConfiguration.\n\nValid values: ENABLED | DISABLED",
            "stability": "stable",
            "summary": "Whether or not to use the Amazon ECS task IAM role defined in a task definition when mounting the Amazon EFS file system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 792
          },
          "name": "iam",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.AwsLogDriver": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.LogDriver",
      "docs": {
        "stability": "stable",
        "summary": "A log driver that sends log information to CloudWatch Logs."
      },
      "fqn": "@aws-cdk/aws-ecs.AwsLogDriver",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the AwsLogDriver class."
        },
        "locationInModule": {
          "filename": "lib/log-drivers/aws-log-driver.ts",
          "line": 83
        },
        "parameters": [
          {
            "docs": {
              "summary": "the awslogs log driver configuration options."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.AwsLogDriverProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/log-drivers/aws-log-driver.ts",
        "line": 70
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the log driver is configured on a container."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/aws-log-driver.ts",
            "line": 94
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.LogDriver",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriverConfig"
            }
          }
        }
      ],
      "name": "AwsLogDriver",
      "properties": [
        {
          "docs": {
            "remarks": "Only available after the LogDriver has been bound to a ContainerDefinition.",
            "stability": "stable",
            "summary": "The log group to send log streams to."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/aws-log-driver.ts",
            "line": 76
          },
          "name": "logGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogGroup"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.AwsLogDriverProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specifies the awslogs log driver configuration options."
      },
      "fqn": "@aws-cdk/aws-ecs.AwsLogDriverProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/log-drivers/aws-log-driver.ts",
        "line": 14
      },
      "name": "AwsLogDriverProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The awslogs-stream-prefix option allows you to associate a log stream\nwith the specified prefix, the container name, and the ID of the Amazon\nECS task to which the container belongs. If you specify a prefix with\nthis option, then the log stream takes the following format:\n\n     prefix-name/container-name/ecs-task-id",
            "stability": "stable",
            "summary": "Prefix for the log streams."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/aws-log-driver.ts",
            "line": 25
          },
          "name": "streamPrefix",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No multiline matching.",
            "remarks": "A log message consists of a line that matches the pattern and any\nfollowing lines that don’t match the pattern. Thus the matched line is\nthe delimiter between log messages.",
            "stability": "stable",
            "summary": "This option defines a multiline start pattern in Python strftime format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/aws-log-driver.ts",
            "line": 51
          },
          "name": "datetimeFormat",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A log group is automatically created.",
            "stability": "stable",
            "summary": "The log group to log to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/aws-log-driver.ts",
            "line": 32
          },
          "name": "logGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Logs never expire.",
            "stability": "stable",
            "summary": "The number of days log events are kept in CloudWatch Logs when the log group is automatically created by this construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/aws-log-driver.ts",
            "line": 40
          },
          "name": "logRetention",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.RetentionDays"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No multiline matching.",
            "remarks": "A log message consists of a line that matches the pattern and any\nfollowing lines that don’t match the pattern. Thus the matched line is\nthe delimiter between log messages.\n\nThis option is ignored if datetimeFormat is also configured.",
            "stability": "stable",
            "summary": "This option defines a multiline start pattern using a regular expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/aws-log-driver.ts",
            "line": 64
          },
          "name": "multilinePattern",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.BaseLogDriverProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ecs.BaseLogDriverProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/log-drivers/base-log-driver.ts",
        "line": 1
      },
      "name": "BaseLogDriverProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No env",
            "remarks": "If there is collision between\nlabel and env keys, the value of the env takes precedence. Adds additional fields\nto the extra attributes of a logging message.",
            "stability": "stable",
            "summary": "The env option takes an array of keys."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/base-log-driver.ts",
            "line": 27
          },
          "name": "env",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No envRegex",
            "remarks": "Its value is a regular\nexpression to match logging-related environment variables. It is used for advanced\nlog tag options.",
            "stability": "stable",
            "summary": "The env-regex option is similar to and compatible with env."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/base-log-driver.ts",
            "line": 36
          },
          "name": "envRegex",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No labels",
            "remarks": "If there is collision\nbetween label and env keys, the value of the env takes precedence. Adds additional\nfields to the extra attributes of a logging message.",
            "stability": "stable",
            "summary": "The labels option takes an array of keys."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/base-log-driver.ts",
            "line": 18
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The first 12 characters of the container ID",
            "remarks": "Refer to the log tag option documentation for customizing the\nlog tag format.",
            "stability": "stable",
            "summary": "By default, Docker uses the first 12 characters of the container ID to tag log messages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/base-log-driver.ts",
            "line": 9
          },
          "name": "tag",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.BaseService": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "The base class for Ec2Service and FargateService services."
      },
      "fqn": "@aws-cdk/aws-ecs.BaseService",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the BaseService class."
        },
        "locationInModule": {
          "filename": "lib/base/base-service.ts",
          "line": 359
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.BaseServiceProps"
            }
          },
          {
            "name": "additionalProps",
            "type": {
              "primitive": "any"
            }
          },
          {
            "name": "taskDefinition",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ecs.IBaseService",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget",
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget",
        "@aws-cdk/aws-elasticloadbalancing.ILoadBalancerTarget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 300
      },
      "methods": [
        {
          "docs": {
            "remarks": "Don't call this function directly. Instead, call `listener.addTargets()`\nto add this service to a load balancer.",
            "stability": "stable",
            "summary": "This method is called to attach this service to an Application Load Balancer."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 431
          },
          "name": "attachToApplicationTargetGroup",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget",
          "parameters": [
            {
              "name": "targetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
            }
          }
        },
        {
          "docs": {
            "remarks": "Don't call this. Call `loadBalancer.addTarget()` instead.",
            "stability": "stable",
            "summary": "Registers the service as a target of a Classic Load Balancer (CLB)."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 440
          },
          "name": "attachToClassicLB",
          "overrides": "@aws-cdk/aws-elasticloadbalancing.ILoadBalancerTarget",
          "parameters": [
            {
              "name": "loadBalancer",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancer"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Don't call this function directly. Instead, call `listener.addTargets()`\nto add this service to a load balancer.",
            "stability": "stable",
            "summary": "This method is called to attach this service to a Network Load Balancer."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 518
          },
          "name": "attachToNetworkTargetGroup",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget",
          "parameters": [
            {
              "name": "targetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An attribute representing the minimum and maximum task count for an AutoScalingGroup."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 525
          },
          "name": "autoScaleTaskCount",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.EnableScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ScalableTaskCount"
            }
          }
        },
        {
          "docs": {
            "deprecated": "use configureAwsVpcNetworkingWithSecurityGroups instead.",
            "stability": "deprecated",
            "summary": "This method is called to create a networkConfiguration."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 637
          },
          "name": "configureAwsVpcNetworking",
          "parameters": [
            {
              "name": "vpc",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IVpc"
              }
            },
            {
              "name": "assignPublicIp",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            },
            {
              "name": "vpcSubnets",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            },
            {
              "name": "securityGroup",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method is called to create a networkConfiguration."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 659
          },
          "name": "configureAwsVpcNetworkingWithSecurityGroups",
          "parameters": [
            {
              "name": "vpc",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IVpc"
              }
            },
            {
              "name": "assignPublicIp",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            },
            {
              "name": "vpcSubnets",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            },
            {
              "name": "securityGroups",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "returns": "The created CloudMap service",
            "stability": "stable",
            "summary": "Enable CloudMap service discovery for the service."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 544
          },
          "name": "enableCloudMap",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.CloudMapOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.Service"
            }
          }
        },
        {
          "docs": {
            "example": "listener.addTargets('ECS', {\n  port: 80,\n  targets: [service.loadBalancerTarget({\n    containerName: 'MyContainer',\n    containerPort: 1234,\n  })],\n});",
            "remarks": "Use this function to create a load balancer target if you want to load balance to\nanother container than the first essential container or the first mapped port on\nthe container.\n\nUse the return value of this function where you would normally use a load balancer\ntarget, instead of the `Service` object itself.",
            "stability": "stable",
            "summary": "Return a load balancing target for a specific container and port."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 464
          },
          "name": "loadBalancerTarget",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.LoadBalancerTargetOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.IEcsLoadBalancerTarget"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method returns the specified CloudWatch metric name for this service."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 605
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "average over 5 minutes",
            "stability": "stable",
            "summary": "This method returns the CloudWatch metric for this clusters CPU utilization."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 628
          },
          "name": "metricCpuUtilization",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "average over 5 minutes",
            "stability": "stable",
            "summary": "This method returns the CloudWatch metric for this clusters memory utilization."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 619
          },
          "name": "metricMemoryUtilization",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "example": "service.registerLoadBalancerTargets(\n  {\n    containerName: 'web',\n    containerPort: 80,\n    newTargetGroupId: 'ECS',\n    listener: ecs.ListenerConfig.applicationListener(listener, {\n      protocol: elbv2.ApplicationProtocol.HTTPS\n    }),\n  },\n)",
            "remarks": "Alternatively, you can use `listener.addTargets()` to create targets and add them to target groups.",
            "stability": "stable",
            "summary": "Use this function to create all load balancer targets to be registered in this service, add them to target groups, and attach target groups to listeners accordingly."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 502
          },
          "name": "registerLoadBalancerTargets",
          "parameters": [
            {
              "name": "targets",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.EcsTarget"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "BaseService",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The cluster that hosts the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 328
          },
          "name": "cluster",
          "overrides": "@aws-cdk/aws-ecs.IBaseService",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The security groups which manage the allowed network traffic for the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 306
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 311
          },
          "name": "serviceArn",
          "overrides": "@aws-cdk/aws-ecs.IService",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 318
          },
          "name": "serviceName",
          "overrides": "@aws-cdk/aws-ecs.IService",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The task definition to use for tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 323
          },
          "name": "taskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The CloudMap service created for this service, if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 421
          },
          "name": "cloudMapService",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.IService"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A list of Elastic Load Balancing load balancer objects, containing the load balancer name, the container name (as it appears in a container definition), and the container port to access from the load balancer."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 339
          },
          "name": "loadBalancers",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.CfnService.LoadBalancerProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "For more information, see Service Discovery.",
            "stability": "stable",
            "summary": "The details of the service discovery registries to assign to this service."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 351
          },
          "name": "serviceRegistries",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.CfnService.ServiceRegistryProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The details of the AWS Cloud Map service."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 333
          },
          "name": "cloudmapService",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.Service"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A list of Elastic Load Balancing load balancer objects, containing the load balancer name, the container name (as it appears in a container definition), and the container port to access from the load balancer."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 345
          },
          "name": "networkConfiguration",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.CfnService.NetworkConfigurationProperty"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.BaseServiceOptions": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for the base Ec2Service or FargateService service."
      },
      "fqn": "@aws-cdk/aws-ecs.BaseServiceOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 99
      },
      "name": "BaseServiceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the cluster that hosts the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 103
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "stability": "stable",
            "summary": "A list of Capacity Provider strategies used to place a service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 191
          },
          "name": "capacityProviderStrategies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.CapacityProviderStrategy"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- disabled",
            "remarks": "If this property is defined, circuit breaker will be implicitly\nenabled.",
            "stability": "stable",
            "summary": "Whether to enable the deployment circuit breaker."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 183
          },
          "name": "circuitBreaker",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.DeploymentCircuitBreaker"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- AWS Cloud Map service discovery is not enabled.",
            "stability": "stable",
            "summary": "The options for configuring an Amazon ECS service to use service discovery."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 151
          },
          "name": "cloudMapOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.CloudMapOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Rolling update (ECS)",
            "remarks": "For more information, see\n[Amazon ECS Deployment Types](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html)",
            "stability": "stable",
            "summary": "Specifies which deployment controller to use for the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 176
          },
          "name": "deploymentController",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.DeploymentController"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- When creating the service, default is 1; when updating the service, default uses\nthe current task number.",
            "stability": "stable",
            "summary": "The desired number of instantiations of the task definition to keep running on the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 111
          },
          "name": "desiredCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "For more information, see\n[Tagging Your Amazon ECS Resources](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html)",
            "stability": "stable",
            "summary": "Specifies whether to enable Amazon ECS managed tags for the tasks within the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 168
          },
          "name": "enableECSManagedTags",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults to 60 seconds if at least one load balancer is in-use and it is not already set",
            "stability": "stable",
            "summary": "The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy Elastic Load Balancing target health checks after a task has first started."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 144
          },
          "name": "healthCheckGracePeriod",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 100 if daemon, otherwise 200",
            "stability": "stable",
            "summary": "The maximum number of tasks, specified as a percentage of the Amazon ECS service's DesiredCount value, that can run in a service during a deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 127
          },
          "name": "maxHealthyPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 0 if daemon, otherwise 50",
            "stability": "stable",
            "summary": "The minimum number of tasks, specified as a percentage of the Amazon ECS service's DesiredCount value, that must continue to run and remain healthy during a deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 136
          },
          "name": "minHealthyPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PropagatedTagSource.NONE",
            "remarks": "Valid values are: PropagatedTagSource.SERVICE, PropagatedTagSource.TASK_DEFINITION or PropagatedTagSource.NONE",
            "stability": "stable",
            "summary": "Specifies whether to propagate the tags from the task definition or the service to the tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 160
          },
          "name": "propagateTags",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.PropagatedTagSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CloudFormation-generated name.",
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 118
          },
          "name": "serviceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.BaseServiceProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Complete base service properties that are required to be supplied by the implementation of the BaseService class."
      },
      "fqn": "@aws-cdk/aws-ecs.BaseServiceProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.BaseServiceOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 198
      },
      "name": "BaseServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "LaunchType will be omitted if capacity provider strategies are specified on the service.",
            "see": "- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-capacityproviderstrategy\n\nValid values are: LaunchType.ECS or LaunchType.FARGATE",
            "stability": "stable",
            "summary": "The launch type on which to run your service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 208
          },
          "name": "launchType",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.LaunchType"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.BinPackResource": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Instance resource used for bin packing."
      },
      "fqn": "@aws-cdk/aws-ecs.BinPackResource",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/placement.ts",
        "line": 7
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Fill up hosts' CPU allocations first."
          },
          "name": "CPU"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Fill up hosts' memory allocations first."
          },
          "name": "MEMORY"
        }
      ],
      "name": "BinPackResource"
    },
    "@aws-cdk/aws-ecs.BottleRocketImage": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Construct an Bottlerocket image from the latest AMI published in SSM."
      },
      "fqn": "@aws-cdk/aws-ecs.BottleRocketImage",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the BottleRocketImage class."
        },
        "locationInModule": {
          "filename": "lib/cluster.ts",
          "line": 672
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.BottleRocketImageProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 662
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the correct image."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 682
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "BottleRocketImage"
    },
    "@aws-cdk/aws-ecs.BottleRocketImageProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for BottleRocketImage."
      },
      "fqn": "@aws-cdk/aws-ecs.BottleRocketImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 649
      },
      "name": "BottleRocketImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- BottlerocketEcsVariant.AWS_ECS_1",
            "remarks": "Only `aws-ecs-1` is currently available",
            "stability": "stable",
            "summary": "The Amazon ECS variant to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 656
          },
          "name": "variant",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.BottlerocketEcsVariant"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.BottlerocketEcsVariant": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Amazon ECS variant."
      },
      "fqn": "@aws-cdk/aws-ecs.BottlerocketEcsVariant",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 638
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "aws-ecs-1 variant."
          },
          "name": "AWS_ECS_1"
        }
      ],
      "name": "BottlerocketEcsVariant"
    },
    "@aws-cdk/aws-ecs.BuiltInAttributes": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The built-in container instance attributes."
      },
      "fqn": "@aws-cdk/aws-ecs.BuiltInAttributes",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2/ec2-service.ts",
        "line": 310
      },
      "name": "BuiltInAttributes",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The AMI id the instance is using."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 324
          },
          "name": "AMI_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The AvailabilityZone where the instance is running in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 319
          },
          "name": "AVAILABILITY_ZONE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The id of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 314
          },
          "name": "INSTANCE_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The EC2 instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 329
          },
          "name": "INSTANCE_TYPE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "Either 'linux' or 'windows'.",
            "stability": "stable",
            "summary": "The operating system of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 336
          },
          "name": "OS_TYPE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Capability": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "A Linux capability."
      },
      "fqn": "@aws-cdk/aws-ecs.Capability",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/linux-parameters.ts",
        "line": 188
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ALL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AUDIT_CONTROL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AUDIT_WRITE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BLOCK_SUSPEND"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CHOWN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DAC_OVERRIDE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DAC_READ_SEARCH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FOWNER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FSETID"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPC_LOCK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "IPC_OWNER"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "KILL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LEASE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LINUX_IMMUTABLE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MAC_ADMIN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MAC_OVERRIDE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MKNOD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NET_ADMIN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NET_BIND_SERVICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NET_BROADCAST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NET_RAW"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SETFCAP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SETGID"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SETPCAP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SETUID"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_ADMIN"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_BOOT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_CHROOT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_MODULE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_NICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_PACCT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_PTRACE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_RAWIO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_TIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYS_TTY_CONFIG"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYSLOG"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WAKE_ALARM"
        }
      ],
      "name": "Capability"
    },
    "@aws-cdk/aws-ecs.CapacityProviderStrategy": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "NOTE: defaultCapacityProviderStrategy on cluster not currently supported.",
        "stability": "stable",
        "summary": "A Capacity Provider strategy to use for the service."
      },
      "fqn": "@aws-cdk/aws-ecs.CapacityProviderStrategy",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 976
      },
      "name": "CapacityProviderStrategy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Currently only FARGATE and FARGATE_SPOT are supported.",
            "stability": "stable",
            "summary": "The name of the Capacity Provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 980
          },
          "name": "capacityProvider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "remarks": "Only one\ncapacity provider in a capacity provider strategy can have a base defined. If no value is specified, the default\nvalue of 0 is used.",
            "stability": "stable",
            "summary": "The base value designates how many tasks, at a minimum, to run on the specified capacity provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 989
          },
          "name": "base",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 0",
            "remarks": "The weight value is taken into consideration after the base value, if defined, is satisfied.",
            "stability": "stable",
            "summary": "The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 998
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnCapacityProvider": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ECS::CapacityProvider",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::ECS::CapacityProvider`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnCapacityProvider",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ECS::CapacityProvider`."
        },
        "locationInModule": {
          "filename": "lib/ecs.generated.ts",
          "line": 144
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnCapacityProviderProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 94
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 160
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 173
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCapacityProvider",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 98
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 165
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html#cfn-ecs-capacityprovider-tags"
            },
            "stability": "external",
            "summary": "`AWS::ECS::CapacityProvider.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 135
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html#cfn-ecs-capacityprovider-autoscalinggroupprovider"
            },
            "stability": "external",
            "summary": "`AWS::ECS::CapacityProvider.AutoScalingGroupProvider`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 123
          },
          "name": "autoScalingGroupProvider",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnCapacityProvider.AutoScalingGroupProviderProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html#cfn-ecs-capacityprovider-name"
            },
            "stability": "external",
            "summary": "`AWS::ECS::CapacityProvider.Name`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 129
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnCapacityProvider.AutoScalingGroupProviderProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-capacityprovider-autoscalinggroupprovider.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnCapacityProvider.AutoScalingGroupProviderProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 183
      },
      "name": "AutoScalingGroupProviderProperty",
      "namespace": "CfnCapacityProvider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-capacityprovider-autoscalinggroupprovider.html#cfn-ecs-capacityprovider-autoscalinggroupprovider-autoscalinggrouparn"
            },
            "stability": "external",
            "summary": "`CfnCapacityProvider.AutoScalingGroupProviderProperty.AutoScalingGroupArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 188
          },
          "name": "autoScalingGroupArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-capacityprovider-autoscalinggroupprovider.html#cfn-ecs-capacityprovider-autoscalinggroupprovider-managedscaling"
            },
            "stability": "external",
            "summary": "`CfnCapacityProvider.AutoScalingGroupProviderProperty.ManagedScaling`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 193
          },
          "name": "managedScaling",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnCapacityProvider.ManagedScalingProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-capacityprovider-autoscalinggroupprovider.html#cfn-ecs-capacityprovider-autoscalinggroupprovider-managedterminationprotection"
            },
            "stability": "external",
            "summary": "`CfnCapacityProvider.AutoScalingGroupProviderProperty.ManagedTerminationProtection`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 198
          },
          "name": "managedTerminationProtection",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnCapacityProvider.ManagedScalingProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-capacityprovider-managedscaling.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnCapacityProvider.ManagedScalingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 259
      },
      "name": "ManagedScalingProperty",
      "namespace": "CfnCapacityProvider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-capacityprovider-managedscaling.html#cfn-ecs-capacityprovider-managedscaling-maximumscalingstepsize"
            },
            "stability": "external",
            "summary": "`CfnCapacityProvider.ManagedScalingProperty.MaximumScalingStepSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 264
          },
          "name": "maximumScalingStepSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-capacityprovider-managedscaling.html#cfn-ecs-capacityprovider-managedscaling-minimumscalingstepsize"
            },
            "stability": "external",
            "summary": "`CfnCapacityProvider.ManagedScalingProperty.MinimumScalingStepSize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 269
          },
          "name": "minimumScalingStepSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-capacityprovider-managedscaling.html#cfn-ecs-capacityprovider-managedscaling-status"
            },
            "stability": "external",
            "summary": "`CfnCapacityProvider.ManagedScalingProperty.Status`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 274
          },
          "name": "status",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-capacityprovider-managedscaling.html#cfn-ecs-capacityprovider-managedscaling-targetcapacity"
            },
            "stability": "external",
            "summary": "`CfnCapacityProvider.ManagedScalingProperty.TargetCapacity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 279
          },
          "name": "targetCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnCapacityProviderProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::ECS::CapacityProvider`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnCapacityProviderProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 17
      },
      "name": "CfnCapacityProviderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html#cfn-ecs-capacityprovider-autoscalinggroupprovider"
            },
            "stability": "external",
            "summary": "`AWS::ECS::CapacityProvider.AutoScalingGroupProvider`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 23
          },
          "name": "autoScalingGroupProvider",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnCapacityProvider.AutoScalingGroupProviderProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html#cfn-ecs-capacityprovider-name"
            },
            "stability": "external",
            "summary": "`AWS::ECS::CapacityProvider.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 29
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html#cfn-ecs-capacityprovider-tags"
            },
            "stability": "external",
            "summary": "`AWS::ECS::CapacityProvider.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 35
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnCluster": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ECS::Cluster",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::ECS::Cluster`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnCluster",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ECS::Cluster`."
        },
        "locationInModule": {
          "filename": "lib/ecs.generated.ts",
          "line": 504
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnClusterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 437
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 522
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 537
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCluster",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 441
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 465
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 527
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-tags"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Cluster.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 495
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-capacityproviders"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Cluster.CapacityProviders`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 471
          },
          "name": "capacityProviders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-clustername"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Cluster.ClusterName`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 477
          },
          "name": "clusterName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-clustersettings"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Cluster.ClusterSettings`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 483
          },
          "name": "clusterSettings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnCluster.ClusterSettingsProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-defaultcapacityproviderstrategy"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Cluster.DefaultCapacityProviderStrategy`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 489
          },
          "name": "defaultCapacityProviderStrategy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnCluster.CapacityProviderStrategyItemProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnCluster.CapacityProviderStrategyItemProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-cluster-capacityproviderstrategyitem.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnCluster.CapacityProviderStrategyItemProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 547
      },
      "name": "CapacityProviderStrategyItemProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-cluster-capacityproviderstrategyitem.html#cfn-ecs-cluster-capacityproviderstrategyitem-base"
            },
            "stability": "external",
            "summary": "`CfnCluster.CapacityProviderStrategyItemProperty.Base`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 552
          },
          "name": "base",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-cluster-capacityproviderstrategyitem.html#cfn-ecs-cluster-capacityproviderstrategyitem-capacityprovider"
            },
            "stability": "external",
            "summary": "`CfnCluster.CapacityProviderStrategyItemProperty.CapacityProvider`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 557
          },
          "name": "capacityProvider",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-cluster-capacityproviderstrategyitem.html#cfn-ecs-cluster-capacityproviderstrategyitem-weight"
            },
            "stability": "external",
            "summary": "`CfnCluster.CapacityProviderStrategyItemProperty.Weight`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 562
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnCluster.ClusterSettingsProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-cluster-clustersettings.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnCluster.ClusterSettingsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 622
      },
      "name": "ClusterSettingsProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-cluster-clustersettings.html#cfn-ecs-cluster-clustersettings-name"
            },
            "stability": "external",
            "summary": "`CfnCluster.ClusterSettingsProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 627
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-cluster-clustersettings.html#cfn-ecs-cluster-clustersettings-value"
            },
            "stability": "external",
            "summary": "`CfnCluster.ClusterSettingsProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 632
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnClusterProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::ECS::Cluster`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnClusterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 343
      },
      "name": "CfnClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-capacityproviders"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Cluster.CapacityProviders`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 349
          },
          "name": "capacityProviders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-clustername"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Cluster.ClusterName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 355
          },
          "name": "clusterName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-clustersettings"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Cluster.ClusterSettings`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 361
          },
          "name": "clusterSettings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnCluster.ClusterSettingsProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-defaultcapacityproviderstrategy"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Cluster.DefaultCapacityProviderStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 367
          },
          "name": "defaultCapacityProviderStrategy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnCluster.CapacityProviderStrategyItemProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-tags"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Cluster.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 373
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnPrimaryTaskSet": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ECS::PrimaryTaskSet",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::ECS::PrimaryTaskSet`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnPrimaryTaskSet",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ECS::PrimaryTaskSet`."
        },
        "locationInModule": {
          "filename": "lib/ecs.generated.ts",
          "line": 819
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnPrimaryTaskSetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 769
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 837
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 850
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnPrimaryTaskSet",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 773
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 842
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html#cfn-ecs-primarytaskset-cluster"
            },
            "stability": "external",
            "summary": "`AWS::ECS::PrimaryTaskSet.Cluster`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 798
          },
          "name": "cluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html#cfn-ecs-primarytaskset-service"
            },
            "stability": "external",
            "summary": "`AWS::ECS::PrimaryTaskSet.Service`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 804
          },
          "name": "service",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html#cfn-ecs-primarytaskset-tasksetid"
            },
            "stability": "external",
            "summary": "`AWS::ECS::PrimaryTaskSet.TaskSetId`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 810
          },
          "name": "taskSetId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnPrimaryTaskSetProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::ECS::PrimaryTaskSet`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnPrimaryTaskSetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 690
      },
      "name": "CfnPrimaryTaskSetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html#cfn-ecs-primarytaskset-cluster"
            },
            "stability": "external",
            "summary": "`AWS::ECS::PrimaryTaskSet.Cluster`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 696
          },
          "name": "cluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html#cfn-ecs-primarytaskset-service"
            },
            "stability": "external",
            "summary": "`AWS::ECS::PrimaryTaskSet.Service`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 702
          },
          "name": "service",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html#cfn-ecs-primarytaskset-tasksetid"
            },
            "stability": "external",
            "summary": "`AWS::ECS::PrimaryTaskSet.TaskSetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 708
          },
          "name": "taskSetId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ECS::Service",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::ECS::Service`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ECS::Service`."
        },
        "locationInModule": {
          "filename": "lib/ecs.generated.ts",
          "line": 1262
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnServiceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1099
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1296
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1327
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnService",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1103
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Name"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1127
          },
          "name": "attrName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1301
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-tags"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1247
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-capacityproviderstrategy"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.CapacityProviderStrategy`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1133
          },
          "name": "capacityProviderStrategy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.CapacityProviderStrategyItemProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-cluster"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.Cluster`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1139
          },
          "name": "cluster",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-deploymentconfiguration"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.DeploymentConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1145
          },
          "name": "deploymentConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.DeploymentConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-deploymentcontroller"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.DeploymentController`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1151
          },
          "name": "deploymentController",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.DeploymentControllerProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-desiredcount"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.DesiredCount`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1157
          },
          "name": "desiredCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-enableecsmanagedtags"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.EnableECSManagedTags`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1163
          },
          "name": "enableEcsManagedTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-healthcheckgraceperiodseconds"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.HealthCheckGracePeriodSeconds`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1169
          },
          "name": "healthCheckGracePeriodSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-launchtype"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.LaunchType`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1175
          },
          "name": "launchType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-loadbalancers"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.LoadBalancers`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1181
          },
          "name": "loadBalancers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.LoadBalancerProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-networkconfiguration"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.NetworkConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1187
          },
          "name": "networkConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.NetworkConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementconstraints"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.PlacementConstraints`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1193
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementConstraintProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementstrategies"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.PlacementStrategies`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1199
          },
          "name": "placementStrategies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementStrategyProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-platformversion"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.PlatformVersion`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1205
          },
          "name": "platformVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-propagatetags"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.PropagateTags`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1211
          },
          "name": "propagateTags",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-role"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.Role`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1217
          },
          "name": "role",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-schedulingstrategy"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.SchedulingStrategy`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1223
          },
          "name": "schedulingStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-servicearn"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.ServiceArn`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1229
          },
          "name": "serviceArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-servicename"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.ServiceName`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1235
          },
          "name": "serviceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-serviceregistries"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.ServiceRegistries`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1241
          },
          "name": "serviceRegistries",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.ServiceRegistryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-taskdefinition"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.TaskDefinition`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1253
          },
          "name": "taskDefinition",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.AwsVpcConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-awsvpcconfiguration.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.AwsVpcConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1337
      },
      "name": "AwsVpcConfigurationProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-awsvpcconfiguration.html#cfn-ecs-service-awsvpcconfiguration-subnets"
            },
            "stability": "external",
            "summary": "`CfnService.AwsVpcConfigurationProperty.Subnets`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1352
          },
          "name": "subnets",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-awsvpcconfiguration.html#cfn-ecs-service-awsvpcconfiguration-assignpublicip"
            },
            "stability": "external",
            "summary": "`CfnService.AwsVpcConfigurationProperty.AssignPublicIp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1342
          },
          "name": "assignPublicIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-awsvpcconfiguration.html#cfn-ecs-service-awsvpcconfiguration-securitygroups"
            },
            "stability": "external",
            "summary": "`CfnService.AwsVpcConfigurationProperty.SecurityGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1347
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.CapacityProviderStrategyItemProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-capacityproviderstrategyitem.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.CapacityProviderStrategyItemProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1413
      },
      "name": "CapacityProviderStrategyItemProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-capacityproviderstrategyitem.html#cfn-ecs-service-capacityproviderstrategyitem-base"
            },
            "stability": "external",
            "summary": "`CfnService.CapacityProviderStrategyItemProperty.Base`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1418
          },
          "name": "base",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-capacityproviderstrategyitem.html#cfn-ecs-service-capacityproviderstrategyitem-capacityprovider"
            },
            "stability": "external",
            "summary": "`CfnService.CapacityProviderStrategyItemProperty.CapacityProvider`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1423
          },
          "name": "capacityProvider",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-capacityproviderstrategyitem.html#cfn-ecs-service-capacityproviderstrategyitem-weight"
            },
            "stability": "external",
            "summary": "`CfnService.CapacityProviderStrategyItemProperty.Weight`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1428
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.DeploymentCircuitBreakerProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentcircuitbreaker.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.DeploymentCircuitBreakerProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1488
      },
      "name": "DeploymentCircuitBreakerProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentcircuitbreaker.html#cfn-ecs-service-deploymentcircuitbreaker-enable"
            },
            "stability": "external",
            "summary": "`CfnService.DeploymentCircuitBreakerProperty.Enable`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1493
          },
          "name": "enable",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentcircuitbreaker.html#cfn-ecs-service-deploymentcircuitbreaker-rollback"
            },
            "stability": "external",
            "summary": "`CfnService.DeploymentCircuitBreakerProperty.Rollback`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1498
          },
          "name": "rollback",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.DeploymentConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentconfiguration.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.DeploymentConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1557
      },
      "name": "DeploymentConfigurationProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentconfiguration.html#cfn-ecs-service-deploymentconfiguration-deploymentcircuitbreaker"
            },
            "stability": "external",
            "summary": "`CfnService.DeploymentConfigurationProperty.DeploymentCircuitBreaker`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1562
          },
          "name": "deploymentCircuitBreaker",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.DeploymentCircuitBreakerProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentconfiguration.html#cfn-ecs-service-deploymentconfiguration-maximumpercent"
            },
            "stability": "external",
            "summary": "`CfnService.DeploymentConfigurationProperty.MaximumPercent`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1567
          },
          "name": "maximumPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentconfiguration.html#cfn-ecs-service-deploymentconfiguration-minimumhealthypercent"
            },
            "stability": "external",
            "summary": "`CfnService.DeploymentConfigurationProperty.MinimumHealthyPercent`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1572
          },
          "name": "minimumHealthyPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.DeploymentControllerProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentcontroller.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.DeploymentControllerProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1632
      },
      "name": "DeploymentControllerProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentcontroller.html#cfn-ecs-service-deploymentcontroller-type"
            },
            "stability": "external",
            "summary": "`CfnService.DeploymentControllerProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1637
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.LoadBalancerProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancer.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.LoadBalancerProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1691
      },
      "name": "LoadBalancerProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancer.html#cfn-ecs-service-loadbalancer-containerport"
            },
            "stability": "external",
            "summary": "`CfnService.LoadBalancerProperty.ContainerPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1701
          },
          "name": "containerPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancer.html#cfn-ecs-service-loadbalancer-containername"
            },
            "stability": "external",
            "summary": "`CfnService.LoadBalancerProperty.ContainerName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1696
          },
          "name": "containerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancer.html#cfn-ecs-service-loadbalancer-loadbalancername"
            },
            "stability": "external",
            "summary": "`CfnService.LoadBalancerProperty.LoadBalancerName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1706
          },
          "name": "loadBalancerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancer.html#cfn-ecs-service-loadbalancer-targetgrouparn"
            },
            "stability": "external",
            "summary": "`CfnService.LoadBalancerProperty.TargetGroupArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1711
          },
          "name": "targetGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.NetworkConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-networkconfiguration.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.NetworkConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1775
      },
      "name": "NetworkConfigurationProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-networkconfiguration.html#cfn-ecs-service-networkconfiguration-awsvpcconfiguration"
            },
            "stability": "external",
            "summary": "`CfnService.NetworkConfigurationProperty.AwsvpcConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1780
          },
          "name": "awsvpcConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.AwsVpcConfigurationProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.PlacementConstraintProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementconstraint.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementConstraintProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1834
      },
      "name": "PlacementConstraintProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementconstraint.html#cfn-ecs-service-placementconstraint-type"
            },
            "stability": "external",
            "summary": "`CfnService.PlacementConstraintProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1844
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementconstraint.html#cfn-ecs-service-placementconstraint-expression"
            },
            "stability": "external",
            "summary": "`CfnService.PlacementConstraintProperty.Expression`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1839
          },
          "name": "expression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.PlacementStrategyProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementstrategy.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementStrategyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1902
      },
      "name": "PlacementStrategyProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementstrategy.html#cfn-ecs-service-placementstrategy-type"
            },
            "stability": "external",
            "summary": "`CfnService.PlacementStrategyProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1912
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-placementstrategy.html#cfn-ecs-service-placementstrategy-field"
            },
            "stability": "external",
            "summary": "`CfnService.PlacementStrategyProperty.Field`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1907
          },
          "name": "field",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnService.ServiceRegistryProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-serviceregistry.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnService.ServiceRegistryProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 1970
      },
      "name": "ServiceRegistryProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-serviceregistry.html#cfn-ecs-service-serviceregistry-containername"
            },
            "stability": "external",
            "summary": "`CfnService.ServiceRegistryProperty.ContainerName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1975
          },
          "name": "containerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-serviceregistry.html#cfn-ecs-service-serviceregistry-containerport"
            },
            "stability": "external",
            "summary": "`CfnService.ServiceRegistryProperty.ContainerPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1980
          },
          "name": "containerPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-serviceregistry.html#cfn-ecs-service-serviceregistry-port"
            },
            "stability": "external",
            "summary": "`CfnService.ServiceRegistryProperty.Port`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1985
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-serviceregistry.html#cfn-ecs-service-serviceregistry-registryarn"
            },
            "stability": "external",
            "summary": "`CfnService.ServiceRegistryProperty.RegistryArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 1990
          },
          "name": "registryArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnServiceProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::ECS::Service`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnServiceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 861
      },
      "name": "CfnServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-capacityproviderstrategy"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.CapacityProviderStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 867
          },
          "name": "capacityProviderStrategy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.CapacityProviderStrategyItemProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-cluster"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.Cluster`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 873
          },
          "name": "cluster",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-deploymentconfiguration"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.DeploymentConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 879
          },
          "name": "deploymentConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.DeploymentConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-deploymentcontroller"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.DeploymentController`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 885
          },
          "name": "deploymentController",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.DeploymentControllerProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-desiredcount"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.DesiredCount`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 891
          },
          "name": "desiredCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-enableecsmanagedtags"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.EnableECSManagedTags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 897
          },
          "name": "enableEcsManagedTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-healthcheckgraceperiodseconds"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.HealthCheckGracePeriodSeconds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 903
          },
          "name": "healthCheckGracePeriodSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-launchtype"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.LaunchType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 909
          },
          "name": "launchType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-loadbalancers"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.LoadBalancers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 915
          },
          "name": "loadBalancers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.LoadBalancerProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-networkconfiguration"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.NetworkConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 921
          },
          "name": "networkConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.NetworkConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementconstraints"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.PlacementConstraints`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 927
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementConstraintProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementstrategies"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.PlacementStrategies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 933
          },
          "name": "placementStrategies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementStrategyProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-platformversion"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.PlatformVersion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 939
          },
          "name": "platformVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-propagatetags"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.PropagateTags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 945
          },
          "name": "propagateTags",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-role"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.Role`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 951
          },
          "name": "role",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-schedulingstrategy"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.SchedulingStrategy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 957
          },
          "name": "schedulingStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-servicearn"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.ServiceArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 963
          },
          "name": "serviceArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-servicename"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.ServiceName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 969
          },
          "name": "serviceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-serviceregistries"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.ServiceRegistries`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 975
          },
          "name": "serviceRegistries",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnService.ServiceRegistryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-tags"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 981
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-taskdefinition"
            },
            "stability": "external",
            "summary": "`AWS::ECS::Service.TaskDefinition`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 987
          },
          "name": "taskDefinition",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ECS::TaskDefinition",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::ECS::TaskDefinition`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ECS::TaskDefinition`."
        },
        "locationInModule": {
          "filename": "lib/ecs.generated.ts",
          "line": 2365
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinitionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2238
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2393
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2418
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTaskDefinition",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2242
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TaskDefinitionArn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2266
          },
          "name": "attrTaskDefinitionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2398
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-tags"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2344
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-containerdefinitions"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.ContainerDefinitions`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2272
          },
          "name": "containerDefinitions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDefinitionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-cpu"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Cpu`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2278
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-executionrolearn"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.ExecutionRoleArn`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2284
          },
          "name": "executionRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-family"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Family`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2290
          },
          "name": "family",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-inferenceaccelerators"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.InferenceAccelerators`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2296
          },
          "name": "inferenceAccelerators",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.InferenceAcceleratorProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-ipcmode"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.IpcMode`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2302
          },
          "name": "ipcMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-memory"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Memory`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2308
          },
          "name": "memory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-networkmode"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.NetworkMode`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2314
          },
          "name": "networkMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-pidmode"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.PidMode`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2320
          },
          "name": "pidMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-placementconstraints"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.PlacementConstraints`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2326
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.TaskDefinitionPlacementConstraintProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-proxyconfiguration"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.ProxyConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2332
          },
          "name": "proxyConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ProxyConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-requirescompatibilities"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.RequiresCompatibilities`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2338
          },
          "name": "requiresCompatibilities",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-taskrolearn"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.TaskRoleArn`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2350
          },
          "name": "taskRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-volumes"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Volumes`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2356
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.VolumeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.AuthorizationConfigProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-authorizationconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.AuthorizationConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2428
      },
      "name": "AuthorizationConfigProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-authorizationconfig.html#cfn-ecs-taskdefinition-authorizationconfig-accesspointid"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.AuthorizationConfigProperty.AccessPointId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2433
          },
          "name": "accessPointId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-authorizationconfig.html#cfn-ecs-taskdefinition-authorizationconfig-iam"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.AuthorizationConfigProperty.IAM`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2438
          },
          "name": "iam",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDefinitionProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDefinitionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2495
      },
      "name": "ContainerDefinitionProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-command"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Command`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2500
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-cpu"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Cpu`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2505
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-dependson"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.DependsOn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2510
          },
          "name": "dependsOn",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDependencyProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-disablenetworking"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.DisableNetworking`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2515
          },
          "name": "disableNetworking",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-dnssearchdomains"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.DnsSearchDomains`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2520
          },
          "name": "dnsSearchDomains",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-dnsservers"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.DnsServers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2525
          },
          "name": "dnsServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-dockerlabels"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.DockerLabels`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2530
          },
          "name": "dockerLabels",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-dockersecurityoptions"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.DockerSecurityOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2535
          },
          "name": "dockerSecurityOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-entrypoint"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.EntryPoint`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2540
          },
          "name": "entryPoint",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-environment"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Environment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2545
          },
          "name": "environment",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.KeyValuePairProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-environmentfiles"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.EnvironmentFiles`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2550
          },
          "name": "environmentFiles",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.EnvironmentFileProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-essential"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Essential`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2555
          },
          "name": "essential",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-extrahosts"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.ExtraHosts`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2560
          },
          "name": "extraHosts",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.HostEntryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-firelensconfiguration"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.FirelensConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2565
          },
          "name": "firelensConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.FirelensConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-healthcheck"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.HealthCheck`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2570
          },
          "name": "healthCheck",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.HealthCheckProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-hostname"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Hostname`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2575
          },
          "name": "hostname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-image"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Image`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2580
          },
          "name": "image",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-interactive"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Interactive`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2585
          },
          "name": "interactive",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-links"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Links`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2590
          },
          "name": "links",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-linuxparameters"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.LinuxParameters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2595
          },
          "name": "linuxParameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.LinuxParametersProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-logconfiguration"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.LogConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2600
          },
          "name": "logConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.LogConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-memory"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Memory`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2605
          },
          "name": "memory",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-memoryreservation"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.MemoryReservation`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2610
          },
          "name": "memoryReservation",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-mountpoints"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.MountPoints`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2615
          },
          "name": "mountPoints",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.MountPointProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-name"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2620
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-portmappings"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.PortMappings`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2625
          },
          "name": "portMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.PortMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-privileged"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Privileged`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2630
          },
          "name": "privileged",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-pseudoterminal"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.PseudoTerminal`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2635
          },
          "name": "pseudoTerminal",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-readonlyrootfilesystem"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.ReadonlyRootFilesystem`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2640
          },
          "name": "readonlyRootFilesystem",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-repositorycredentials"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.RepositoryCredentials`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2645
          },
          "name": "repositoryCredentials",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.RepositoryCredentialsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-resourcerequirements"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.ResourceRequirements`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2650
          },
          "name": "resourceRequirements",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ResourceRequirementProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-secrets"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Secrets`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2655
          },
          "name": "secrets",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.SecretProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-starttimeout"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.StartTimeout`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2660
          },
          "name": "startTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-stoptimeout"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.StopTimeout`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2665
          },
          "name": "stopTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-systemcontrols"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.SystemControls`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2670
          },
          "name": "systemControls",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.SystemControlProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-ulimits"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.Ulimits`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2675
          },
          "name": "ulimits",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.UlimitProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-user"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.User`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2680
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-volumesfrom"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.VolumesFrom`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2685
          },
          "name": "volumesFrom",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.VolumeFromProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html#cfn-ecs-taskdefinition-containerdefinition-workingdirectory"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDefinitionProperty.WorkingDirectory`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2690
          },
          "name": "workingDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDependencyProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdependency.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDependencyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2858
      },
      "name": "ContainerDependencyProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdependency.html#cfn-ecs-taskdefinition-containerdependency-condition"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDependencyProperty.Condition`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2863
          },
          "name": "condition",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdependency.html#cfn-ecs-taskdefinition-containerdependency-containername"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ContainerDependencyProperty.ContainerName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2868
          },
          "name": "containerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.DeviceProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-device.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.DeviceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2925
      },
      "name": "DeviceProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-device.html#cfn-ecs-taskdefinition-device-containerpath"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.DeviceProperty.ContainerPath`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2930
          },
          "name": "containerPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-device.html#cfn-ecs-taskdefinition-device-hostpath"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.DeviceProperty.HostPath`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2935
          },
          "name": "hostPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-device.html#cfn-ecs-taskdefinition-device-permissions"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.DeviceProperty.Permissions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2940
          },
          "name": "permissions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.DockerVolumeConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.DockerVolumeConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 3000
      },
      "name": "DockerVolumeConfigurationProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html#cfn-ecs-taskdefinition-dockervolumeconfiguration-autoprovision"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.DockerVolumeConfigurationProperty.Autoprovision`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3005
          },
          "name": "autoprovision",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html#cfn-ecs-taskdefinition-dockervolumeconfiguration-driver"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.DockerVolumeConfigurationProperty.Driver`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3010
          },
          "name": "driver",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html#cfn-ecs-taskdefinition-dockervolumeconfiguration-driveropts"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.DockerVolumeConfigurationProperty.DriverOpts`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3015
          },
          "name": "driverOpts",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html#cfn-ecs-taskdefinition-dockervolumeconfiguration-labels"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.DockerVolumeConfigurationProperty.Labels`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3020
          },
          "name": "labels",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-dockervolumeconfiguration.html#cfn-ecs-taskdefinition-dockervolumeconfiguration-scope"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.DockerVolumeConfigurationProperty.Scope`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3025
          },
          "name": "scope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.EfsVolumeConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-efsvolumeconfiguration.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.EfsVolumeConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 3091
      },
      "name": "EfsVolumeConfigurationProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-efsvolumeconfiguration.html#cfn-ecs-taskdefinition-efsvolumeconfiguration-filesystemid"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.EfsVolumeConfigurationProperty.FileSystemId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3116
          },
          "name": "fileSystemId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-efsvolumeconfiguration.html#cfn-ecs-taskdefinition-efsvolumeconfiguration-authorizationconfig"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.EfsVolumeConfigurationProperty.AuthorizationConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3096
          },
          "name": "authorizationConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.AuthorizationConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-efsvolumeconfiguration.html#cfn-ecs-taskdefinition-efsvolumeconfiguration-rootdirectory"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.EfsVolumeConfigurationProperty.RootDirectory`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3101
          },
          "name": "rootDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-efsvolumeconfiguration.html#cfn-ecs-taskdefinition-efsvolumeconfiguration-transitencryption"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.EfsVolumeConfigurationProperty.TransitEncryption`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3106
          },
          "name": "transitEncryption",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-efsvolumeconfiguration.html#cfn-ecs-taskdefinition-efsvolumeconfiguration-transitencryptionport"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.EfsVolumeConfigurationProperty.TransitEncryptionPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3111
          },
          "name": "transitEncryptionPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.EnvironmentFileProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-environmentfile.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.EnvironmentFileProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 3183
      },
      "name": "EnvironmentFileProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-environmentfile.html#cfn-ecs-taskdefinition-environmentfile-type"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.EnvironmentFileProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3188
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-environmentfile.html#cfn-ecs-taskdefinition-environmentfile-value"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.EnvironmentFileProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3193
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.FirelensConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-firelensconfiguration.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.FirelensConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 3250
      },
      "name": "FirelensConfigurationProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-firelensconfiguration.html#cfn-ecs-taskdefinition-firelensconfiguration-options"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.FirelensConfigurationProperty.Options`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3255
          },
          "name": "options",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-firelensconfiguration.html#cfn-ecs-taskdefinition-firelensconfiguration-type"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.FirelensConfigurationProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3260
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.HealthCheckProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.HealthCheckProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 3317
      },
      "name": "HealthCheckProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html#cfn-ecs-taskdefinition-healthcheck-command"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.HealthCheckProperty.Command`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3322
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html#cfn-ecs-taskdefinition-healthcheck-interval"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.HealthCheckProperty.Interval`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3327
          },
          "name": "interval",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html#cfn-ecs-taskdefinition-healthcheck-retries"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.HealthCheckProperty.Retries`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3332
          },
          "name": "retries",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html#cfn-ecs-taskdefinition-healthcheck-startperiod"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.HealthCheckProperty.StartPeriod`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3337
          },
          "name": "startPeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-healthcheck.html#cfn-ecs-taskdefinition-healthcheck-timeout"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.HealthCheckProperty.Timeout`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3342
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.HostEntryProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-hostentry.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.HostEntryProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 3408
      },
      "name": "HostEntryProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-hostentry.html#cfn-ecs-taskdefinition-containerdefinition-hostentry-hostname"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.HostEntryProperty.Hostname`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3413
          },
          "name": "hostname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-hostentry.html#cfn-ecs-taskdefinition-containerdefinition-hostentry-ipaddress"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.HostEntryProperty.IpAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3418
          },
          "name": "ipAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.HostVolumePropertiesProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes-host.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.HostVolumePropertiesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 3475
      },
      "name": "HostVolumePropertiesProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes-host.html#cfn-ecs-taskdefinition-volumes-host-sourcepath"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.HostVolumePropertiesProperty.SourcePath`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3480
          },
          "name": "sourcePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.InferenceAcceleratorProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-inferenceaccelerator.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.InferenceAcceleratorProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 3534
      },
      "name": "InferenceAcceleratorProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-inferenceaccelerator.html#cfn-ecs-taskdefinition-inferenceaccelerator-devicename"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.InferenceAcceleratorProperty.DeviceName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3539
          },
          "name": "deviceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-inferenceaccelerator.html#cfn-ecs-taskdefinition-inferenceaccelerator-devicetype"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.InferenceAcceleratorProperty.DeviceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3544
          },
          "name": "deviceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.KernelCapabilitiesProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-kernelcapabilities.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.KernelCapabilitiesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 3601
      },
      "name": "KernelCapabilitiesProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-kernelcapabilities.html#cfn-ecs-taskdefinition-kernelcapabilities-add"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.KernelCapabilitiesProperty.Add`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3606
          },
          "name": "add",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-kernelcapabilities.html#cfn-ecs-taskdefinition-kernelcapabilities-drop"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.KernelCapabilitiesProperty.Drop`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3611
          },
          "name": "drop",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.KeyValuePairProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-environment.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.KeyValuePairProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 3668
      },
      "name": "KeyValuePairProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-environment.html#cfn-ecs-taskdefinition-containerdefinition-environment-name"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.KeyValuePairProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3673
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-environment.html#cfn-ecs-taskdefinition-containerdefinition-environment-value"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.KeyValuePairProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3678
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.LinuxParametersProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.LinuxParametersProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 3735
      },
      "name": "LinuxParametersProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-capabilities"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.LinuxParametersProperty.Capabilities`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3740
          },
          "name": "capabilities",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.KernelCapabilitiesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-devices"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.LinuxParametersProperty.Devices`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3745
          },
          "name": "devices",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.DeviceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-initprocessenabled"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.LinuxParametersProperty.InitProcessEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3750
          },
          "name": "initProcessEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-maxswap"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.LinuxParametersProperty.MaxSwap`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3755
          },
          "name": "maxSwap",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-sharedmemorysize"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.LinuxParametersProperty.SharedMemorySize`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3760
          },
          "name": "sharedMemorySize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-swappiness"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.LinuxParametersProperty.Swappiness`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3765
          },
          "name": "swappiness",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-linuxparameters.html#cfn-ecs-taskdefinition-linuxparameters-tmpfs"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.LinuxParametersProperty.Tmpfs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3770
          },
          "name": "tmpfs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.TmpfsProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.LogConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.LogConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 3842
      },
      "name": "LogConfigurationProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration.html#cfn-ecs-taskdefinition-containerdefinition-logconfiguration-logdriver"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.LogConfigurationProperty.LogDriver`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3847
          },
          "name": "logDriver",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration.html#cfn-ecs-taskdefinition-containerdefinition-logconfiguration-options"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.LogConfigurationProperty.Options`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3852
          },
          "name": "options",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration.html#cfn-ecs-taskdefinition-logconfiguration-secretoptions"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.LogConfigurationProperty.SecretOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3857
          },
          "name": "secretOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.SecretProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.MountPointProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.MountPointProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 3918
      },
      "name": "MountPointProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html#cfn-ecs-taskdefinition-containerdefinition-mountpoints-containerpath"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.MountPointProperty.ContainerPath`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3923
          },
          "name": "containerPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html#cfn-ecs-taskdefinition-containerdefinition-mountpoints-readonly"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.MountPointProperty.ReadOnly`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3928
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html#cfn-ecs-taskdefinition-containerdefinition-mountpoints-sourcevolume"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.MountPointProperty.SourceVolume`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3933
          },
          "name": "sourceVolume",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.PortMappingProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.PortMappingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 3993
      },
      "name": "PortMappingProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html#cfn-ecs-taskdefinition-containerdefinition-portmappings-containerport"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.PortMappingProperty.ContainerPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 3998
          },
          "name": "containerPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html#cfn-ecs-taskdefinition-containerdefinition-portmappings-readonly"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.PortMappingProperty.HostPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4003
          },
          "name": "hostPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html#cfn-ecs-taskdefinition-containerdefinition-portmappings-sourcevolume"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.PortMappingProperty.Protocol`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4008
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.ProxyConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-proxyconfiguration.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ProxyConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 4068
      },
      "name": "ProxyConfigurationProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-proxyconfiguration.html#cfn-ecs-taskdefinition-proxyconfiguration-containername"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ProxyConfigurationProperty.ContainerName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4073
          },
          "name": "containerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-proxyconfiguration.html#cfn-ecs-taskdefinition-proxyconfiguration-proxyconfigurationproperties"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ProxyConfigurationProperty.ProxyConfigurationProperties`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4078
          },
          "name": "proxyConfigurationProperties",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.KeyValuePairProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-proxyconfiguration.html#cfn-ecs-taskdefinition-proxyconfiguration-type"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ProxyConfigurationProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4083
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.RepositoryCredentialsProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-repositorycredentials.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.RepositoryCredentialsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 4144
      },
      "name": "RepositoryCredentialsProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-repositorycredentials.html#cfn-ecs-taskdefinition-repositorycredentials-credentialsparameter"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.RepositoryCredentialsProperty.CredentialsParameter`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4149
          },
          "name": "credentialsParameter",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.ResourceRequirementProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-resourcerequirement.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ResourceRequirementProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 4203
      },
      "name": "ResourceRequirementProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-resourcerequirement.html#cfn-ecs-taskdefinition-resourcerequirement-type"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ResourceRequirementProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4208
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-resourcerequirement.html#cfn-ecs-taskdefinition-resourcerequirement-value"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.ResourceRequirementProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4213
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.SecretProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-secret.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.SecretProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 4272
      },
      "name": "SecretProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-secret.html#cfn-ecs-taskdefinition-secret-name"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.SecretProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4277
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-secret.html#cfn-ecs-taskdefinition-secret-valuefrom"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.SecretProperty.ValueFrom`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4282
          },
          "name": "valueFrom",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.SystemControlProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-systemcontrol.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.SystemControlProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 4341
      },
      "name": "SystemControlProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-systemcontrol.html#cfn-ecs-taskdefinition-systemcontrol-namespace"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.SystemControlProperty.Namespace`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4346
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-systemcontrol.html#cfn-ecs-taskdefinition-systemcontrol-value"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.SystemControlProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4351
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.TaskDefinitionPlacementConstraintProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-taskdefinitionplacementconstraint.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.TaskDefinitionPlacementConstraintProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 4408
      },
      "name": "TaskDefinitionPlacementConstraintProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-taskdefinitionplacementconstraint.html#cfn-ecs-taskdefinition-taskdefinitionplacementconstraint-type"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.TaskDefinitionPlacementConstraintProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4418
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-taskdefinitionplacementconstraint.html#cfn-ecs-taskdefinition-taskdefinitionplacementconstraint-expression"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.TaskDefinitionPlacementConstraintProperty.Expression`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4413
          },
          "name": "expression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.TmpfsProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-tmpfs.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.TmpfsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 4476
      },
      "name": "TmpfsProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-tmpfs.html#cfn-ecs-taskdefinition-tmpfs-size"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.TmpfsProperty.Size`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4491
          },
          "name": "size",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-tmpfs.html#cfn-ecs-taskdefinition-tmpfs-containerpath"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.TmpfsProperty.ContainerPath`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4481
          },
          "name": "containerPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-tmpfs.html#cfn-ecs-taskdefinition-tmpfs-mountoptions"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.TmpfsProperty.MountOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4486
          },
          "name": "mountOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.UlimitProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.UlimitProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 4552
      },
      "name": "UlimitProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html#cfn-ecs-taskdefinition-containerdefinition-ulimit-hardlimit"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.UlimitProperty.HardLimit`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4557
          },
          "name": "hardLimit",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html#cfn-ecs-taskdefinition-containerdefinition-ulimit-name"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.UlimitProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4562
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html#cfn-ecs-taskdefinition-containerdefinition-ulimit-softlimit"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.UlimitProperty.SoftLimit`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4567
          },
          "name": "softLimit",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.VolumeFromProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.VolumeFromProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 4713
      },
      "name": "VolumeFromProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom.html#cfn-ecs-taskdefinition-containerdefinition-volumesfrom-readonly"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.VolumeFromProperty.ReadOnly`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4718
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom.html#cfn-ecs-taskdefinition-containerdefinition-volumesfrom-sourcecontainer"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.VolumeFromProperty.SourceContainer`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4723
          },
          "name": "sourceContainer",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinition.VolumeProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.VolumeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 4630
      },
      "name": "VolumeProperty",
      "namespace": "CfnTaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html#cfn-ecs-taskdefinition-volume-dockervolumeconfiguration"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.VolumeProperty.DockerVolumeConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4635
          },
          "name": "dockerVolumeConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.DockerVolumeConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html#cfn-ecs-taskdefinition-volume-efsvolumeconfiguration"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.VolumeProperty.EfsVolumeConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4650
          },
          "name": "efsVolumeConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.EfsVolumeConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html#cfn-ecs-taskdefinition-volumes-host"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.VolumeProperty.Host`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4640
          },
          "name": "host",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.HostVolumePropertiesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html#cfn-ecs-taskdefinition-volumes-name"
            },
            "stability": "external",
            "summary": "`CfnTaskDefinition.VolumeProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4645
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskDefinitionProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::ECS::TaskDefinition`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinitionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 2054
      },
      "name": "CfnTaskDefinitionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-containerdefinitions"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.ContainerDefinitions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2060
          },
          "name": "containerDefinitions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDefinitionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-cpu"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Cpu`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2066
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-executionrolearn"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.ExecutionRoleArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2072
          },
          "name": "executionRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-family"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Family`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2078
          },
          "name": "family",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-inferenceaccelerators"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.InferenceAccelerators`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2084
          },
          "name": "inferenceAccelerators",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.InferenceAcceleratorProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-ipcmode"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.IpcMode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2090
          },
          "name": "ipcMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-memory"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Memory`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2096
          },
          "name": "memory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-networkmode"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.NetworkMode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2102
          },
          "name": "networkMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-pidmode"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.PidMode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2108
          },
          "name": "pidMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-placementconstraints"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.PlacementConstraints`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2114
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.TaskDefinitionPlacementConstraintProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-proxyconfiguration"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.ProxyConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2120
          },
          "name": "proxyConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ProxyConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-requirescompatibilities"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.RequiresCompatibilities`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2126
          },
          "name": "requiresCompatibilities",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-tags"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2132
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-taskrolearn"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.TaskRoleArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2138
          },
          "name": "taskRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-volumes"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskDefinition.Volumes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 2144
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.VolumeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskSet": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ECS::TaskSet",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::ECS::TaskSet`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskSet",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ECS::TaskSet`."
        },
        "locationInModule": {
          "filename": "lib/ecs.generated.ts",
          "line": 5020
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnTaskSetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 4923
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5046
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5066
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnTaskSet",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4927
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4951
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5051
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-cluster"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.Cluster`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4957
          },
          "name": "cluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-service"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.Service`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4963
          },
          "name": "service",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-taskdefinition"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.TaskDefinition`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4969
          },
          "name": "taskDefinition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-externalid"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.ExternalId`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4975
          },
          "name": "externalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-launchtype"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.LaunchType`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4981
          },
          "name": "launchType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-loadbalancers"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.LoadBalancers`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4987
          },
          "name": "loadBalancers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskSet.LoadBalancerProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-networkconfiguration"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.NetworkConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4993
          },
          "name": "networkConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskSet.NetworkConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-platformversion"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.PlatformVersion`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4999
          },
          "name": "platformVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-scale"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.Scale`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5005
          },
          "name": "scale",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskSet.ScaleProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-serviceregistries"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.ServiceRegistries`."
          },
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5011
          },
          "name": "serviceRegistries",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskSet.ServiceRegistryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskSet.AwsVpcConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-awsvpcconfiguration.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskSet.AwsVpcConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 5076
      },
      "name": "AwsVpcConfigurationProperty",
      "namespace": "CfnTaskSet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-awsvpcconfiguration.html#cfn-ecs-taskset-awsvpcconfiguration-subnets"
            },
            "stability": "external",
            "summary": "`CfnTaskSet.AwsVpcConfigurationProperty.Subnets`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5091
          },
          "name": "subnets",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-awsvpcconfiguration.html#cfn-ecs-taskset-awsvpcconfiguration-assignpublicip"
            },
            "stability": "external",
            "summary": "`CfnTaskSet.AwsVpcConfigurationProperty.AssignPublicIp`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5081
          },
          "name": "assignPublicIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-awsvpcconfiguration.html#cfn-ecs-taskset-awsvpcconfiguration-securitygroups"
            },
            "stability": "external",
            "summary": "`CfnTaskSet.AwsVpcConfigurationProperty.SecurityGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5086
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskSet.LoadBalancerProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-loadbalancer.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskSet.LoadBalancerProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 5152
      },
      "name": "LoadBalancerProperty",
      "namespace": "CfnTaskSet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-loadbalancer.html#cfn-ecs-taskset-loadbalancer-containername"
            },
            "stability": "external",
            "summary": "`CfnTaskSet.LoadBalancerProperty.ContainerName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5157
          },
          "name": "containerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-loadbalancer.html#cfn-ecs-taskset-loadbalancer-containerport"
            },
            "stability": "external",
            "summary": "`CfnTaskSet.LoadBalancerProperty.ContainerPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5162
          },
          "name": "containerPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-loadbalancer.html#cfn-ecs-taskset-loadbalancer-loadbalancername"
            },
            "stability": "external",
            "summary": "`CfnTaskSet.LoadBalancerProperty.LoadBalancerName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5167
          },
          "name": "loadBalancerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-loadbalancer.html#cfn-ecs-taskset-loadbalancer-targetgrouparn"
            },
            "stability": "external",
            "summary": "`CfnTaskSet.LoadBalancerProperty.TargetGroupArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5172
          },
          "name": "targetGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskSet.NetworkConfigurationProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-networkconfiguration.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskSet.NetworkConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 5235
      },
      "name": "NetworkConfigurationProperty",
      "namespace": "CfnTaskSet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-networkconfiguration.html#cfn-ecs-taskset-networkconfiguration-awsvpcconfiguration"
            },
            "stability": "external",
            "summary": "`CfnTaskSet.NetworkConfigurationProperty.AwsVpcConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5240
          },
          "name": "awsVpcConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskSet.AwsVpcConfigurationProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskSet.ScaleProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-scale.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskSet.ScaleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 5294
      },
      "name": "ScaleProperty",
      "namespace": "CfnTaskSet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-scale.html#cfn-ecs-taskset-scale-unit"
            },
            "stability": "external",
            "summary": "`CfnTaskSet.ScaleProperty.Unit`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5299
          },
          "name": "unit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-scale.html#cfn-ecs-taskset-scale-value"
            },
            "stability": "external",
            "summary": "`CfnTaskSet.ScaleProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5304
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskSet.ServiceRegistryProperty": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-serviceregistry.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskSet.ServiceRegistryProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 5361
      },
      "name": "ServiceRegistryProperty",
      "namespace": "CfnTaskSet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-serviceregistry.html#cfn-ecs-taskset-serviceregistry-containername"
            },
            "stability": "external",
            "summary": "`CfnTaskSet.ServiceRegistryProperty.ContainerName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5366
          },
          "name": "containerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-serviceregistry.html#cfn-ecs-taskset-serviceregistry-containerport"
            },
            "stability": "external",
            "summary": "`CfnTaskSet.ServiceRegistryProperty.ContainerPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5371
          },
          "name": "containerPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-serviceregistry.html#cfn-ecs-taskset-serviceregistry-port"
            },
            "stability": "external",
            "summary": "`CfnTaskSet.ServiceRegistryProperty.Port`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5376
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskset-serviceregistry.html#cfn-ecs-taskset-serviceregistry-registryarn"
            },
            "stability": "external",
            "summary": "`CfnTaskSet.ServiceRegistryProperty.RegistryArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 5381
          },
          "name": "registryArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CfnTaskSetProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::ECS::TaskSet`."
      },
      "fqn": "@aws-cdk/aws-ecs.CfnTaskSetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs.generated.ts",
        "line": 4781
      },
      "name": "CfnTaskSetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-cluster"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.Cluster`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4787
          },
          "name": "cluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-service"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.Service`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4793
          },
          "name": "service",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-taskdefinition"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.TaskDefinition`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4799
          },
          "name": "taskDefinition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-externalid"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.ExternalId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4805
          },
          "name": "externalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-launchtype"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.LaunchType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4811
          },
          "name": "launchType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-loadbalancers"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.LoadBalancers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4817
          },
          "name": "loadBalancers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskSet.LoadBalancerProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-networkconfiguration"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.NetworkConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4823
          },
          "name": "networkConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskSet.NetworkConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-platformversion"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.PlatformVersion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4829
          },
          "name": "platformVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-scale"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.Scale`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4835
          },
          "name": "scale",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskSet.ScaleProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-serviceregistries"
            },
            "stability": "external",
            "summary": "`AWS::ECS::TaskSet.ServiceRegistries`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs.generated.ts",
            "line": 4841
          },
          "name": "serviceRegistries",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ecs.CfnTaskSet.ServiceRegistryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CloudMapNamespaceOptions": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The options for creating an AWS Cloud Map namespace."
      },
      "fqn": "@aws-cdk/aws-ecs.CloudMapNamespaceOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 915
      },
      "name": "CloudMapNamespaceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the namespace, such as example.com."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 919
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PrivateDns",
            "stability": "stable",
            "summary": "The type of CloudMap Namespace to create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 926
          },
          "name": "type",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.NamespaceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "VPC of the cluster for Private DNS Namespace, otherwise none",
            "remarks": "This property is required for private DNS namespaces.",
            "stability": "stable",
            "summary": "The VPC to associate the namespace with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 933
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CloudMapOptions": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The options to enabling AWS Cloud Map for an Amazon ECS service."
      },
      "fqn": "@aws-cdk/aws-ecs.CloudMapOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 767
      },
      "name": "CloudMapOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- the defaultCloudMapNamespace associated to the cluster",
            "stability": "stable",
            "summary": "The service discovery namespace for the Cloud Map service to attach to the ECS service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 780
          },
          "name": "cloudMapNamespace",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.INamespace"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- DnsRecordType.A if TaskDefinition.networkMode = AWS_VPC, otherwise DnsRecordType.SRV",
            "remarks": "The supported record types are A or SRV.",
            "stability": "stable",
            "summary": "The DNS record type that you want AWS Cloud Map to create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 787
          },
          "name": "dnsRecordType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.DnsRecordType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "60",
            "stability": "stable",
            "summary": "The amount of time that you want DNS resolvers to cache the settings for this record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 794
          },
          "name": "dnsTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "NOTE: This is used for HealthCheckCustomConfig",
            "stability": "stable",
            "summary": "The number of 30-second intervals that you want Cloud Map to wait after receiving an UpdateInstanceCustomHealthStatus request before it changes the health status of a service instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 802
          },
          "name": "failureThreshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CloudFormation-generated name",
            "stability": "stable",
            "summary": "The name of the Cloud Map service to attach to the ECS service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 773
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Cluster": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A regional grouping of one or more container instances on which you can run tasks and services."
      },
      "fqn": "@aws-cdk/aws-ecs.Cluster",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the Cluster class."
        },
        "locationInModule": {
          "filename": "lib/cluster.ts",
          "line": 136
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ClusterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ecs.ICluster"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 83
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing cluster to the stack from its attributes."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 87
          },
          "name": "fromClusterAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ClusterAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ICluster"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method adds compute capacity to a cluster using the specified AutoScalingGroup."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 248
          },
          "name": "addAutoScalingGroup",
          "parameters": [
            {
              "docs": {
                "remarks": "[disable-awslint:ref-via-interface] is needed in order to install the ECS\nagent by updating the ASGs user data.",
                "summary": "the ASG to add to this cluster."
              },
              "name": "autoScalingGroup",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroup"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecs.AddAutoScalingGroupCapacityOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Returns the AutoScalingGroup so you can add autoscaling settings to it.",
            "stability": "stable",
            "summary": "This method adds compute capacity to a cluster by creating an AutoScalingGroup with the specified options."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 218
          },
          "name": "addCapacity",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.AddCapacityOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroup"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "addCapacityProvider adds the name of a capacityProvider to the list of supproted capacityProviders for a cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 349
          },
          "name": "addCapacityProvider",
          "parameters": [
            {
              "docs": {
                "summary": "the capacity provider to add to this cluster."
              },
              "name": "provider",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "NOTE: HttpNamespaces are not supported, as ECS always requires a DNSConfig when registering an instance to a Cloud\nMap service.",
            "stability": "stable",
            "summary": "Add an AWS Cloud Map DNS namespace for this cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 183
          },
          "name": "addDefaultCloudMapNamespace",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.CloudMapNamespaceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.INamespace"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method returns the specifed CloudWatch metric for this cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 439
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "average over 5 minutes",
            "stability": "stable",
            "summary": "This method returns the CloudWatch metric for this clusters CPU reservation."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 405
          },
          "name": "metricCpuReservation",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "average over 5 minutes",
            "stability": "stable",
            "summary": "This method returns the CloudWatch metric for this clusters CPU utilization."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 414
          },
          "name": "metricCpuUtilization",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "average over 5 minutes",
            "stability": "stable",
            "summary": "This method returns the CloudWatch metric for this clusters memory reservation."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 423
          },
          "name": "metricMemoryReservation",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "average over 5 minutes",
            "stability": "stable",
            "summary": "This method returns the CloudWatch metric for this clusters memory utilization."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 432
          },
          "name": "metricMemoryUtilization",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "Cluster",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) that identifies the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 104
          },
          "name": "clusterArn",
          "overrides": "@aws-cdk/aws-ecs.ICluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 109
          },
          "name": "clusterName",
          "overrides": "@aws-cdk/aws-ecs.ICluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Manage the allowed network connections for the cluster with Security Groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 94
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ecs.ICluster",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether the cluster has EC2 capacity associated with it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 396
          },
          "name": "hasEc2Capacity",
          "overrides": "@aws-cdk/aws-ecs.ICluster",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The VPC associated with the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 99
          },
          "name": "vpc",
          "overrides": "@aws-cdk/aws-ecs.ICluster",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Getter for autoscaling group added to cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 389
          },
          "name": "autoscalingGroup",
          "optional": true,
          "overrides": "@aws-cdk/aws-ecs.ICluster",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Getter for namespace added to cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 209
          },
          "name": "defaultCloudMapNamespace",
          "optional": true,
          "overrides": "@aws-cdk/aws-ecs.ICluster",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.INamespace"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ClusterAttributes": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties to import from the ECS cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.ClusterAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 737
      },
      "name": "ClusterAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 741
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The security groups associated with the container instances registered to the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 758
          },
          "name": "securityGroups",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC associated with the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 753
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No default autoscaling group",
            "stability": "stable",
            "summary": "Autoscaling group added to the cluster if capacity is added."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 779
          },
          "name": "autoscalingGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Derived from clusterName",
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) that identifies the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 748
          },
          "name": "clusterArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No default namespace",
            "stability": "stable",
            "summary": "The AWS Cloud Map namespace to associate with the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 772
          },
          "name": "defaultCloudMapNamespace",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.INamespace"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Specifies whether the cluster has EC2 instance capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 765
          },
          "name": "hasEc2Capacity",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ClusterProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties used to define an ECS cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.ClusterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 21
      },
      "name": "ClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no EC2 capacity will be added, you can use `addCapacity` to add capacity later.",
            "stability": "stable",
            "summary": "The ec2 capacity to add to the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 49
          },
          "name": "capacity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.AddCapacityOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None. Currently only FARGATE and FARGATE_SPOT are supported.",
            "stability": "stable",
            "summary": "The capacity providers to add to the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 56
          },
          "name": "capacityProviders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CloudFormation-generated name",
            "stability": "stable",
            "summary": "The name for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 27
          },
          "name": "clusterName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Container Insights will be disabled for this cluser.",
            "stability": "stable",
            "summary": "If true CloudWatch Container Insights will be enabled for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 63
          },
          "name": "containerInsights",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no service discovery namespace created, you can use `addDefaultCloudMapNamespace` to add a\ndefault service discovery namespace later.",
            "stability": "stable",
            "summary": "The service discovery namespace created in this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 42
          },
          "name": "defaultCloudMapNamespace",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.CloudMapNamespaceOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- creates a new VPC with two AZs",
            "stability": "stable",
            "summary": "The VPC where your ECS instances will be running or your ENIs will be deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 34
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CommonTaskDefinitionProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "For more information, see\n[Task Definition Parameters](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html).",
        "stability": "stable",
        "summary": "The common properties for all task definitions."
      },
      "fqn": "@aws-cdk/aws-ecs.CommonTaskDefinitionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 47
      },
      "name": "CommonTaskDefinitionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- An execution role will be automatically created if you use ECR images in your task definition.",
            "remarks": "The role will be used to retrieve container images from ECR and create CloudWatch log groups.",
            "stability": "stable",
            "summary": "The name of the IAM task execution role that grants the ECS agent to call AWS APIs on your behalf."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 62
          },
          "name": "executionRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated name.",
            "remarks": "A family groups multiple versions of a task definition.",
            "stability": "stable",
            "summary": "The name of a family that this task definition is registered to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 53
          },
          "name": "family",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No proxy configuration.",
            "stability": "stable",
            "summary": "The configuration details for the App Mesh proxy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 76
          },
          "name": "proxyConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ProxyConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A task role is automatically created for you.",
            "stability": "stable",
            "summary": "The name of the IAM role that grants containers in the task permission to call AWS APIs on your behalf."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 69
          },
          "name": "taskRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No volumes are passed to the Docker daemon on a container instance.",
            "remarks": "For more information, see\n[Task Definition Parameter Volumes](https://docs.aws.amazon.com/AmazonECS/latest/developerguide//task_definition_parameters.html#volumes).",
            "stability": "stable",
            "summary": "The list of volume definitions for the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 84
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.Volume"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Compatibility": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The task launch type compatibility requirement."
      },
      "fqn": "@aws-cdk/aws-ecs.Compatibility",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 855
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The task should specify the EC2 launch type."
          },
          "name": "EC2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The task should specify the Fargate launch type."
          },
          "name": "FARGATE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The task can specify either the EC2 or Fargate launch types."
          },
          "name": "EC2_AND_FARGATE"
        }
      ],
      "name": "Compatibility"
    },
    "@aws-cdk/aws-ecs.ContainerDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable",
        "summary": "A container definition is used in a task definition to describe the containers that are launched as part of a task."
      },
      "fqn": "@aws-cdk/aws-ecs.ContainerDefinition",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the ContainerDefinition class."
        },
        "locationInModule": {
          "filename": "lib/container-definition.ts",
          "line": 395
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ContainerDefinitionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 308
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "This method adds one or more container dependencies to the container."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 519
          },
          "name": "addContainerDependencies",
          "parameters": [
            {
              "name": "containerDependencies",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDependency"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "This parameter is only supported if the task definition is using the bridge network mode.\nWarning: The --link flag is a legacy feature of Docker. It may eventually be removed.",
            "stability": "stable",
            "summary": "This method adds a link which allows containers to communicate with each other without the need for port mappings."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 444
          },
          "name": "addLink",
          "parameters": [
            {
              "name": "container",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            },
            {
              "name": "alias",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method adds one or more mount points for data volumes to the container."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 458
          },
          "name": "addMountPoints",
          "parameters": [
            {
              "name": "mountPoints",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.MountPoint"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method adds one or more port mappings to the container."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 488
          },
          "name": "addPortMappings",
          "parameters": [
            {
              "name": "portMappings",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.PortMapping"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "This adds the correct container mountPoint and task definition volume.",
            "stability": "stable",
            "summary": "This method mounts temporary disk space to the container."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 467
          },
          "name": "addScratch",
          "parameters": [
            {
              "name": "scratch",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ScratchSpace"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method adds the specified statement to the IAM task execution policy in the task definition."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 533
          },
          "name": "addToExecutionPolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method adds one or more ulimits to the container."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 512
          },
          "name": "addUlimits",
          "parameters": [
            {
              "name": "ulimits",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.Ulimit"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This method adds one or more volumes to the container."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 526
          },
          "name": "addVolumesFrom",
          "parameters": [
            {
              "name": "volumesFrom",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.VolumeFrom"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the host port for the requested container port if it exists."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 540
          },
          "name": "findPortMapping",
          "parameters": [
            {
              "name": "containerPort",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "protocol",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.Protocol"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PortMapping"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Render this container definition to a CloudFormation object."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 588
          },
          "name": "renderContainerDefinition",
          "parameters": [
            {
              "docs": {
                "summary": "[disable-awslint:ref-via-interface] (unused but kept to avoid breaking change)."
              },
              "name": "_taskDefinition",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDefinitionProperty"
            }
          }
        }
      ],
      "name": "ContainerDefinition",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "An array dependencies defined for container startup and shutdown."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 338
          },
          "name": "containerDependencies",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDependency"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of this container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 355
          },
          "name": "containerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The port the container will listen on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 575
          },
          "name": "containerPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "remarks": "If the essential parameter of a container is marked as true, and that container\nfails or stops for any reason, all other containers that are part of the task are\nstopped. If the essential parameter of a container is marked as false, then its\nfailure does not affect the rest of the containers in a task.\n\nIf this parameter isomitted, a container is assumed to be essential.",
            "stability": "stable",
            "summary": "Specifies whether the container will be marked essential."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 350
          },
          "name": "essential",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "remarks": "This property is only used for tasks that use the awsvpc network mode.",
            "stability": "stable",
            "summary": "The inbound rules associated with the security group the task or service will use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 556
          },
          "name": "ingressPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether there was at least one memory limit specified in this definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 360
          },
          "name": "memoryLimitSpecified",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The mount points for data volumes in your container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 317
          },
          "name": "mountPoints",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.MountPoint"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "Port mappings allow containers to access ports\non the host container instance to send or receive traffic.",
            "stability": "stable",
            "summary": "The list of port mappings for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 323
          },
          "name": "portMappings",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.PortMapping"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the task definition that includes this container definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 365
          },
          "name": "taskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An array of ulimits to set in the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 333
          },
          "name": "ulimits",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.Ulimit"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The data volumes to mount from another container in the same task definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 328
          },
          "name": "volumesFrom",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.VolumeFrom"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The environment files for this container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 370
          },
          "name": "environmentFiles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.EnvironmentFileConfig"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Linux-specific modifications that are applied to the container, such as Linux kernel capabilities."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 312
          },
          "name": "linuxParameters",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.LinuxParameters"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The log configuration specification for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 375
          },
          "name": "logDriverConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.LogDriverConfig"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether this container definition references a specific JSON field of a secret stored in Secrets Manager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 381
          },
          "name": "referencesSecretJsonField",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ContainerDefinitionOptions": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ecs.ContainerDefinitionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 69
      },
      "name": "ContainerDefinitionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This string is passed directly to the Docker daemon.\nImages in the Docker Hub registry are available by default.\nOther repositories are specified with either repository-url/image:tag or repository-url/image@digest.\nTODO: Update these to specify using classes of IContainerImage",
            "stability": "stable",
            "summary": "The image used to start a container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 78
          },
          "name": "image",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ContainerImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CMD value built into container image.",
            "remarks": "If you provide a shell command as a single string, you have to quote command-line arguments.",
            "stability": "stable",
            "summary": "The command that is passed to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 87
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No minimum CPU units reserved.",
            "stability": "stable",
            "summary": "The minimum number of CPU units to reserve for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 94
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "When this parameter is true, networking is disabled within the container.",
            "stability": "stable",
            "summary": "Specifies whether networking is disabled within the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 103
          },
          "name": "disableNetworking",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No search domains.",
            "stability": "stable",
            "summary": "A list of DNS search domains that are presented to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 110
          },
          "name": "dnsSearchDomains",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default DNS servers.",
            "stability": "stable",
            "summary": "A list of DNS servers that are presented to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 117
          },
          "name": "dnsServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No labels.",
            "stability": "stable",
            "summary": "A key/value map of labels to add to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 124
          },
          "name": "dockerLabels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No security labels.",
            "stability": "stable",
            "summary": "A list of strings to provide custom labels for SELinux and AppArmor multi-level security systems."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 131
          },
          "name": "dockerSecurityOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Entry point configured in container.",
            "see": "https://docs.docker.com/engine/reference/builder/#entrypoint",
            "stability": "stable",
            "summary": "The ENTRYPOINT value to pass to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 140
          },
          "name": "entryPoint",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No environment variables.",
            "stability": "stable",
            "summary": "The environment variables to pass to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 147
          },
          "name": "environment",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No environment files.",
            "see": "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html",
            "stability": "stable",
            "summary": "The environment files to pass to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 156
          },
          "name": "environmentFiles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.EnvironmentFile"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If the essential parameter of a container is marked as true, and that container fails\nor stops for any reason, all other containers that are part of the task are stopped.\nIf the essential parameter of a container is marked as false, then its failure does not\naffect the rest of the containers in a task. All tasks must have at least one essential container.\n\nIf this parameter is omitted, a container is assumed to be essential.",
            "stability": "stable",
            "summary": "Specifies whether the container is marked essential."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 191
          },
          "name": "essential",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No extra hosts.",
            "stability": "stable",
            "summary": "A list of hostnames and IP address mappings to append to the /etc/hosts file on the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 198
          },
          "name": "extraHosts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No GPUs assigned.",
            "stability": "stable",
            "summary": "The number of GPUs assigned to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 290
          },
          "name": "gpuCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Health check configuration from container.",
            "stability": "stable",
            "summary": "The health check command and associated configuration parameters for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 205
          },
          "name": "healthCheck",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.HealthCheck"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatic hostname.",
            "stability": "stable",
            "summary": "The hostname to use for your container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 212
          },
          "name": "hostname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Linux parameters.",
            "remarks": "For more information see [KernelCapabilities](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_KernelCapabilities.html).",
            "stability": "stable",
            "summary": "Linux-specific modifications that are applied to the container, such as Linux kernel capabilities."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 283
          },
          "name": "linuxParameters",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.LinuxParameters"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Containers use the same logging driver that the Docker daemon uses.",
            "stability": "stable",
            "summary": "The log configuration specification for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 275
          },
          "name": "logging",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.LogDriver"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No memory limit.",
            "remarks": "If your container attempts to exceed the allocated memory, the container\nis terminated.\n\nAt least one of memoryLimitMiB and memoryReservationMiB is required for non-Fargate services.",
            "stability": "stable",
            "summary": "The amount (in MiB) of memory to present to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 224
          },
          "name": "memoryLimitMiB",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No memory reserved.",
            "remarks": "When system memory is under heavy contention, Docker attempts to keep the\ncontainer memory to this soft limit. However, your container can consume more\nmemory when it needs to, up to either the hard limit specified with the memory\nparameter (if applicable), or all of the available memory on the container\ninstance, whichever comes first.\n\nAt least one of memoryLimitMiB and memoryReservationMiB is required for non-Fargate services.",
            "stability": "stable",
            "summary": "The soft limit (in MiB) of memory to reserve for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 239
          },
          "name": "memoryReservationMiB",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "When this parameter is true, the container is given elevated privileges on the host container instance (similar to the root user).",
            "stability": "stable",
            "summary": "Specifies whether the container is marked as privileged."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 247
          },
          "name": "privileged",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "When this parameter is true, the container is given read-only access to its root file system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 254
          },
          "name": "readonlyRootFilesystem",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No secret environment variables.",
            "stability": "stable",
            "summary": "The secret environment variables to pass to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 163
          },
          "name": "secrets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.Secret"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "stable",
            "summary": "Time duration (in seconds) to wait before giving up on resolving dependencies for a container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 170
          },
          "name": "startTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "stable",
            "summary": "Time duration (in seconds) to wait before the container is forcefully killed if it doesn't exit normally on its own."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 177
          },
          "name": "stopTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "root",
            "stability": "stable",
            "summary": "The user name to use inside the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 261
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "/",
            "stability": "stable",
            "summary": "The working directory in which to run commands inside the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 268
          },
          "name": "workingDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ContainerDefinitionProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties in a container definition."
      },
      "fqn": "@aws-cdk/aws-ecs.ContainerDefinitionProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.ContainerDefinitionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 296
      },
      "name": "ContainerDefinitionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "stable",
            "summary": "The name of the task definition that includes this container definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 302
          },
          "name": "taskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ContainerDependency": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ContainerDependency.html",
        "stability": "stable",
        "summary": "The details of a dependency on another container in the task definition."
      },
      "fqn": "@aws-cdk/aws-ecs.ContainerDependency",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 800
      },
      "name": "ContainerDependency",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The container to depend on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 804
          },
          "name": "container",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ContainerDependencyCondition.HEALTHY",
            "remarks": "Valid values are ContainerDependencyCondition.START, ContainerDependencyCondition.COMPLETE,\nContainerDependencyCondition.SUCCESS and ContainerDependencyCondition.HEALTHY.",
            "stability": "stable",
            "summary": "The state the container needs to be in to satisfy the dependency and proceed with startup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 813
          },
          "name": "condition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ContainerDependencyCondition"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ContainerDependencyCondition": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ecs.ContainerDependencyCondition",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 816
      },
      "members": [
        {
          "docs": {
            "remarks": "It validates that a dependent container is started before permitting other containers to start.",
            "stability": "stable",
            "summary": "This condition emulates the behavior of links and volumes today."
          },
          "name": "START"
        },
        {
          "docs": {
            "remarks": "This can be useful for nonessential containers that run a script and then exit.",
            "stability": "stable",
            "summary": "This condition validates that a dependent container runs to completion (exits) before permitting other containers to start."
          },
          "name": "COMPLETE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This condition is the same as COMPLETE, but it also requires that the container exits with a zero status."
          },
          "name": "SUCCESS"
        },
        {
          "docs": {
            "remarks": "This requires that the dependent container has health checks configured. This condition is confirmed only at task startup.",
            "stability": "stable",
            "summary": "This condition validates that the dependent container passes its Docker health check before permitting other containers to start."
          },
          "name": "HEALTHY"
        }
      ],
      "name": "ContainerDependencyCondition"
    },
    "@aws-cdk/aws-ecs.ContainerImage": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Constructs for types of container images."
      },
      "fqn": "@aws-cdk/aws-ecs.ContainerImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/container-image.ts",
        "line": 12
      },
      "methods": [
        {
          "docs": {
            "remarks": "If you already have a `DockerImageAsset` instance, you can use the\n`ContainerImage.fromDockerImageAsset` method instead.",
            "stability": "stable",
            "summary": "Reference an image that's constructed directly from sources on disk."
          },
          "locationInModule": {
            "filename": "lib/container-image.ts",
            "line": 35
          },
          "name": "fromAsset",
          "parameters": [
            {
              "docs": {
                "summary": "The directory containing the Dockerfile."
              },
              "name": "directory",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecs.AssetImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.AssetImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use an existing `DockerImageAsset` for this container image."
          },
          "locationInModule": {
            "filename": "lib/container-image.ts",
            "line": 44
          },
          "name": "fromDockerImageAsset",
          "parameters": [
            {
              "docs": {
                "summary": "The `DockerImageAsset` to use for this container definition."
              },
              "name": "asset",
              "type": {
                "fqn": "@aws-cdk/aws-ecr-assets.DockerImageAsset"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ContainerImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference an image in an ECR repository."
          },
          "locationInModule": {
            "filename": "lib/container-image.ts",
            "line": 23
          },
          "name": "fromEcrRepository",
          "parameters": [
            {
              "name": "repository",
              "type": {
                "fqn": "@aws-cdk/aws-ecr.IRepository"
              }
            },
            {
              "name": "tag",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.EcrImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference an image on DockerHub or another online registry."
          },
          "locationInModule": {
            "filename": "lib/container-image.ts",
            "line": 16
          },
          "name": "fromRegistry",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecs.RepositoryImageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.RepositoryImage"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Called when the image is used by a ContainerDefinition."
          },
          "locationInModule": {
            "filename": "lib/container-image.ts",
            "line": 58
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ContainerImageConfig"
            }
          }
        }
      ],
      "name": "ContainerImage"
    },
    "@aws-cdk/aws-ecs.ContainerImageConfig": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The configuration for creating a container image."
      },
      "fqn": "@aws-cdk/aws-ecs.ContainerImageConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-image.ts",
        "line": 64
      },
      "name": "ContainerImageConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specifies the name of the container image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-image.ts",
            "line": 68
          },
          "name": "imageName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specifies the credentials used to access the image repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-image.ts",
            "line": 73
          },
          "name": "repositoryCredentials",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.RepositoryCredentialsProperty"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.CpuUtilizationScalingProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for enabling scaling based on CPU utilization."
      },
      "fqn": "@aws-cdk/aws-ecs.CpuUtilizationScalingProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/scalable-task-count.ts",
        "line": 103
      },
      "name": "CpuUtilizationScalingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target value for CPU utilization across all tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 107
          },
          "name": "targetUtilizationPercent",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.DeploymentCircuitBreaker": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The deployment circuit breaker to use for the service."
      },
      "fqn": "@aws-cdk/aws-ecs.DeploymentCircuitBreaker",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 50
      },
      "name": "DeploymentCircuitBreaker",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to enable rollback on deployment failure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 55
          },
          "name": "rollback",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.DeploymentController": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The deployment controller to use for the service."
      },
      "fqn": "@aws-cdk/aws-ecs.DeploymentController",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 38
      },
      "name": "DeploymentController",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "DeploymentControllerType.ECS",
            "stability": "stable",
            "summary": "The deployment controller type to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 44
          },
          "name": "type",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.DeploymentControllerType"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.DeploymentControllerType": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The deployment controller type to use for the service."
      },
      "fqn": "@aws-cdk/aws-ecs.DeploymentControllerType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 851
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The rolling update (ECS) deployment type involves replacing the current running version of the container with the latest version."
          },
          "name": "ECS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The blue/green (CODE_DEPLOY) deployment type uses the blue/green deployment model powered by AWS CodeDeploy."
          },
          "name": "CODE_DEPLOY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The external (EXTERNAL) deployment type enables you to use any third-party deployment controller."
          },
          "name": "EXTERNAL"
        }
      ],
      "name": "DeploymentControllerType"
    },
    "@aws-cdk/aws-ecs.Device": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A container instance host device."
      },
      "fqn": "@aws-cdk/aws-ecs.Device",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/linux-parameters.ts",
        "line": 126
      },
      "name": "Device",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path for the device on the host container instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 137
          },
          "name": "hostPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Same path as the host",
            "stability": "stable",
            "summary": "The path inside the container at which to expose the host device."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 132
          },
          "name": "containerPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Readonly",
            "remarks": "By default, the container has permissions for read, write, and mknod for the device.",
            "stability": "stable",
            "summary": "The explicit permissions to provide to the container for the device."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 145
          },
          "name": "permissions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.DevicePermission"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.DevicePermission": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Permissions for device access."
      },
      "fqn": "@aws-cdk/aws-ecs.DevicePermission",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/linux-parameters.ts",
        "line": 232
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Read."
          },
          "name": "READ"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Write."
          },
          "name": "WRITE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Make a node."
          },
          "name": "MKNOD"
        }
      ],
      "name": "DevicePermission"
    },
    "@aws-cdk/aws-ecs.DockerVolumeConfiguration": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "Docker volumes are only supported when you are using the EC2 launch type.",
        "stability": "stable",
        "summary": "The configuration for a Docker volume."
      },
      "fqn": "@aws-cdk/aws-ecs.DockerVolumeConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 740
      },
      "name": "DockerVolumeConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Docker volume driver to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 751
          },
          "name": "driver",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The scope for the Docker volume that determines its lifecycle."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 767
          },
          "name": "scope",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Scope"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If true is specified, the Docker volume will be created for you.",
            "stability": "stable",
            "summary": "Specifies whether the Docker volume should be created if it does not already exist."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 747
          },
          "name": "autoprovision",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No options",
            "stability": "stable",
            "summary": "A map of Docker driver-specific options passed through."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 757
          },
          "name": "driverOpts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No labels",
            "stability": "stable",
            "summary": "Custom metadata to add to your Docker volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 763
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Ec2Service": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.BaseService",
      "docs": {
        "custom": {
          "resource": "AWS::ECS::Service"
        },
        "stability": "stable",
        "summary": "This creates a service using the EC2 launch type on an ECS cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.Ec2Service",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the Ec2Service class."
        },
        "locationInModule": {
          "filename": "lib/ec2/ec2-service.ts",
          "line": 159
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.Ec2ServiceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ecs.IEc2Service"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2/ec2-service.ts",
        "line": 132
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports from the specified service ARN."
          },
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 137
          },
          "name": "fromEc2ServiceArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "ec2ServiceArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.IEc2Service"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports from the specified service attrributes."
          },
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 148
          },
          "name": "fromEc2ServiceAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.Ec2ServiceAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.IBaseService"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For more information, see\n[Amazon ECS Task Placement Constraints](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html).",
            "stability": "stable",
            "summary": "Adds one or more placement contstraints to use for tasks in the service."
          },
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 255
          },
          "name": "addPlacementConstraints",
          "parameters": [
            {
              "name": "constraints",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "For more information, see\n[Amazon ECS Task Placement Strategies](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html).",
            "stability": "stable",
            "summary": "Adds one or more placement strategies to use for tasks in the service."
          },
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 241
          },
          "name": "addPlacementStrategies",
          "parameters": [
            {
              "name": "strategies",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Validates this Ec2Service."
          },
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 264
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "Ec2Service"
    },
    "@aws-cdk/aws-ecs.Ec2ServiceAttributes": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties to import from the service using the EC2 launch type."
      },
      "fqn": "@aws-cdk/aws-ecs.Ec2ServiceAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2/ec2-service.ts",
        "line": 106
      },
      "name": "Ec2ServiceAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The cluster that hosts the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 110
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- either this, or {@link serviceName}, is required",
            "stability": "stable",
            "summary": "The service ARN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 117
          },
          "name": "serviceArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- either this, or {@link serviceArn}, is required",
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 124
          },
          "name": "serviceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Ec2ServiceProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for defining a service using the EC2 launch type."
      },
      "fqn": "@aws-cdk/aws-ecs.Ec2ServiceProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.BaseServiceOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2/ec2-service.ts",
        "line": 14
      },
      "name": "Ec2ServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "stable",
            "summary": "The task definition to use for tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 20
          },
          "name": "taskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If true, each task will receive a public IP address.\n\nThis property is only used for tasks that use the awsvpc network mode.",
            "stability": "stable",
            "summary": "Specifies whether the task's elastic network interface receives a public IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 30
          },
          "name": "assignPublicIp",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If true, the service scheduler deploys exactly one task on each container instance in your cluster.\n\nWhen you are using this strategy, do not specify a desired number of tasks orany task placement strategies.",
            "stability": "stable",
            "summary": "Specifies whether the service will use the daemon scheduling strategy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 84
          },
          "name": "daemon",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No constraints.",
            "remarks": "For more information, see\n[Amazon ECS Task Placement Constraints](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html).",
            "stability": "stable",
            "summary": "The placement constraints to use for tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 66
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No strategies.",
            "remarks": "For more information, see\n[Amazon ECS Task Placement Strategies](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html).",
            "stability": "stable",
            "summary": "The placement strategies to use for tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 74
          },
          "name": "placementStrategies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PropagatedTagSource.NONE",
            "deprecated": "Use `propagateTags` instead.",
            "remarks": "Tags can only be propagated to the tasks within the service during service creation.",
            "stability": "deprecated",
            "summary": "Specifies whether to propagate the tags from the task definition or the service to the tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 93
          },
          "name": "propagateTaskTagsFrom",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.PropagatedTagSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new security group is created.",
            "deprecated": "use securityGroups instead.",
            "remarks": "If you do not specify a security group, the default security group for the VPC is used.\n\nThis property is only used for tasks that use the awsvpc network mode.",
            "stability": "deprecated",
            "summary": "The security groups to associate with the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 49
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new security group is created.",
            "remarks": "If you do not specify a security group, the default security group for the VPC is used.\n\nThis property is only used for tasks that use the awsvpc network mode.",
            "stability": "stable",
            "summary": "The security groups to associate with the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 58
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Public subnets if `assignPublicIp` is set, otherwise the first available one of Private, Isolated, Public, in that order.",
            "remarks": "This property is only used for tasks that use the awsvpc network mode.",
            "stability": "stable",
            "summary": "The subnets to associate with the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-service.ts",
            "line": 39
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Ec2TaskDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.TaskDefinition",
      "docs": {
        "custom": {
          "resource": "AWS::ECS::TaskDefinition"
        },
        "stability": "stable",
        "summary": "The details of a task definition run on an EC2 cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.Ec2TaskDefinition",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the Ec2TaskDefinition class."
        },
        "locationInModule": {
          "filename": "lib/ec2/ec2-task-definition.ts",
          "line": 77
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.Ec2TaskDefinitionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ecs.IEc2TaskDefinition"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ec2/ec2-task-definition.ts",
        "line": 59
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a task definition from the specified task definition ARN."
          },
          "locationInModule": {
            "filename": "lib/ec2/ec2-task-definition.ts",
            "line": 64
          },
          "name": "fromEc2TaskDefinitionArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "ec2TaskDefinitionArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.IEc2TaskDefinition"
            }
          },
          "static": true
        }
      ],
      "name": "Ec2TaskDefinition"
    },
    "@aws-cdk/aws-ecs.Ec2TaskDefinitionProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for a task definition run on an EC2 cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.Ec2TaskDefinitionProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.CommonTaskDefinitionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2/ec2-task-definition.ts",
        "line": 9
      },
      "name": "Ec2TaskDefinitionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- IpcMode used by the task is not specified",
            "remarks": "Not supported in Fargate and Windows containers.",
            "stability": "stable",
            "summary": "The IPC resource namespace to use for the containers in the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-task-definition.ts",
            "line": 35
          },
          "name": "ipcMode",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.IpcMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- NetworkMode.Bridge for EC2 tasks, AwsVpc for Fargate tasks.",
            "remarks": "The valid values are none, bridge, awsvpc, and host.",
            "stability": "stable",
            "summary": "The Docker networking mode to use for the containers in the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-task-definition.ts",
            "line": 17
          },
          "name": "networkMode",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.NetworkMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- PidMode used by the task is not specified",
            "remarks": "Not supported in Fargate and Windows containers.",
            "stability": "stable",
            "summary": "The process namespace to use for the containers in the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-task-definition.ts",
            "line": 44
          },
          "name": "pidMode",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.PidMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No placement constraints.",
            "remarks": "You can\nspecify a maximum of 10 constraints per task (this limit includes\nconstraints in the task definition and those specified at run time).",
            "stability": "stable",
            "summary": "An array of placement constraint objects to use for the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ec2/ec2-task-definition.ts",
            "line": 26
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.EcrImage": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.ContainerImage",
      "docs": {
        "stability": "stable",
        "summary": "An image from an Amazon ECR repository."
      },
      "fqn": "@aws-cdk/aws-ecs.EcrImage",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the EcrImage class."
        },
        "locationInModule": {
          "filename": "lib/images/ecr.ts",
          "line": 25
        },
        "parameters": [
          {
            "name": "repository",
            "type": {
              "fqn": "@aws-cdk/aws-ecr.IRepository"
            }
          },
          {
            "name": "tag",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/images/ecr.ts",
        "line": 12
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the image is used by a ContainerDefinition."
          },
          "locationInModule": {
            "filename": "lib/images/ecr.ts",
            "line": 31
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.ContainerImage",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ContainerImageConfig"
            }
          }
        }
      ],
      "name": "EcrImage",
      "properties": [
        {
          "docs": {
            "remarks": "For example, 012345678910.dkr.ecr.<region-name>.amazonaws.com/<repository-name>:latest or\n012345678910.dkr.ecr.<region-name>.amazonaws.com/<repository-name>@sha256:94afd1f2e64d908bc90dbca0035a5b567EXAMPLE.",
            "stability": "stable",
            "summary": "The image name. Images in Amazon ECR repositories can be specified by either using the full registry/repository:tag or registry/repository@digest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/images/ecr.ts",
            "line": 20
          },
          "name": "imageName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.EcsOptimizedAmi": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "deprecated": "see {@link EcsOptimizedImage#amazonLinux}, {@link EcsOptimizedImage#amazonLinux} and {@link EcsOptimizedImage#windows}",
        "stability": "deprecated",
        "summary": "Construct a Linux or Windows machine image from the latest ECS Optimized AMI published in SSM."
      },
      "fqn": "@aws-cdk/aws-ecs.EcsOptimizedAmi",
      "initializer": {
        "docs": {
          "stability": "deprecated",
          "summary": "Constructs a new instance of the EcsOptimizedAmi class."
        },
        "locationInModule": {
          "filename": "lib/cluster.ts",
          "line": 517
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.EcsOptimizedAmiProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 507
      },
      "methods": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Return the correct image."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 551
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "EcsOptimizedAmi"
    },
    "@aws-cdk/aws-ecs.EcsOptimizedAmiProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "deprecated": "see {@link EcsOptimizedImage}",
        "stability": "deprecated",
        "summary": "The properties that define which ECS-optimized AMI is used."
      },
      "fqn": "@aws-cdk/aws-ecs.EcsOptimizedAmiProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 476
      },
      "name": "EcsOptimizedAmiProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "AmazonLinuxGeneration.AmazonLinux2",
            "stability": "deprecated",
            "summary": "The Amazon Linux generation to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 482
          },
          "name": "generation",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxGeneration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AmiHardwareType.Standard",
            "stability": "deprecated",
            "summary": "The ECS-optimized AMI variant to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 496
          },
          "name": "hardwareType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.AmiHardwareType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none, uses Linux generation",
            "stability": "deprecated",
            "summary": "The Windows Server version to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 489
          },
          "name": "windowsVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.WindowsOptimizedVersion"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.EcsOptimizedImage": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Construct a Linux or Windows machine image from the latest ECS Optimized AMI published in SSM."
      },
      "fqn": "@aws-cdk/aws-ecs.EcsOptimizedImage",
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 565
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Construct an Amazon Linux AMI image from the latest ECS Optimized AMI published in SSM."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 578
          },
          "name": "amazonLinux",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.EcsOptimizedImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Construct an Amazon Linux 2 image from the latest ECS Optimized AMI published in SSM."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 571
          },
          "name": "amazonLinux2",
          "parameters": [
            {
              "docs": {
                "summary": "ECS-optimized AMI variant to use."
              },
              "name": "hardwareType",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecs.AmiHardwareType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.EcsOptimizedImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Construct a Windows image from the latest ECS Optimized AMI published in SSM."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 587
          },
          "name": "windows",
          "parameters": [
            {
              "docs": {
                "summary": "Windows Version to use."
              },
              "name": "windowsVersion",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.WindowsOptimizedVersion"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.EcsOptimizedImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the correct image."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 624
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "EcsOptimizedImage"
    },
    "@aws-cdk/aws-ecs.EcsTarget": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ecs.EcsTarget",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 59
      },
      "name": "EcsTarget",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 63
          },
          "name": "containerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Listener and properties for adding target group to the listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 87
          },
          "name": "listener",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ListenerConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "ID for a target group to be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 82
          },
          "name": "newTargetGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Container port of the first added port mapping.",
            "remarks": "Only applicable when using application/network load balancers.",
            "stability": "stable",
            "summary": "The port number of the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 70
          },
          "name": "containerPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Protocol.TCP",
            "remarks": "Only applicable when using application load balancers.",
            "stability": "stable",
            "summary": "The protocol used for the port mapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 77
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Protocol"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.EfsVolumeConfiguration": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The configuration for an Elastic FileSystem volume."
      },
      "fqn": "@aws-cdk/aws-ecs.EfsVolumeConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 798
      },
      "name": "EfsVolumeConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Amazon EFS file system ID to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 802
          },
          "name": "fileSystemId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No configuration.",
            "stability": "stable",
            "summary": "The authorization configuration details for the Amazon EFS file system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 832
          },
          "name": "authorizationConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.AuthorizationConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The root of the Amazon EFS volume",
            "remarks": "Specifying / will have the same effect as omitting this parameter.",
            "stability": "stable",
            "summary": "The directory within the Amazon EFS file system to mount as the root directory inside the host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 809
          },
          "name": "rootDirectory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DISABLED",
            "remarks": "Transit encryption must be enabled if Amazon EFS IAM authorization is used.\n\nValid values: ENABLED | DISABLED",
            "stability": "stable",
            "summary": "Whether or not to enable encryption for Amazon EFS data in transit between the Amazon ECS host and the Amazon EFS server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 819
          },
          "name": "transitEncryption",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Port selection strategy that the Amazon EFS mount helper uses.",
            "remarks": "EFS mount helper uses.",
            "stability": "stable",
            "summary": "The port to use when sending encrypted data between the Amazon ECS host and the Amazon EFS server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 826
          },
          "name": "transitEncryptionPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.EnvironmentFile": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Constructs for types of environment files."
      },
      "fqn": "@aws-cdk/aws-ecs.EnvironmentFile",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/environment-file.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Loads the environment file from a local disk path."
          },
          "locationInModule": {
            "filename": "lib/environment-file.ts",
            "line": 15
          },
          "name": "fromAsset",
          "parameters": [
            {
              "docs": {
                "summary": "Local disk path."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-s3-assets.AssetOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.AssetEnvironmentFile"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "`S3EnvironmentFile` associated with the specified S3 object.",
            "stability": "stable",
            "summary": "Loads the environment file from an S3 bucket."
          },
          "locationInModule": {
            "filename": "lib/environment-file.ts",
            "line": 27
          },
          "name": "fromBucket",
          "parameters": [
            {
              "docs": {
                "summary": "The S3 bucket."
              },
              "name": "bucket",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              }
            },
            {
              "docs": {
                "summary": "The object key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Optional S3 object version."
              },
              "name": "objectVersion",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.S3EnvironmentFile"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Called when the container is initialized to allow this object to bind to the stack."
          },
          "locationInModule": {
            "filename": "lib/environment-file.ts",
            "line": 37
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "summary": "The binding scope."
              },
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.EnvironmentFileConfig"
            }
          }
        }
      ],
      "name": "EnvironmentFile"
    },
    "@aws-cdk/aws-ecs.EnvironmentFileConfig": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for the environment file."
      },
      "fqn": "@aws-cdk/aws-ecs.EnvironmentFileConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/environment-file.ts",
        "line": 108
      },
      "name": "EnvironmentFileConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of environment file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/environment-file.ts",
            "line": 112
          },
          "name": "fileType",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.EnvironmentFileType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The location of the environment file in S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/environment-file.ts",
            "line": 117
          },
          "name": "s3Location",
          "type": {
            "fqn": "@aws-cdk/aws-s3.Location"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.EnvironmentFileType": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Type of environment file to be included in the container definition."
      },
      "fqn": "@aws-cdk/aws-ecs.EnvironmentFileType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/environment-file.ts",
        "line": 123
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Environment file hosted on S3, referenced by object ARN."
          },
          "name": "S3"
        }
      ],
      "name": "EnvironmentFileType"
    },
    "@aws-cdk/aws-ecs.FargatePlatformVersion": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "see": "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html",
        "stability": "stable",
        "summary": "The platform version on which to run your service."
      },
      "fqn": "@aws-cdk/aws-ecs.FargatePlatformVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/fargate/fargate-service.ts",
        "line": 186
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The latest, recommended platform version."
          },
          "name": "LATEST"
        },
        {
          "docs": {
            "remarks": "Supports EFS endpoints, CAP_SYS_PTRACE Linux capability,\nnetwork performance metrics in CloudWatch Container Insights,\nconsolidated 20 GB ephemeral volume.",
            "stability": "stable",
            "summary": "Version 1.4.0."
          },
          "name": "VERSION1_4"
        },
        {
          "docs": {
            "remarks": "Supports secrets, task recycling.",
            "stability": "stable",
            "summary": "Version 1.3.0."
          },
          "name": "VERSION1_3"
        },
        {
          "docs": {
            "remarks": "Supports private registries.",
            "stability": "stable",
            "summary": "Version 1.2.0."
          },
          "name": "VERSION1_2"
        },
        {
          "docs": {
            "remarks": "Supports task metadata, health checks, service discovery.",
            "stability": "stable",
            "summary": "Version 1.1.0."
          },
          "name": "VERSION1_1"
        },
        {
          "docs": {
            "remarks": "Based on Amazon Linux 2017.09.",
            "stability": "stable",
            "summary": "Initial release."
          },
          "name": "VERSION1_0"
        }
      ],
      "name": "FargatePlatformVersion"
    },
    "@aws-cdk/aws-ecs.FargateService": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.BaseService",
      "docs": {
        "custom": {
          "resource": "AWS::ECS::Service"
        },
        "stability": "stable",
        "summary": "This creates a service using the Fargate launch type on an ECS cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.FargateService",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the FargateService class."
        },
        "locationInModule": {
          "filename": "lib/fargate/fargate-service.ts",
          "line": 132
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.FargateServiceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ecs.IFargateService"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/fargate/fargate-service.ts",
        "line": 109
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports from the specified service ARN."
          },
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 114
          },
          "name": "fromFargateServiceArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "fargateServiceArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.IFargateService"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports from the specified service attrributes."
          },
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 125
          },
          "name": "fromFargateServiceAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.FargateServiceAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.IBaseService"
            }
          },
          "static": true
        }
      ],
      "name": "FargateService"
    },
    "@aws-cdk/aws-ecs.FargateServiceAttributes": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties to import from the service using the Fargate launch type."
      },
      "fqn": "@aws-cdk/aws-ecs.FargateServiceAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate/fargate-service.ts",
        "line": 83
      },
      "name": "FargateServiceAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The cluster that hosts the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 87
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- either this, or {@link serviceName}, is required",
            "stability": "stable",
            "summary": "The service ARN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 94
          },
          "name": "serviceArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- either this, or {@link serviceArn}, is required",
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 101
          },
          "name": "serviceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.FargateServiceProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for defining a service using the Fargate launch type."
      },
      "fqn": "@aws-cdk/aws-ecs.FargateServiceProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.BaseServiceOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate/fargate-service.ts",
        "line": 12
      },
      "name": "FargateServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "stable",
            "summary": "The task definition to use for tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 18
          },
          "name": "taskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If true, each task will receive a public IP address.",
            "stability": "stable",
            "summary": "Specifies whether the task's elastic network interface receives a public IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 27
          },
          "name": "assignPublicIp",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Latest",
            "remarks": "If one is not specified, the LATEST platform version is used by default. For more information, see\n[AWS Fargate Platform Versions](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html)\nin the Amazon Elastic Container Service Developer Guide.",
            "stability": "stable",
            "summary": "The platform version on which to run your service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 60
          },
          "name": "platformVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.FargatePlatformVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PropagatedTagSource.NONE",
            "deprecated": "Use `propagateTags` instead.",
            "remarks": "Tags can only be propagated to the tasks within the service during service creation.",
            "stability": "deprecated",
            "summary": "Specifies whether to propagate the tags from the task definition or the service to the tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 69
          },
          "name": "propagateTaskTagsFrom",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.PropagatedTagSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new security group is created.",
            "deprecated": "use securityGroups instead.",
            "remarks": "If you do not specify a security group, the default security group for the VPC is used.",
            "stability": "deprecated",
            "summary": "The security groups to associate with the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 42
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new security group is created.",
            "remarks": "If you do not specify a security group, the default security group for the VPC is used.",
            "stability": "stable",
            "summary": "The security groups to associate with the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 49
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Public subnets if `assignPublicIp` is set, otherwise the first available one of Private, Isolated, Public, in that order.",
            "stability": "stable",
            "summary": "The subnets to associate with the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-service.ts",
            "line": 34
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.FargateTaskDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.TaskDefinition",
      "docs": {
        "custom": {
          "resource": "AWS::ECS::TaskDefinition"
        },
        "stability": "stable",
        "summary": "The details of a task definition run on a Fargate cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.FargateTaskDefinition",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the FargateTaskDefinition class."
        },
        "locationInModule": {
          "filename": "lib/fargate/fargate-task-definition.ts",
          "line": 86
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.FargateTaskDefinitionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ecs.IFargateTaskDefinition"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/fargate/fargate-task-definition.ts",
        "line": 59
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a task definition from the specified task definition ARN."
          },
          "locationInModule": {
            "filename": "lib/fargate/fargate-task-definition.ts",
            "line": 64
          },
          "name": "fromFargateTaskDefinitionArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "fargateTaskDefinitionArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.IFargateTaskDefinition"
            }
          },
          "static": true
        }
      ],
      "name": "FargateTaskDefinition",
      "properties": [
        {
          "docs": {
            "remarks": "Fargate tasks require the awsvpc network mode.",
            "stability": "stable",
            "summary": "The Docker networking mode to use for the containers in the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-task-definition.ts",
            "line": 78
          },
          "name": "networkMode",
          "overrides": "@aws-cdk/aws-ecs.TaskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.NetworkMode"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.FargateTaskDefinitionProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for a task definition."
      },
      "fqn": "@aws-cdk/aws-ecs.FargateTaskDefinitionProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.CommonTaskDefinitionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate/fargate-task-definition.ts",
        "line": 8
      },
      "name": "FargateTaskDefinitionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "256",
            "remarks": "For tasks using the Fargate launch type,\nthis field is required and you must use one of the following values,\nwhich determines your range of valid values for the memory parameter:\n\n256 (.25 vCPU) - Available memory values: 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB)\n\n512 (.5 vCPU) - Available memory values: 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB)\n\n1024 (1 vCPU) - Available memory values: 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)\n\n2048 (2 vCPU) - Available memory values: Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB)\n\n4096 (4 vCPU) - Available memory values: Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB)",
            "stability": "stable",
            "summary": "The number of cpu units used by the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-task-definition.ts",
            "line": 26
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "512",
            "remarks": "For tasks using the Fargate launch type,\nthis field is required and you must use one of the following values, which determines your range of valid values for the cpu parameter:\n\n512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available cpu values: 256 (.25 vCPU)\n\n1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available cpu values: 512 (.5 vCPU)\n\n2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB) - Available cpu values: 1024 (1 vCPU)\n\nBetween 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available cpu values: 2048 (2 vCPU)\n\nBetween 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available cpu values: 4096 (4 vCPU)",
            "stability": "stable",
            "summary": "The amount (in MiB) of memory used by the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/fargate-task-definition.ts",
            "line": 44
          },
          "name": "memoryLimitMiB",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.FireLensLogDriver": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.LogDriver",
      "docs": {
        "stability": "stable",
        "summary": "FireLens enables you to use task definition parameters to route logs to an AWS service   or AWS Partner Network (APN) destination for log storage and analytics."
      },
      "fqn": "@aws-cdk/aws-ecs.FireLensLogDriver",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the FireLensLogDriver class."
        },
        "locationInModule": {
          "filename": "lib/log-drivers/firelens-log-driver.ts",
          "line": 36
        },
        "parameters": [
          {
            "docs": {
              "summary": "the awsfirelens log driver configuration options."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.FireLensLogDriverProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/log-drivers/firelens-log-driver.ts",
        "line": 25
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the log driver is configured on a container."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/firelens-log-driver.ts",
            "line": 45
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.LogDriver",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriverConfig"
            }
          }
        }
      ],
      "name": "FireLensLogDriver"
    },
    "@aws-cdk/aws-ecs.FireLensLogDriverProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specifies the firelens log driver configuration options."
      },
      "fqn": "@aws-cdk/aws-ecs.FireLensLogDriverProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.BaseLogDriverProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/log-drivers/firelens-log-driver.ts",
        "line": 13
      },
      "name": "FireLensLogDriverProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- the log driver options",
            "stability": "stable",
            "summary": "The configuration options to send to the log driver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/firelens-log-driver.ts",
            "line": 18
          },
          "name": "options",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.FirelensConfig": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Firelens Configuration https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html#firelens-taskdef."
      },
      "fqn": "@aws-cdk/aws-ecs.FirelensConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/firelens-log-router.ts",
        "line": 71
      },
      "name": "FirelensConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- fluentbit",
            "stability": "stable",
            "summary": "The log router to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firelens-log-router.ts",
            "line": 77
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.FirelensLogRouterType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional options",
            "stability": "stable",
            "summary": "Firelens options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firelens-log-router.ts",
            "line": 83
          },
          "name": "options",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.FirelensOptions"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.FirelensConfigFileType": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "remarks": "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html#firelens-taskdef-customconfig",
        "stability": "stable",
        "summary": "Firelens configuration file type, s3 or file path."
      },
      "fqn": "@aws-cdk/aws-ecs.FirelensConfigFileType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/firelens-log-router.ts",
        "line": 31
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "s3."
          },
          "name": "S3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "fluentd."
          },
          "name": "FILE"
        }
      ],
      "name": "FirelensConfigFileType"
    },
    "@aws-cdk/aws-ecs.FirelensLogRouter": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.ContainerDefinition",
      "docs": {
        "stability": "stable",
        "summary": "Firelens log router."
      },
      "fqn": "@aws-cdk/aws-ecs.FirelensLogRouter",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the FirelensLogRouter class."
        },
        "locationInModule": {
          "filename": "lib/firelens-log-router.ts",
          "line": 200
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.FirelensLogRouterProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/firelens-log-router.ts",
        "line": 190
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Render this container definition to a CloudFormation object."
          },
          "locationInModule": {
            "filename": "lib/firelens-log-router.ts",
            "line": 240
          },
          "name": "renderContainerDefinition",
          "overrides": "@aws-cdk/aws-ecs.ContainerDefinition",
          "parameters": [
            {
              "name": "_taskDefinition",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ContainerDefinitionProperty"
            }
          }
        }
      ],
      "name": "FirelensLogRouter",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Firelens configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firelens-log-router.ts",
            "line": 195
          },
          "name": "firelensConfig",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.FirelensConfig"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.FirelensLogRouterDefinitionOptions": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The options for creating a firelens log router."
      },
      "fqn": "@aws-cdk/aws-ecs.FirelensLogRouterDefinitionOptions",
      "interfaces": [
        "@aws-cdk/aws-ecs.ContainerDefinitionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/firelens-log-router.ts",
        "line": 99
      },
      "name": "FirelensLogRouterDefinitionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Firelens configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firelens-log-router.ts",
            "line": 103
          },
          "name": "firelensConfig",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.FirelensConfig"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.FirelensLogRouterProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties in a firelens log router."
      },
      "fqn": "@aws-cdk/aws-ecs.FirelensLogRouterProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.ContainerDefinitionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/firelens-log-router.ts",
        "line": 89
      },
      "name": "FirelensLogRouterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Firelens configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firelens-log-router.ts",
            "line": 93
          },
          "name": "firelensConfig",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.FirelensConfig"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.FirelensLogRouterType": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "remarks": "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html",
        "stability": "stable",
        "summary": "Firelens log router type, fluentbit or fluentd."
      },
      "fqn": "@aws-cdk/aws-ecs.FirelensLogRouterType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/firelens-log-router.ts",
        "line": 15
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "fluentbit."
          },
          "name": "FLUENTBIT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "fluentd."
          },
          "name": "FLUENTD"
        }
      ],
      "name": "FirelensLogRouterType"
    },
    "@aws-cdk/aws-ecs.FirelensOptions": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The options for firelens log router https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html#firelens-taskdef-customconfig."
      },
      "fqn": "@aws-cdk/aws-ecs.FirelensOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/firelens-log-router.ts",
        "line": 47
      },
      "name": "FirelensOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Custom configuration file, S3 ARN or a file path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firelens-log-router.ts",
            "line": 64
          },
          "name": "configFileValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- determined by checking configFileValue with S3 ARN.",
            "stability": "stable",
            "summary": "Custom configuration file, s3 or file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firelens-log-router.ts",
            "line": 59
          },
          "name": "configFileType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.FirelensConfigFileType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true",
            "remarks": "You can disable this action by setting enable-ecs-log-metadata to false.",
            "stability": "stable",
            "summary": "By default, Amazon ECS adds additional fields in your log entries that help identify the source of the logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firelens-log-router.ts",
            "line": 53
          },
          "name": "enableECSLogMetadata",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.FluentdLogDriver": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.LogDriver",
      "docs": {
        "stability": "stable",
        "summary": "A log driver that sends log information to journald Logs."
      },
      "fqn": "@aws-cdk/aws-ecs.FluentdLogDriver",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the FluentdLogDriver class."
        },
        "locationInModule": {
          "filename": "lib/log-drivers/fluentd-log-driver.ts",
          "line": 72
        },
        "parameters": [
          {
            "docs": {
              "summary": "the fluentd log driver configuration options."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.FluentdLogDriverProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/log-drivers/fluentd-log-driver.ts",
        "line": 66
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the log driver is configured on a container."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/fluentd-log-driver.ts",
            "line": 79
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.LogDriver",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriverConfig"
            }
          }
        }
      ],
      "name": "FluentdLogDriver"
    },
    "@aws-cdk/aws-ecs.FluentdLogDriverProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "[Source](https://docs.docker.com/config/containers/logging/fluentd/)",
        "stability": "stable",
        "summary": "Specifies the fluentd log driver configuration options."
      },
      "fqn": "@aws-cdk/aws-ecs.FluentdLogDriverProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.BaseLogDriverProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/log-drivers/fluentd-log-driver.ts",
        "line": 16
      },
      "name": "FluentdLogDriverProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- address not set.",
            "remarks": "Supply the\naddress option to connect to a different address. tcp(default) and unix\nsockets are supported.",
            "stability": "stable",
            "summary": "By default, the logging driver connects to localhost:24224."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/fluentd-log-driver.ts",
            "line": 24
          },
          "name": "address",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "remarks": "Messages are buffered until\nthe connection is established.",
            "stability": "stable",
            "summary": "Docker connects to Fluentd in the background."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/fluentd-log-driver.ts",
            "line": 32
          },
          "name": "asyncConnect",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The amount of RAM available to the container.",
            "stability": "stable",
            "summary": "The amount of data to buffer before flushing to disk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/fluentd-log-driver.ts",
            "line": 39
          },
          "name": "bufferLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 4294967295 (2**32 - 1).",
            "stability": "stable",
            "summary": "The maximum number of retries."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/fluentd-log-driver.ts",
            "line": 53
          },
          "name": "maxRetries",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 1 second",
            "stability": "stable",
            "summary": "How long to wait between retries."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/fluentd-log-driver.ts",
            "line": 46
          },
          "name": "retryWait",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Generates event logs in nanosecond resolution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/fluentd-log-driver.ts",
            "line": 60
          },
          "name": "subSecondPrecision",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.GelfCompressionType": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The type of compression the GELF driver uses to compress each log message."
      },
      "fqn": "@aws-cdk/aws-ecs.GelfCompressionType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/log-drivers/gelf-log-driver.ts",
        "line": 14
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GZIP"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ZLIB"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NONE"
        }
      ],
      "name": "GelfCompressionType"
    },
    "@aws-cdk/aws-ecs.GelfLogDriver": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.LogDriver",
      "docs": {
        "stability": "stable",
        "summary": "A log driver that sends log information to journald Logs."
      },
      "fqn": "@aws-cdk/aws-ecs.GelfLogDriver",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the GelfLogDriver class."
        },
        "locationInModule": {
          "filename": "lib/log-drivers/gelf-log-driver.ts",
          "line": 75
        },
        "parameters": [
          {
            "docs": {
              "summary": "the gelf log driver configuration options."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.GelfLogDriverProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/log-drivers/gelf-log-driver.ts",
        "line": 69
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the log driver is configured on a container."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/gelf-log-driver.ts",
            "line": 91
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.LogDriver",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriverConfig"
            }
          }
        }
      ],
      "name": "GelfLogDriver"
    },
    "@aws-cdk/aws-ecs.GelfLogDriverProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "[Source](https://docs.docker.com/config/containers/logging/gelf/)",
        "stability": "stable",
        "summary": "Specifies the journald log driver configuration options."
      },
      "fqn": "@aws-cdk/aws-ecs.GelfLogDriverProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.BaseLogDriverProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/log-drivers/gelf-log-driver.ts",
        "line": 25
      },
      "name": "GelfLogDriverProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "tcp and udp are the only supported URI\nspecifier and you must specify the port.",
            "stability": "stable",
            "summary": "The address of the GELF server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/gelf-log-driver.ts",
            "line": 30
          },
          "name": "address",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 1",
            "remarks": "An integer in the range of -1 to 9 (BestCompression). Higher levels provide more\ncompression at lower speed. Either -1 or 0 disables compression.",
            "stability": "stable",
            "summary": "UDP Only The level of compression when gzip or zlib is the gelf-compression-type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/gelf-log-driver.ts",
            "line": 47
          },
          "name": "compressionLevel",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- gzip",
            "remarks": "Allowed values are gzip, zlib and none.",
            "stability": "stable",
            "summary": "UDP Only The type of compression the GELF driver uses to compress each log message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/gelf-log-driver.ts",
            "line": 38
          },
          "name": "compressionType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.GelfCompressionType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 3",
            "remarks": "A positive integer.",
            "stability": "stable",
            "summary": "TCP Only The maximum number of reconnection attempts when the connection drop."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/gelf-log-driver.ts",
            "line": 55
          },
          "name": "tcpMaxReconnect",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 1",
            "remarks": "A positive integer.",
            "stability": "stable",
            "summary": "TCP Only The number of seconds to wait between reconnection attempts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/gelf-log-driver.ts",
            "line": 63
          },
          "name": "tcpReconnectDelay",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.HealthCheck": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The health check command and associated configuration parameters for the container."
      },
      "fqn": "@aws-cdk/aws-ecs.HealthCheck",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 632
      },
      "name": "HealthCheck",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The string array must start with CMD to execute the command arguments directly, or\nCMD-SHELL to run the command with the container's default shell.\n\nFor example: [ \"CMD-SHELL\", \"curl -f http://localhost/ || exit 1\" ]",
            "stability": "stable",
            "summary": "A string array representing the command that the container runs to determine if it is healthy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 640
          },
          "name": "command",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(30)",
            "remarks": "You may specify between 5 and 300 seconds.",
            "stability": "stable",
            "summary": "The time period in seconds between each health check execution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 649
          },
          "name": "interval",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "remarks": "You may specify between 1 and 10 retries.",
            "stability": "stable",
            "summary": "The number of times to retry a failed health check before the container is considered unhealthy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 658
          },
          "name": "retries",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No start period",
            "remarks": "You may specify between 0 and 300 seconds.",
            "stability": "stable",
            "summary": "The optional grace period within which to provide containers time to bootstrap before failed health checks count towards the maximum number of retries."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 668
          },
          "name": "startPeriod",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(5)",
            "remarks": "You may specify between 2 and 60 seconds.",
            "stability": "stable",
            "summary": "The time period in seconds to wait for a health check to succeed before it is considered a failure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 677
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Host": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The details on a container instance bind mount host volume."
      },
      "fqn": "@aws-cdk/aws-ecs.Host",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 685
      },
      "name": "Host",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "If the sourcePath value does not exist on the host container instance, the Docker daemon creates it.\nIf the location does exist, the contents of the source path folder are exported.\n\nThis property is not supported for tasks that use the Fargate launch type.",
            "stability": "stable",
            "summary": "Specifies the path on the host container instance that is presented to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 693
          },
          "name": "sourcePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.IBaseService": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The interface for BaseService."
      },
      "fqn": "@aws-cdk/aws-ecs.IBaseService",
      "interfaces": [
        "@aws-cdk/aws-ecs.IService"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 290
      },
      "name": "IBaseService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The cluster that hosts the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 294
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ICluster": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "A regional grouping of one or more container instances on which you can run tasks and services."
      },
      "fqn": "@aws-cdk/aws-ecs.ICluster",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 695
      },
      "name": "ICluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) that identifies the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 706
          },
          "name": "clusterArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 700
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Manage the allowed network connections for the cluster with Security Groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 716
          },
          "name": "connections",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specifies whether the cluster has EC2 instance capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 721
          },
          "name": "hasEc2Capacity",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC associated with the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 711
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The autoscaling group added to the cluster if capacity is associated to the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 731
          },
          "name": "autoscalingGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The AWS Cloud Map namespace to associate with the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 726
          },
          "name": "defaultCloudMapNamespace",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.INamespace"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.IEc2Service": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The interface for a service using the EC2 launch type on an ECS cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.IEc2Service",
      "interfaces": [
        "@aws-cdk/aws-ecs.IService"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2/ec2-service.ts",
        "line": 99
      },
      "name": "IEc2Service"
    },
    "@aws-cdk/aws-ecs.IEc2TaskDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The interface of a task definition run on an EC2 cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.IEc2TaskDefinition",
      "interfaces": [
        "@aws-cdk/aws-ecs.ITaskDefinition"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ec2/ec2-task-definition.ts",
        "line": 50
      },
      "name": "IEc2TaskDefinition"
    },
    "@aws-cdk/aws-ecs.IEcsLoadBalancerTarget": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Interface for ECS load balancer target."
      },
      "fqn": "@aws-cdk/aws-ecs.IEcsLoadBalancerTarget",
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget",
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget",
        "@aws-cdk/aws-elasticloadbalancing.ILoadBalancerTarget"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 93
      },
      "name": "IEcsLoadBalancerTarget"
    },
    "@aws-cdk/aws-ecs.IFargateService": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The interface for a service using the Fargate launch type on an ECS cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.IFargateService",
      "interfaces": [
        "@aws-cdk/aws-ecs.IService"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate/fargate-service.ts",
        "line": 76
      },
      "name": "IFargateService"
    },
    "@aws-cdk/aws-ecs.IFargateTaskDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The interface of a task definition run on a Fargate cluster."
      },
      "fqn": "@aws-cdk/aws-ecs.IFargateTaskDefinition",
      "interfaces": [
        "@aws-cdk/aws-ecs.ITaskDefinition"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate/fargate-task-definition.ts",
        "line": 50
      },
      "name": "IFargateTaskDefinition"
    },
    "@aws-cdk/aws-ecs.IService": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The interface for a service."
      },
      "fqn": "@aws-cdk/aws-ecs.IService",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 19
      },
      "name": "IService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 25
          },
          "name": "serviceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 32
          },
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ITaskDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The interface for all task definitions."
      },
      "fqn": "@aws-cdk/aws-ecs.ITaskDefinition",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 15
      },
      "name": "ITaskDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "What launch types this task definition should be compatible with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 30
          },
          "name": "compatibility",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Compatibility"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return true if the task definition can be run on an EC2 cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 35
          },
          "name": "isEc2Compatible",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return true if the task definition can be run on a Fargate cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 40
          },
          "name": "isFargateCompatible",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ARN of this task definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 20
          },
          "name": "taskDefinitionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Execution role for this task definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 25
          },
          "name": "executionRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ITaskDefinitionExtension": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "remarks": "Classes that want to make changes to a TaskDefinition (such as\nadding helper containers) can implement this interface, and can\nthen be \"added\" to a TaskDefinition like so:\n\n    taskDefinition.addExtension(new MyExtension(\"some_parameter\"));",
        "stability": "stable",
        "summary": "An extension for Task Definitions."
      },
      "fqn": "@aws-cdk/aws-ecs.ITaskDefinitionExtension",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 881
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Apply the extension to the given TaskDefinition."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 887
          },
          "name": "extend",
          "parameters": [
            {
              "docs": {
                "summary": "[disable-awslint:ref-via-interface]."
              },
              "name": "taskDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
              }
            }
          ]
        }
      ],
      "name": "ITaskDefinitionExtension"
    },
    "@aws-cdk/aws-ecs.IpcMode": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The IPC resource namespace to use for the containers in the task."
      },
      "fqn": "@aws-cdk/aws-ecs.IpcMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 596
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "If none is specified, then IPC resources within the containers of a task are private and not shared with other containers in a task or on the container instance."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If host is specified, then all containers within the tasks that specified the host IPC mode on the same container instance share the same IPC resources with the host Amazon EC2 instance."
          },
          "name": "HOST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If task is specified, all containers within the specified task share the same IPC resources."
          },
          "name": "TASK"
        }
      ],
      "name": "IpcMode"
    },
    "@aws-cdk/aws-ecs.JournaldLogDriver": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.LogDriver",
      "docs": {
        "stability": "stable",
        "summary": "A log driver that sends log information to journald Logs."
      },
      "fqn": "@aws-cdk/aws-ecs.JournaldLogDriver",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the JournaldLogDriver class."
        },
        "locationInModule": {
          "filename": "lib/log-drivers/journald-log-driver.ts",
          "line": 26
        },
        "parameters": [
          {
            "docs": {
              "summary": "the journald log driver configuration options."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.JournaldLogDriverProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/log-drivers/journald-log-driver.ts",
        "line": 20
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the log driver is configured on a container."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/journald-log-driver.ts",
            "line": 33
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.LogDriver",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriverConfig"
            }
          }
        }
      ],
      "name": "JournaldLogDriver"
    },
    "@aws-cdk/aws-ecs.JournaldLogDriverProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "[Source](https://docs.docker.com/config/containers/logging/journald/)",
        "stability": "stable",
        "summary": "Specifies the journald log driver configuration options."
      },
      "fqn": "@aws-cdk/aws-ecs.JournaldLogDriverProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.BaseLogDriverProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/log-drivers/journald-log-driver.ts",
        "line": 15
      },
      "name": "JournaldLogDriverProps"
    },
    "@aws-cdk/aws-ecs.JsonFileLogDriver": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.LogDriver",
      "docs": {
        "stability": "stable",
        "summary": "A log driver that sends log information to json-file Logs."
      },
      "fqn": "@aws-cdk/aws-ecs.JsonFileLogDriver",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the JsonFileLogDriver class."
        },
        "locationInModule": {
          "filename": "lib/log-drivers/json-file-log-driver.ts",
          "line": 50
        },
        "parameters": [
          {
            "docs": {
              "summary": "the json-file log driver configuration options."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.JsonFileLogDriverProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/log-drivers/json-file-log-driver.ts",
        "line": 44
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the log driver is configured on a container."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/json-file-log-driver.ts",
            "line": 62
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.LogDriver",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriverConfig"
            }
          }
        }
      ],
      "name": "JsonFileLogDriver"
    },
    "@aws-cdk/aws-ecs.JsonFileLogDriverProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "[Source](https://docs.docker.com/config/containers/logging/json-file/)",
        "stability": "stable",
        "summary": "Specifies the json-file log driver configuration options."
      },
      "fqn": "@aws-cdk/aws-ecs.JsonFileLogDriverProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.BaseLogDriverProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/log-drivers/json-file-log-driver.ts",
        "line": 15
      },
      "name": "JsonFileLogDriverProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Toggles compression for rotated logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/json-file-log-driver.ts",
            "line": 38
          },
          "name": "compress",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 1",
            "remarks": "If rolling the logs creates\nexcess files, the oldest file is removed. Only effective when max-size is also set.\nA positive integer.",
            "stability": "stable",
            "summary": "The maximum number of log files that can be present."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/json-file-log-driver.ts",
            "line": 31
          },
          "name": "maxFile",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- -1 (unlimited)",
            "remarks": "A positive integer plus a modifier\nrepresenting the unit of measure (k, m, or g).",
            "stability": "stable",
            "summary": "The maximum size of the log before it is rolled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/json-file-log-driver.ts",
            "line": 22
          },
          "name": "maxSize",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.LaunchType": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The launch type of an ECS service."
      },
      "fqn": "@aws-cdk/aws-ecs.LaunchType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 836
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The service will be launched using the EC2 launch type."
          },
          "name": "EC2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The service will be launched using the FARGATE launch type."
          },
          "name": "FARGATE"
        }
      ],
      "name": "LaunchType"
    },
    "@aws-cdk/aws-ecs.LinuxParameters": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable",
        "summary": "Linux-specific options that are applied to the container."
      },
      "fqn": "@aws-cdk/aws-ecs.LinuxParameters",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the LinuxParameters class."
        },
        "locationInModule": {
          "filename": "lib/linux-parameters.ts",
          "line": 65
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LinuxParametersProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/linux-parameters.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "remarks": "Only works with EC2 launch type.",
            "stability": "stable",
            "summary": "Adds one or more Linux capabilities to the Docker configuration of a container."
          },
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 77
          },
          "name": "addCapabilities",
          "parameters": [
            {
              "name": "cap",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.Capability"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds one or more host devices to a container."
          },
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 93
          },
          "name": "addDevices",
          "parameters": [
            {
              "name": "device",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.Device"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Only works with EC2 launch type.",
            "stability": "stable",
            "summary": "Specifies the container path, mount options, and size (in MiB) of the tmpfs mount for a container."
          },
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 102
          },
          "name": "addTmpfs",
          "parameters": [
            {
              "name": "tmpfs",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.Tmpfs"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Only works with EC2 launch type.",
            "stability": "stable",
            "summary": "Removes one or more Linux capabilities to the Docker configuration of a container."
          },
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 86
          },
          "name": "dropCapabilities",
          "parameters": [
            {
              "name": "cap",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.Capability"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the Linux parameters to a CloudFormation object."
          },
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 109
          },
          "name": "renderLinuxParameters",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.LinuxParametersProperty"
            }
          }
        }
      ],
      "name": "LinuxParameters"
    },
    "@aws-cdk/aws-ecs.LinuxParametersProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for defining Linux-specific options that are applied to the container."
      },
      "fqn": "@aws-cdk/aws-ecs.LinuxParametersProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/linux-parameters.ts",
        "line": 12
      },
      "name": "LinuxParametersProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies whether to run an init process inside the container that forwards signals and reaps processes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 18
          },
          "name": "initProcessEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No shared memory.",
            "stability": "stable",
            "summary": "The value for the size (in MiB) of the /dev/shm volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 25
          },
          "name": "sharedMemorySize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.ListenerConfig": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Base class for configuring listener when registering targets."
      },
      "fqn": "@aws-cdk/aws-ecs.ListenerConfig",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 214
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a config for adding target group to ALB listener."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 218
          },
          "name": "applicationListener",
          "parameters": [
            {
              "name": "listener",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ListenerConfig"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a config for adding target group to NLB listener."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 225
          },
          "name": "networkListener",
          "parameters": [
            {
              "name": "listener",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.AddNetworkTargetsProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ListenerConfig"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Create and attach a target group to listener."
          },
          "locationInModule": {
            "filename": "lib/base/base-service.ts",
            "line": 232
          },
          "name": "addTargets",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.LoadBalancerTargetOptions"
              }
            },
            {
              "name": "service",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.BaseService"
              }
            }
          ]
        }
      ],
      "name": "ListenerConfig"
    },
    "@aws-cdk/aws-ecs.LoadBalancerTargetOptions": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "The port mapping for it must already have been created through addPortMapping().",
        "stability": "stable",
        "summary": "Properties for defining an ECS target."
      },
      "fqn": "@aws-cdk/aws-ecs.LoadBalancerTargetOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 716
      },
      "name": "LoadBalancerTargetOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 720
          },
          "name": "containerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Container port of the first added port mapping.",
            "remarks": "Only applicable when using application/network load balancers.",
            "stability": "stable",
            "summary": "The port number of the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 727
          },
          "name": "containerPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Protocol.TCP",
            "remarks": "Only applicable when using application load balancers.",
            "stability": "stable",
            "summary": "The protocol used for the port mapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 734
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Protocol"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.LogDriver": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The base class for log drivers."
      },
      "fqn": "@aws-cdk/aws-ecs.LogDriver",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/log-drivers/log-driver.ts",
        "line": 11
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a log driver configuration that sends log information to CloudWatch Logs."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/log-driver.ts",
            "line": 15
          },
          "name": "awsLogs",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.AwsLogDriverProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriver"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Called when the log driver is configured on a container."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/log-driver.ts",
            "line": 22
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriverConfig"
            }
          }
        }
      ],
      "name": "LogDriver"
    },
    "@aws-cdk/aws-ecs.LogDriverConfig": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The configuration to use when creating a log driver."
      },
      "fqn": "@aws-cdk/aws-ecs.LogDriverConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/log-drivers/log-driver.ts",
        "line": 28
      },
      "name": "LogDriverConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The valid values listed for this parameter are log drivers\nthat the Amazon ECS container agent can communicate with by default.\n\nFor tasks using the Fargate launch type, the supported log drivers are awslogs, splunk, and awsfirelens.\nFor tasks using the EC2 launch type, the supported log drivers are awslogs, fluentd, gelf, json-file, journald,\nlogentries,syslog, splunk, and awsfirelens.\n\nFor more information about using the awslogs log driver, see\n[Using the awslogs Log Driver](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_awslogs.html)\nin the Amazon Elastic Container Service Developer Guide.\n\nFor more information about using the awsfirelens log driver, see\n[Custom Log Routing](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html)\nin the Amazon Elastic Container Service Developer Guide.",
            "stability": "stable",
            "summary": "The log driver to use for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/log-driver.ts",
            "line": 45
          },
          "name": "logDriver",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The configuration options to send to the log driver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/log-driver.ts",
            "line": 50
          },
          "name": "options",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.LogDrivers": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The base class for log drivers."
      },
      "fqn": "@aws-cdk/aws-ecs.LogDrivers",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/log-drivers/log-drivers.ts",
        "line": 14
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a log driver configuration that sends log information to CloudWatch Logs."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/log-drivers.ts",
            "line": 18
          },
          "name": "awsLogs",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.AwsLogDriverProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriver"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For detail configurations, please refer to Amazon ECS FireLens Examples:\nhttps://github.com/aws-samples/amazon-ecs-firelens-examples",
            "stability": "stable",
            "summary": "Creates a log driver configuration that sends log information to firelens log router."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/log-drivers.ts",
            "line": 69
          },
          "name": "firelens",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.FireLensLogDriverProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriver"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a log driver configuration that sends log information to fluentd Logs."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/log-drivers.ts",
            "line": 25
          },
          "name": "fluentd",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecs.FluentdLogDriverProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriver"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a log driver configuration that sends log information to gelf Logs."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/log-drivers.ts",
            "line": 32
          },
          "name": "gelf",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.GelfLogDriverProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriver"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a log driver configuration that sends log information to journald Logs."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/log-drivers.ts",
            "line": 39
          },
          "name": "journald",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecs.JournaldLogDriverProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriver"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a log driver configuration that sends log information to json-file Logs."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/log-drivers.ts",
            "line": 46
          },
          "name": "jsonFile",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecs.JsonFileLogDriverProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriver"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a log driver configuration that sends log information to splunk Logs."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/log-drivers.ts",
            "line": 53
          },
          "name": "splunk",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.SplunkLogDriverProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriver"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a log driver configuration that sends log information to syslog Logs."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/log-drivers.ts",
            "line": 60
          },
          "name": "syslog",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecs.SyslogLogDriverProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriver"
            }
          },
          "static": true
        }
      ],
      "name": "LogDrivers"
    },
    "@aws-cdk/aws-ecs.MachineImageType": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The machine image type."
      },
      "fqn": "@aws-cdk/aws-ecs.MachineImageType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 69
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Amazon ECS-optimized Amazon Linux 2 AMI."
          },
          "name": "AMAZON_LINUX_2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Bottlerocket AMI."
          },
          "name": "BOTTLEROCKET"
        }
      ],
      "name": "MachineImageType"
    },
    "@aws-cdk/aws-ecs.MemoryUtilizationScalingProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for enabling scaling based on memory utilization."
      },
      "fqn": "@aws-cdk/aws-ecs.MemoryUtilizationScalingProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/scalable-task-count.ts",
        "line": 113
      },
      "name": "MemoryUtilizationScalingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target value for memory utilization across all tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 117
          },
          "name": "targetUtilizationPercent",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.MountPoint": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The details of data volume mount points for a container."
      },
      "fqn": "@aws-cdk/aws-ecs.MountPoint",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 934
      },
      "name": "MountPoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path on the container to mount the host volume at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 938
          },
          "name": "containerPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this value is true, the container has read-only access to the volume.\nIf this value is false, then the container can write to the volume.",
            "stability": "stable",
            "summary": "Specifies whether to give the container read-only access to the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 945
          },
          "name": "readOnly",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be a volume name referenced in the name parameter of task definition volume.",
            "stability": "stable",
            "summary": "The name of the volume to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 951
          },
          "name": "sourceVolume",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.NetworkMode": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The networking mode to use for the containers in the task."
      },
      "fqn": "@aws-cdk/aws-ecs.NetworkMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 560
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The task's containers do not have external connectivity and port mappings can't be specified in the container definition."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The task utilizes Docker's built-in virtual network which runs inside each container instance."
          },
          "name": "BRIDGE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The task is allocated an elastic network interface."
          },
          "name": "AWS_VPC"
        },
        {
          "docs": {
            "remarks": "In this mode, you can't run multiple instantiations of the same task on a\nsingle container instance when port mappings are used.",
            "stability": "stable",
            "summary": "The task bypasses Docker's built-in virtual network and maps container ports directly to the EC2 instance's network interface directly."
          },
          "name": "HOST"
        },
        {
          "docs": {
            "remarks": "This is the only supported network mode for Windows containers. For more information, see\n[Task Definition Parameters](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#network_mode).",
            "stability": "stable",
            "summary": "The task utilizes NAT network mode required by Windows containers."
          },
          "name": "NAT"
        }
      ],
      "name": "NetworkMode"
    },
    "@aws-cdk/aws-ecs.PidMode": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The process namespace to use for the containers in the task."
      },
      "fqn": "@aws-cdk/aws-ecs.PidMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 618
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "If host is specified, then all containers within the tasks that specified the host PID mode on the same container instance share the same process namespace with the host Amazon EC2 instance."
          },
          "name": "HOST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If task is specified, all containers within the specified task share the same process namespace."
          },
          "name": "TASK"
        }
      ],
      "name": "PidMode"
    },
    "@aws-cdk/aws-ecs.PlacementConstraint": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "remarks": "Tasks will only be placed on instances that match these rules.",
        "stability": "stable",
        "summary": "The placement constraints to use for tasks in the service. For more information, see [Amazon ECS Task Placement Constraints](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html)."
      },
      "fqn": "@aws-cdk/aws-ecs.PlacementConstraint",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/placement.ts",
        "line": 101
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Use distinctInstance to ensure that each task in a particular group is running on a different container instance."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 105
          },
          "name": "distinctInstances",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Multiple expressions can be specified. For more information, see\n[Cluster Query Language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html).\n\nYou can specify multiple expressions in one call. The tasks will only be placed on instances matching all expressions.",
            "see": "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html",
            "stability": "stable",
            "summary": "Use memberOf to restrict the selection to a group of valid candidates specified by a query expression."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 119
          },
          "name": "memberOf",
          "parameters": [
            {
              "name": "expressions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the placement JSON."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 132
          },
          "name": "toJson",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementConstraintProperty"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "PlacementConstraint"
    },
    "@aws-cdk/aws-ecs.PlacementStrategy": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "remarks": "Tasks will preferentially be placed on instances that match these rules.",
        "stability": "stable",
        "summary": "The placement strategies to use for tasks in the service. For more information, see [Amazon ECS Task Placement Strategies](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html)."
      },
      "fqn": "@aws-cdk/aws-ecs.PlacementStrategy",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/placement.ts",
        "line": 25
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Places tasks on the container instances with the least available capacity of the specified resource."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 70
          },
          "name": "packedBy",
          "parameters": [
            {
              "name": "resource",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.BinPackResource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This minimizes the number of instances in use.",
            "stability": "stable",
            "summary": "Places tasks on container instances with the least available amount of CPU capacity."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 54
          },
          "name": "packedByCpu",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This minimizes the number of instances in use.",
            "stability": "stable",
            "summary": "Places tasks on container instances with the least available amount of memory capacity."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 63
          },
          "name": "packedByMemory",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Places tasks randomly."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 77
          },
          "name": "randomly",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "attributes instanceId",
            "remarks": "You can use one of the built-in attributes found on `BuiltInAttributes`\nor supply your own custom instance attributes. If more than one attribute\nis supplied, spreading is done in order.",
            "stability": "stable",
            "summary": "Places tasks evenly based on the specified value."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 42
          },
          "name": "spreadAcross",
          "parameters": [
            {
              "name": "fields",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Places tasks evenly across all container instances in the cluster."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 29
          },
          "name": "spreadAcrossInstances",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the placement JSON."
          },
          "locationInModule": {
            "filename": "lib/placement.ts",
            "line": 90
          },
          "name": "toJson",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-ecs.CfnService.PlacementStrategyProperty"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "PlacementStrategy"
    },
    "@aws-cdk/aws-ecs.PortMapping": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Port mappings allow containers to access ports on the host container instance to send or receive traffic."
      },
      "fqn": "@aws-cdk/aws-ecs.PortMapping",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 851
      },
      "name": "PortMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "If you are using containers in a task with the awsvpc or host network mode, exposed ports should be specified using containerPort.\nIf you are using containers in a task with the bridge network mode and you specify a container port and not a host port,\nyour container automatically receives a host port in the ephemeral port range.\n\nFor more information, see hostPort.\nPort mappings that are automatically assigned in this way do not count toward the 100 reserved ports limit of a container instance.",
            "stability": "stable",
            "summary": "The port number on the container that is bound to the user-specified or automatically assigned host port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 862
          },
          "name": "containerPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If you are using containers in a task with the awsvpc or host network mode,\nthe hostPort can either be left blank or set to the same value as the containerPort.\n\nIf you are using containers in a task with the bridge network mode,\nyou can specify a non-reserved host port for your container port mapping, or\nyou can omit the hostPort (or set it to 0) while specifying a containerPort and\nyour container automatically receives a port in the ephemeral port range for\nyour container instance operating system and Docker version.",
            "stability": "stable",
            "summary": "The port number on the container instance to reserve for your container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 876
          },
          "name": "hostPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "TCP",
            "remarks": "Valid values are Protocol.TCP and Protocol.UDP.",
            "stability": "stable",
            "summary": "The protocol used for the port mapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 883
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Protocol"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.PropagatedTagSource": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Propagate tags from either service or task definition."
      },
      "fqn": "@aws-cdk/aws-ecs.PropagatedTagSource",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/base/base-service.ts",
        "line": 872
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Propagate tags from service."
          },
          "name": "SERVICE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Propagate tags from task definition."
          },
          "name": "TASK_DEFINITION"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Do not propagate."
          },
          "name": "NONE"
        }
      ],
      "name": "PropagatedTagSource"
    },
    "@aws-cdk/aws-ecs.Protocol": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Network protocol."
      },
      "fqn": "@aws-cdk/aws-ecs.Protocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 889
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "TCP."
          },
          "name": "TCP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "UDP."
          },
          "name": "UDP"
        }
      ],
      "name": "Protocol"
    },
    "@aws-cdk/aws-ecs.ProxyConfiguration": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The base class for proxy configurations."
      },
      "fqn": "@aws-cdk/aws-ecs.ProxyConfiguration",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/proxy-configuration/proxy-configuration.ts",
        "line": 11
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Called when the proxy configuration is configured on a task definition."
          },
          "locationInModule": {
            "filename": "lib/proxy-configuration/proxy-configuration.ts",
            "line": 15
          },
          "name": "bind",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_taskDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition.ProxyConfigurationProperty"
            }
          }
        }
      ],
      "name": "ProxyConfiguration"
    },
    "@aws-cdk/aws-ecs.ProxyConfigurations": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The base class for proxy configurations."
      },
      "fqn": "@aws-cdk/aws-ecs.ProxyConfigurations",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/proxy-configuration/proxy-configurations.ts",
        "line": 7
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Constructs a new instance of the ProxyConfiguration class."
          },
          "locationInModule": {
            "filename": "lib/proxy-configuration/proxy-configurations.ts",
            "line": 11
          },
          "name": "appMeshProxyConfiguration",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.AppMeshProxyConfigurationConfigProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ProxyConfiguration"
            }
          },
          "static": true
        }
      ],
      "name": "ProxyConfigurations"
    },
    "@aws-cdk/aws-ecs.RepositoryImage": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.ContainerImage",
      "docs": {
        "remarks": "For images hosted in Amazon ECR, see\n[EcrImage](https://docs.aws.amazon.com/AmazonECR/latest/userguide/images.html).",
        "stability": "stable",
        "summary": "An image hosted in a public or private repository."
      },
      "fqn": "@aws-cdk/aws-ecs.RepositoryImage",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the RepositoryImage class."
        },
        "locationInModule": {
          "filename": "lib/images/repository.ts",
          "line": 37
        },
        "parameters": [
          {
            "name": "imageName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.RepositoryImageProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/images/repository.ts",
        "line": 32
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the image is used by a ContainerDefinition."
          },
          "locationInModule": {
            "filename": "lib/images/repository.ts",
            "line": 41
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.ContainerImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ContainerImageConfig"
            }
          }
        }
      ],
      "name": "RepositoryImage"
    },
    "@aws-cdk/aws-ecs.RepositoryImageProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for an image hosted in a public or private repository."
      },
      "fqn": "@aws-cdk/aws-ecs.RepositoryImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/images/repository.ts",
        "line": 20
      },
      "name": "RepositoryImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The supported value is the full ARN of an AWS Secrets Manager secret.",
            "stability": "stable",
            "summary": "The secret to expose to the container that contains the credentials for the image repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/images/repository.ts",
            "line": 25
          },
          "name": "credentials",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.RequestCountScalingProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for enabling scaling based on Application Load Balancer (ALB) request counts."
      },
      "fqn": "@aws-cdk/aws-ecs.RequestCountScalingProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/scalable-task-count.ts",
        "line": 123
      },
      "name": "RequestCountScalingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The number of ALB requests per target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 127
          },
          "name": "requestsPerTarget",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ALB target group name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 132
          },
          "name": "targetGroup",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.S3EnvironmentFile": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.EnvironmentFile",
      "docs": {
        "stability": "stable",
        "summary": "Environment file from S3."
      },
      "fqn": "@aws-cdk/aws-ecs.S3EnvironmentFile",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/environment-file.ts",
          "line": 83
        },
        "parameters": [
          {
            "name": "bucket",
            "type": {
              "fqn": "@aws-cdk/aws-s3.IBucket"
            }
          },
          {
            "name": "key",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "objectVersion",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/environment-file.ts",
        "line": 80
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the container is initialized to allow this object to bind to the stack."
          },
          "locationInModule": {
            "filename": "lib/environment-file.ts",
            "line": 93
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.EnvironmentFile",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.EnvironmentFileConfig"
            }
          }
        }
      ],
      "name": "S3EnvironmentFile"
    },
    "@aws-cdk/aws-ecs.ScalableTaskCount": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-applicationautoscaling.BaseScalableAttribute",
      "docs": {
        "stability": "stable",
        "summary": "The scalable attribute representing task count."
      },
      "fqn": "@aws-cdk/aws-ecs.ScalableTaskCount",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the ScalableTaskCount class."
        },
        "locationInModule": {
          "filename": "lib/base/scalable-task-count.ts",
          "line": 21
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ScalableTaskCountProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/base/scalable-task-count.ts",
        "line": 16
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Scales in or out to achieve a target CPU utilization."
          },
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 42
          },
          "name": "scaleOnCpuUtilization",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.CpuUtilizationScalingProps"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scales in or out to achieve a target memory utilization."
          },
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 56
          },
          "name": "scaleOnMemoryUtilization",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.MemoryUtilizationScalingProps"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scales in or out based on a specified metric value."
          },
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 35
          },
          "name": "scaleOnMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.BasicStepScalingPolicyProps"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scales in or out to achieve a target Application Load Balancer request count per target."
          },
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 70
          },
          "name": "scaleOnRequestCount",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.RequestCountScalingProps"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scales in or out based on a specified scheduled time."
          },
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 28
          },
          "name": "scaleOnSchedule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.ScalingSchedule"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scales in or out to achieve a target on a custom metric."
          },
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 88
          },
          "name": "scaleToTrackCustomMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.TrackCustomMetricProps"
              }
            }
          ]
        }
      ],
      "name": "ScalableTaskCount"
    },
    "@aws-cdk/aws-ecs.ScalableTaskCountProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties of a scalable attribute representing task count."
      },
      "fqn": "@aws-cdk/aws-ecs.ScalableTaskCountProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BaseScalableAttributeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/scalable-task-count.ts",
        "line": 9
      },
      "name": "ScalableTaskCountProps"
    },
    "@aws-cdk/aws-ecs.Scope": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "remarks": "Docker volumes that are scoped to a task are automatically provisioned when the task starts and destroyed when the task stops.\nDocker volumes that are scoped as shared persist after the task stops.",
        "stability": "stable",
        "summary": "The scope for the Docker volume that determines its lifecycle."
      },
      "fqn": "@aws-cdk/aws-ecs.Scope",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 840
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Docker volumes that are scoped to a task are automatically provisioned when the task starts and destroyed when the task stops."
          },
          "name": "TASK"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Docker volumes that are scoped as shared persist after the task stops."
          },
          "name": "SHARED"
        }
      ],
      "name": "Scope"
    },
    "@aws-cdk/aws-ecs.ScratchSpace": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The temporary disk space mounted to the container."
      },
      "fqn": "@aws-cdk/aws-ecs.ScratchSpace",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 912
      },
      "name": "ScratchSpace",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path on the container to mount the scratch volume at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 916
          },
          "name": "containerPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be a volume name referenced in the name parameter of task definition volume.",
            "stability": "stable",
            "summary": "The name of the scratch volume to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 928
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this value is true, the container has read-only access to the scratch volume.\nIf this value is false, then the container can write to the scratch volume.",
            "stability": "stable",
            "summary": "Specifies whether to give the container read-only access to the scratch volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 923
          },
          "name": "readOnly",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 924
          },
          "name": "sourcePath",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Secret": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "A secret environment variable."
      },
      "fqn": "@aws-cdk/aws-ecs.Secret",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 20
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a environment variable value from a secret stored in AWS Secrets Manager."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 42
          },
          "name": "fromSecretsManager",
          "parameters": [
            {
              "docs": {
                "summary": "the secret stored in AWS Secrets Manager."
              },
              "name": "secret",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
              }
            },
            {
              "docs": {
                "remarks": "Only values in JSON format are supported.\nIf you do not specify a JSON field, then the full content of the secret is\nused.",
                "summary": "the name of the field with the value that you want to set as the environment variable value."
              },
              "name": "field",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.Secret"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates an environment variable value from a parameter stored in AWS Systems Manager Parameter Store."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 25
          },
          "name": "fromSsmParameter",
          "parameters": [
            {
              "name": "parameter",
              "type": {
                "fqn": "@aws-cdk/aws-ssm.IParameter"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.Secret"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Grants reading the secret to a principal."
          },
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 63
          },
          "name": "grantRead",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        }
      ],
      "name": "Secret",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 53
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Whether this secret uses a specific JSON field."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 58
          },
          "name": "hasField",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.SplunkLogDriver": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.LogDriver",
      "docs": {
        "stability": "stable",
        "summary": "A log driver that sends log information to splunk Logs."
      },
      "fqn": "@aws-cdk/aws-ecs.SplunkLogDriver",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the SplunkLogDriver class."
        },
        "locationInModule": {
          "filename": "lib/log-drivers/splunk-log-driver.ts",
          "line": 121
        },
        "parameters": [
          {
            "docs": {
              "summary": "the splunk log driver configuration options."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.SplunkLogDriverProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/log-drivers/splunk-log-driver.ts",
        "line": 115
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the log driver is configured on a container."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/splunk-log-driver.ts",
            "line": 132
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.LogDriver",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriverConfig"
            }
          }
        }
      ],
      "name": "SplunkLogDriver"
    },
    "@aws-cdk/aws-ecs.SplunkLogDriverProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "[Source](https://docs.docker.com/config/containers/logging/splunk/)",
        "stability": "stable",
        "summary": "Specifies the splunk log driver configuration options."
      },
      "fqn": "@aws-cdk/aws-ecs.SplunkLogDriverProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.BaseLogDriverProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/log-drivers/splunk-log-driver.ts",
        "line": 25
      },
      "name": "SplunkLogDriverProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Splunk HTTP Event Collector token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/splunk-log-driver.ts",
            "line": 29
          },
          "name": "token",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Path to your Splunk Enterprise, self-service Splunk Cloud instance, or Splunk Cloud managed cluster (including port and scheme used by HTTP Event Collector) in one of the following formats: https://your_splunk_instance:8088 or https://input-prd-p-XXXXXXX.cloud.splunk.com:8088 or https://http-inputs-XXXXXXXX.splunkcloud.com."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/splunk-log-driver.ts",
            "line": 37
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The hostname of the splunk-url",
            "stability": "stable",
            "summary": "Name to use for validating server certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/splunk-log-driver.ts",
            "line": 72
          },
          "name": "caName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- caPath not set.",
            "stability": "stable",
            "summary": "Path to root certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/splunk-log-driver.ts",
            "line": 65
          },
          "name": "caPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- inline",
            "remarks": "Can be inline, json or raw.",
            "stability": "stable",
            "summary": "Message format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/splunk-log-driver.ts",
            "line": 86
          },
          "name": "format",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.SplunkLogFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Enable/disable gzip compression to send events to Splunk Enterprise or Splunk Cloud instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/splunk-log-driver.ts",
            "line": 101
          },
          "name": "gzip",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- -1 (Default Compression)",
            "remarks": "Valid values are -1 (default), 0 (no compression),\n1 (best speed) ... 9 (best compression).",
            "stability": "stable",
            "summary": "Set compression level for gzip."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/splunk-log-driver.ts",
            "line": 109
          },
          "name": "gzipLevel",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- index not set.",
            "stability": "stable",
            "summary": "Event index."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/splunk-log-driver.ts",
            "line": 58
          },
          "name": "index",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- insecureSkipVerify not set.",
            "stability": "stable",
            "summary": "Ignore server certificate validation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/splunk-log-driver.ts",
            "line": 79
          },
          "name": "insecureSkipVerify",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- source not set.",
            "stability": "stable",
            "summary": "Event source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/splunk-log-driver.ts",
            "line": 44
          },
          "name": "source",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- sourceType not set.",
            "stability": "stable",
            "summary": "Event source type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/splunk-log-driver.ts",
            "line": 51
          },
          "name": "sourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true",
            "stability": "stable",
            "summary": "Verify on start, that docker can connect to Splunk server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/splunk-log-driver.ts",
            "line": 93
          },
          "name": "verifyConnection",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.SplunkLogFormat": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Log Message Format."
      },
      "fqn": "@aws-cdk/aws-ecs.SplunkLogFormat",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/log-drivers/splunk-log-driver.ts",
        "line": 14
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INLINE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "JSON"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RAW"
        }
      ],
      "name": "SplunkLogFormat"
    },
    "@aws-cdk/aws-ecs.SyslogLogDriver": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.LogDriver",
      "docs": {
        "stability": "stable",
        "summary": "A log driver that sends log information to syslog Logs."
      },
      "fqn": "@aws-cdk/aws-ecs.SyslogLogDriver",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the SyslogLogDriver class."
        },
        "locationInModule": {
          "filename": "lib/log-drivers/syslog-log-driver.ts",
          "line": 85
        },
        "parameters": [
          {
            "docs": {
              "summary": "the syslog log driver configuration options."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecs.SyslogLogDriverProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/log-drivers/syslog-log-driver.ts",
        "line": 79
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the log driver is configured on a container."
          },
          "locationInModule": {
            "filename": "lib/log-drivers/syslog-log-driver.ts",
            "line": 92
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.LogDriver",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.LogDriverConfig"
            }
          }
        }
      ],
      "name": "SyslogLogDriver"
    },
    "@aws-cdk/aws-ecs.SyslogLogDriverProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "[Source](https://docs.docker.com/config/containers/logging/syslog/)",
        "stability": "stable",
        "summary": "Specifies the syslog log driver configuration options."
      },
      "fqn": "@aws-cdk/aws-ecs.SyslogLogDriverProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.BaseLogDriverProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/log-drivers/syslog-log-driver.ts",
        "line": 15
      },
      "name": "SyslogLogDriverProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- If the transport is tcp, udp, or tcp+tls, the default port is 514.",
            "remarks": "The URI specifier may be\n[tcp|udp|tcp+tls]://host:port, unix://path, or unixgram://path.",
            "stability": "stable",
            "summary": "The address of an external syslog server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/syslog-log-driver.ts",
            "line": 22
          },
          "name": "address",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- facility not set",
            "remarks": "Can be the number or name for any valid\nsyslog facility. See the syslog documentation:\nhttps://tools.ietf.org/html/rfc5424#section-6.2.1.",
            "stability": "stable",
            "summary": "The syslog facility to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/syslog-log-driver.ts",
            "line": 31
          },
          "name": "facility",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- format not set",
            "remarks": "If not specified the local UNIX syslog\nformat is used, without a specified hostname. Specify rfc3164 for the RFC-3164\ncompatible format, rfc5424 for RFC-5424 compatible format, or rfc5424micro\nfor RFC-5424 compatible format with microsecond timestamp resolution.",
            "stability": "stable",
            "summary": "The syslog message format to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/syslog-log-driver.ts",
            "line": 73
          },
          "name": "format",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- tlsCaCert not set",
            "remarks": "Ignored\nif the address protocol is not tcp+tls.",
            "stability": "stable",
            "summary": "The absolute path to the trust certificates signed by the CA."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/syslog-log-driver.ts",
            "line": 39
          },
          "name": "tlsCaCert",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- tlsCert not set",
            "remarks": "Ignored if the address\nprotocol is not tcp+tls.",
            "stability": "stable",
            "summary": "The absolute path to the TLS certificate file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/syslog-log-driver.ts",
            "line": 47
          },
          "name": "tlsCert",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- tlsKey not set",
            "remarks": "Ignored if the address protocol\nis not tcp+tls.",
            "stability": "stable",
            "summary": "The absolute path to the TLS key file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/syslog-log-driver.ts",
            "line": 55
          },
          "name": "tlsKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "remarks": "Ignored if the address protocol is not tcp+tls.",
            "stability": "stable",
            "summary": "If set to true, TLS verification is skipped when connecting to the syslog daemon."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/log-drivers/syslog-log-driver.ts",
            "line": 63
          },
          "name": "tlsSkipVerify",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.TagParameterContainerImage": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/aws-ecs.ContainerImage",
      "docs": {
        "remarks": "This allows providing this tag through the Parameter at deploy time,\nfor example in a CodePipeline that pushes a new tag of the image to the repository during a build step,\nand then provides that new tag through the CloudFormation Parameter in the deploy step.",
        "see": "#tagParameterName",
        "stability": "stable",
        "summary": "A special type of {@link ContainerImage} that uses an ECR repository for the image, but a CloudFormation Parameter for the tag of the image in that repository."
      },
      "fqn": "@aws-cdk/aws-ecs.TagParameterContainerImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/images/tag-parameter-container-image.ts",
          "line": 23
        },
        "parameters": [
          {
            "name": "repository",
            "type": {
              "fqn": "@aws-cdk/aws-ecr.IRepository"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/images/tag-parameter-container-image.ts",
        "line": 19
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the image is used by a ContainerDefinition."
          },
          "locationInModule": {
            "filename": "lib/images/tag-parameter-container-image.ts",
            "line": 28
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-ecs.ContainerImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "containerDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ContainerImageConfig"
            }
          }
        }
      ],
      "name": "TagParameterContainerImage",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the name of the CloudFormation Parameter that represents the tag of the image in the ECR repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/images/tag-parameter-container-image.ts",
            "line": 41
          },
          "name": "tagParameterName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.TaskDefinition": {
      "assembly": "@aws-cdk/aws-ecs",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "The base class for all task definitions."
      },
      "fqn": "@aws-cdk/aws-ecs.TaskDefinition",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Constructs a new instance of the TaskDefinition class."
        },
        "locationInModule": {
          "filename": "lib/base/task-definition.ts",
          "line": 277
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs.TaskDefinitionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ecs.ITaskDefinition"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 202
      },
      "methods": [
        {
          "docs": {
            "remarks": "The task will have a compatibility of EC2+Fargate.",
            "stability": "stable",
            "summary": "Imports a task definition from the specified task definition ARN."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 209
          },
          "name": "fromTaskDefinitionArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "taskDefinitionArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ITaskDefinition"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a new container to the task definition."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 422
          },
          "name": "addContainer",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinitionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
            }
          }
        },
        {
          "docs": {
            "remarks": "Extension can be used to apply a packaged modification to\na task definition.",
            "stability": "stable",
            "summary": "Adds the specified extention to the task definition."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 475
          },
          "name": "addExtension",
          "parameters": [
            {
              "name": "extension",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.ITaskDefinitionExtension"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a firelens log router to the task definition."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 429
          },
          "name": "addFirelensLogRouter",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.FirelensLogRouterDefinitionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.FirelensLogRouter"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds the specified placement constraint to the task definition."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 462
          },
          "name": "addPlacementConstraint",
          "parameters": [
            {
              "name": "constraint",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a policy statement to the task execution IAM role."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 415
          },
          "name": "addToExecutionRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a policy statement to the task IAM role."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 408
          },
          "name": "addToTaskRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a volume to the task definition."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 455
          },
          "name": "addVolume",
          "parameters": [
            {
              "name": "volume",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.Volume"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates the task execution IAM role if it doesn't already exist."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 482
          },
          "name": "obtainExecutionRole",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.IRole"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Validates the task definition."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 502
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "TaskDefinition",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The task launch type compatiblity requirement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 253
          },
          "name": "compatibility",
          "overrides": "@aws-cdk/aws-ecs.ITaskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Compatibility"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The container definitions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 258
          },
          "name": "containers",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "A family groups multiple versions of a task definition.",
            "stability": "stable",
            "summary": "The name of a family that this task definition is registered to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 223
          },
          "name": "family",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return true if the task definition can be run on an EC2 cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 187
          },
          "name": "isEc2Compatible",
          "overrides": "@aws-cdk/aws-ecs.ITaskDefinition",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return true if the task definition can be run on a Fargate cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 194
          },
          "name": "isFargateCompatible",
          "overrides": "@aws-cdk/aws-ecs.ITaskDefinition",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The networking mode to use for the containers in the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 239
          },
          "name": "networkMode",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.NetworkMode"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The full Amazon Resource Name (ARN) of the task definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 229
          },
          "name": "taskDefinitionArn",
          "overrides": "@aws-cdk/aws-ecs.ITaskDefinition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the IAM role that grants containers in the task permission to call AWS APIs on your behalf."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 234
          },
          "name": "taskRole",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Execution role for this task definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 337
          },
          "name": "executionRole",
          "optional": true,
          "overrides": "@aws-cdk/aws-ecs.ITaskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether this task definition has at least a container that references a specific JSON field of a secret stored in Secrets Manager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 495
          },
          "name": "referencesSecretJsonField",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "remarks": "Load balancers will send traffic to this container. The first\nessential container that is added to this task will become the default\ncontainer.",
            "stability": "stable",
            "summary": "Default container for this task."
          },
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 248
          },
          "name": "defaultContainer",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.TaskDefinitionProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for task definitions."
      },
      "fqn": "@aws-cdk/aws-ecs.TaskDefinitionProps",
      "interfaces": [
        "@aws-cdk/aws-ecs.CommonTaskDefinitionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 90
      },
      "name": "TaskDefinitionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The task launch type compatiblity requirement."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 115
          },
          "name": "compatibility",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Compatibility"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CPU units are not specified.",
            "remarks": "If you are using the EC2 launch type, this field is optional and any value can be used.\nIf you are using the Fargate launch type, this field is required and you must use one of the following values,\nwhich determines your range of valid values for the memory parameter:\n\n256 (.25 vCPU) - Available memory values: 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB)\n\n512 (.5 vCPU) - Available memory values: 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB)\n\n1024 (1 vCPU) - Available memory values: 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)\n\n2048 (2 vCPU) - Available memory values: Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB)\n\n4096 (4 vCPU) - Available memory values: Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB)",
            "stability": "stable",
            "summary": "The number of cpu units used by the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 136
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- IpcMode used by the task is not specified",
            "remarks": "Not supported in Fargate and Windows containers.",
            "stability": "stable",
            "summary": "The IPC resource namespace to use for the containers in the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 166
          },
          "name": "ipcMode",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.IpcMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Memory used by task is not specified.",
            "remarks": "If using the EC2 launch type, this field is optional and any value can be used.\nIf using the Fargate launch type, this field is required and you must use one of the following values,\nwhich determines your range of valid values for the cpu parameter:\n\n512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available cpu values: 256 (.25 vCPU)\n\n1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available cpu values: 512 (.5 vCPU)\n\n2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB) - Available cpu values: 1024 (1 vCPU)\n\nBetween 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available cpu values: 2048 (2 vCPU)\n\nBetween 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available cpu values: 4096 (4 vCPU)",
            "stability": "stable",
            "summary": "The amount (in MiB) of memory used by the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 157
          },
          "name": "memoryMiB",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- NetworkMode.Bridge for EC2 tasks, AwsVpc for Fargate tasks.",
            "remarks": "On Fargate, the only supported networking mode is AwsVpc.",
            "stability": "stable",
            "summary": "The networking mode to use for the containers in the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 98
          },
          "name": "networkMode",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.NetworkMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- PidMode used by the task is not specified",
            "remarks": "Not supported in Fargate and Windows containers.",
            "stability": "stable",
            "summary": "The process namespace to use for the containers in the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 175
          },
          "name": "pidMode",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.PidMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No placement constraints.",
            "remarks": "You can specify a maximum of 10 constraints per task (this limit includes\nconstraints in the task definition and those specified at run time).\n\nNot supported in Fargate.",
            "stability": "stable",
            "summary": "The placement constraints to use for tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 110
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Tmpfs": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The details of a tmpfs mount for a container."
      },
      "fqn": "@aws-cdk/aws-ecs.Tmpfs",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/linux-parameters.ts",
        "line": 159
      },
      "name": "Tmpfs",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The absolute file path where the tmpfs volume is to be mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 163
          },
          "name": "containerPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The size (in MiB) of the tmpfs volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 168
          },
          "name": "size",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For more information, see\n[TmpfsMountOptions](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_Tmpfs.html).",
            "stability": "stable",
            "summary": "The list of tmpfs volume mount options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-parameters.ts",
            "line": 174
          },
          "name": "mountOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.TmpfsMountOption"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.TmpfsMountOption": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "The supported options for a tmpfs mount for a container."
      },
      "fqn": "@aws-cdk/aws-ecs.TmpfsMountOption",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/linux-parameters.ts",
        "line": 252
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEFAULTS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RW"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SUID"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NOSUID"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEV"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NODEV"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "EXEC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NOEXEC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SYNC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ASYNC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DIRSYNC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REMOUNT"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MAND"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NOMAND"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NOATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DIRATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NODIRATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BIND"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RBIND"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "UNBINDABLE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RUNBINDABLE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PRIVATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RPRIVATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SHARED"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RSHARED"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SLAVE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RSLAVE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RELATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NORELATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STRICTATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NOSTRICTATIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MODE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "UID"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GID"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NR_INODES"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NR_BLOCKS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MPOL"
        }
      ],
      "name": "TmpfsMountOption"
    },
    "@aws-cdk/aws-ecs.TrackCustomMetricProps": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties for enabling target tracking scaling based on a custom CloudWatch metric."
      },
      "fqn": "@aws-cdk/aws-ecs.TrackCustomMetricProps",
      "interfaces": [
        "@aws-cdk/aws-applicationautoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/scalable-task-count.ts",
        "line": 138
      },
      "name": "TrackCustomMetricProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The metric must represent utilization; that is, you will always get the following behavior:\n\n- metric > targetValue => scale out\n- metric < targetValue => scale in",
            "stability": "stable",
            "summary": "The custom CloudWatch metric to track."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 147
          },
          "name": "metric",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target value for the custom CloudWatch metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scalable-task-count.ts",
            "line": 152
          },
          "name": "targetValue",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.Ulimit": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "NOTE: Does not work for Windows containers.",
        "stability": "stable",
        "summary": "The ulimit settings to pass to the container."
      },
      "fqn": "@aws-cdk/aws-ecs.Ulimit",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 748
      },
      "name": "Ulimit",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The hard limit for the ulimit type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 764
          },
          "name": "hardLimit",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For more information, see [UlimitName](https://docs.aws.amazon.com/cdk/api/latest/typescript/api/aws-ecs/ulimitname.html#aws_ecs_UlimitName).",
            "stability": "stable",
            "summary": "The type of the ulimit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 754
          },
          "name": "name",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.UlimitName"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The soft limit for the ulimit type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 759
          },
          "name": "softLimit",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.UlimitName": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "Type of resource to set a limit on."
      },
      "fqn": "@aws-cdk/aws-ecs.UlimitName",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 770
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CORE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CPU"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DATA"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "FSIZE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LOCKS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MEMLOCK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MSGQUEUE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NICE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NOFILE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NPROC"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RSS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RTPRIO"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "RTTIME"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SIGPENDING"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "STACK"
        }
      ],
      "name": "UlimitName"
    },
    "@aws-cdk/aws-ecs.Volume": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "remarks": "For tasks that use a Docker volume, specify a DockerVolumeConfiguration.\nFor tasks that use a bind mount host volume, specify a host and optional sourcePath.\n\nFor more information, see [Using Data Volumes in Tasks](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_data_volumes.html).",
        "stability": "stable",
        "summary": "A data volume used in a task definition."
      },
      "fqn": "@aws-cdk/aws-ecs.Volume",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/task-definition.ts",
        "line": 639
      },
      "name": "Volume",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Up to 255 letters (uppercase and lowercase), numbers, and hyphens are allowed.\nThis name is referenced in the sourceVolume parameter of container definition mountPoints.",
            "stability": "stable",
            "summary": "The name of the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 657
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Docker volumes are only supported when you are using the EC2 launch type.\nWindows containers only support the use of the local driver.\nTo use bind mounts, specify a host instead.",
            "stability": "stable",
            "summary": "This property is specified when you are using Docker volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 666
          },
          "name": "dockerVolumeConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.DockerVolumeConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No Elastic FileSystem is setup",
            "remarks": "When specifying Amazon EFS volumes in tasks using the Fargate launch type,\nFargate creates a supervisor container that is responsible for managing the Amazon EFS volume.\nThe supervisor container uses a small amount of the task's memory.\nThe supervisor container is visible when querying the task metadata version 4 endpoint,\nbut is not visible in CloudWatch Container Insights.",
            "stability": "stable",
            "summary": "This property is specified when you are using Amazon EFS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 679
          },
          "name": "efsVolumeConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.EfsVolumeConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Bind mount host volumes are supported when you are using either the EC2 or Fargate launch types.\nThe contents of the host parameter determine whether your bind mount host volume persists on the\nhost container instance and where it is stored. If the host parameter is empty, then the Docker\ndaemon assigns a host path for your data volume. However, the data is not guaranteed to persist\nafter the containers associated with it stop running.",
            "stability": "stable",
            "summary": "This property is specified when you are using bind mount host volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/task-definition.ts",
            "line": 649
          },
          "name": "host",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Host"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.VolumeFrom": {
      "assembly": "@aws-cdk/aws-ecs",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The details on a data volume from another container in the same task definition."
      },
      "fqn": "@aws-cdk/aws-ecs.VolumeFrom",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/container-definition.ts",
        "line": 965
      },
      "name": "VolumeFrom",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "If this value is true, the container has read-only access to the volume.\nIf this value is false, then the container can write to the volume.",
            "stability": "stable",
            "summary": "Specifies whether the container has read-only access to the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 977
          },
          "name": "readOnly",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of another container within the same task definition from which to mount volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/container-definition.ts",
            "line": 969
          },
          "name": "sourceContainer",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs.WindowsOptimizedVersion": {
      "assembly": "@aws-cdk/aws-ecs",
      "docs": {
        "stability": "stable",
        "summary": "ECS-optimized Windows version list."
      },
      "fqn": "@aws-cdk/aws-ecs.WindowsOptimizedVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 461
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SERVER_2019"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SERVER_2016"
        }
      ],
      "name": "WindowsOptimizedVersion"
    }
  },
  "version": "1.91.0",
  "fingerprint": "LrjZ4vgLtJQ0zvViYjQJ6n1G+JTidGWdHMJaqkBxdBk="
}
