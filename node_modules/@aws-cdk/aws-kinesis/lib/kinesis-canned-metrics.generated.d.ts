export declare class KinesisMetrics {
    static readProvisionedThroughputExceededAverage(dimensions: {
        StreamName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            StreamName: string;
        };
        statistic: string;
    };
    static writeProvisionedThroughputExceededAverage(dimensions: {
        StreamName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            StreamName: string;
        };
        statistic: string;
    };
    static getRecordsIteratorAgeMillisecondsMaximum(dimensions: {
        StreamName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            StreamName: string;
        };
        statistic: string;
    };
    static putRecordSuccessAverage(dimensions: {
        StreamName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            StreamName: string;
        };
        statistic: string;
    };
    static putRecordsBytesAverage(dimensions: {
        StreamName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            StreamName: string;
        };
        statistic: string;
    };
    static getRecordSuccessAverage(dimensions: {
        StreamName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            StreamName: string;
        };
        statistic: string;
    };
    static getRecordBytesAverage(dimensions: {
        StreamName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            StreamName: string;
        };
        statistic: string;
    };
    static getRecordRecordsAverage(dimensions: {
        StreamName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            StreamName: string;
        };
        statistic: string;
    };
    static getRecordLatencyMaximum(dimensions: {
        StreamName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            StreamName: string;
        };
        statistic: string;
    };
    static incomingBytesAverage(dimensions: {
        StreamName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            StreamName: string;
        };
        statistic: string;
    };
    static incomingRecordsAverage(dimensions: {
        StreamName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            StreamName: string;
        };
        statistic: string;
    };
}
