import * as events from '@aws-cdk/aws-events';
import * as sqs from '@aws-cdk/aws-sqs';
/**
 * Customize the SQS Queue Event Target.
 *
 * @stability stable
 */
export interface SqsQueueProps {
    /**
     * Message Group ID for messages sent to this queue.
     *
     * Required for FIFO queues, leave empty for regular queues.
     *
     * @default - no message group ID (regular queue)
     * @stability stable
     */
    readonly messageGroupId?: string;
    /**
     * The message to send to the queue.
     *
     * Must be a valid JSON text passed to the target queue.
     *
     * @default the entire EventBridge event
     * @stability stable
     */
    readonly message?: events.RuleTargetInput;
}
/**
 * Use an SQS Queue as a target for Amazon EventBridge rules.
 *
 * @stability stable
 * @example
 *
 *    // publish to an SQS queue every time code is committed
 *    // to a CodeCommit repository
 *    repository.onCommit(new targets.SqsQueue(queue));
 */
export declare class SqsQueue implements events.IRuleTarget {
    readonly queue: sqs.IQueue;
    private readonly props;
    /**
     * @stability stable
     */
    constructor(queue: sqs.IQueue, props?: SqsQueueProps);
    /**
     * Returns a RuleTarget that can be used to trigger this SQS queue as a result from an EventBridge event.
     *
     * @see https://docs.aws.amazon.com/eventbridge/latest/userguide/resource-based-policies-eventbridge.html#sqs-permissions
     * @stability stable
     */
    bind(rule: events.IRule, _id?: string): events.RuleTargetConfig;
}
