import { IRole } from '@aws-cdk/aws-iam';
import * as lambda from '@aws-cdk/aws-lambda';
import { Duration, IResource, RemovalPolicy, Resource } from '@aws-cdk/core';
import { Construct } from 'constructs';
import { ICustomAttribute, StandardAttributes } from './user-pool-attr';
import { UserPoolClient, UserPoolClientOptions } from './user-pool-client';
import { UserPoolDomain, UserPoolDomainOptions } from './user-pool-domain';
import { IUserPoolIdentityProvider } from './user-pool-idp';
import { UserPoolResourceServer, UserPoolResourceServerOptions } from './user-pool-resource-server';
/**
 * The different ways in which users of this pool can sign up or sign in.
 *
 * @stability stable
 */
export interface SignInAliases {
    /**
     * Whether user is allowed to sign up or sign in with a username.
     *
     * @default true
     * @stability stable
     */
    readonly username?: boolean;
    /**
     * Whether a user is allowed to sign up or sign in with an email address.
     *
     * @default false
     * @stability stable
     */
    readonly email?: boolean;
    /**
     * Whether a user is allowed to sign up or sign in with a phone number.
     *
     * @default false
     * @stability stable
     */
    readonly phone?: boolean;
    /**
     * Whether a user is allowed to sign in with a secondary username, that can be set and modified after sign up.
     *
     * Can only be used in conjunction with `USERNAME`.
     *
     * @default false
     * @stability stable
     */
    readonly preferredUsername?: boolean;
}
/**
 * Attributes that can be automatically verified for users in a user pool.
 *
 * @stability stable
 */
export interface AutoVerifiedAttrs {
    /**
     * Whether the email address of the user should be auto verified at sign up.
     *
     * Note: If both `email` and `phone` is set, Cognito only verifies the phone number. To also verify email, see here -
     * https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html
     *
     * @default - true, if email is turned on for `signIn`. false, otherwise.
     * @stability stable
     */
    readonly email?: boolean;
    /**
     * Whether the phone number of the user should be auto verified at sign up.
     *
     * @default - true, if phone is turned on for `signIn`. false, otherwise.
     * @stability stable
     */
    readonly phone?: boolean;
}
/**
 * Triggers for a user pool.
 *
 * @see https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html
 * @stability stable
 */
export interface UserPoolTriggers {
    /**
     * Creates an authentication challenge.
     *
     * @default - no trigger configured
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-create-auth-challenge.html
     * @stability stable
     */
    readonly createAuthChallenge?: lambda.IFunction;
    /**
     * A custom Message AWS Lambda trigger.
     *
     * @default - no trigger configured
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-custom-message.html
     * @stability stable
     */
    readonly customMessage?: lambda.IFunction;
    /**
     * Defines the authentication challenge.
     *
     * @default - no trigger configured
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-define-auth-challenge.html
     * @stability stable
     */
    readonly defineAuthChallenge?: lambda.IFunction;
    /**
     * A post-authentication AWS Lambda trigger.
     *
     * @default - no trigger configured
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-authentication.html
     * @stability stable
     */
    readonly postAuthentication?: lambda.IFunction;
    /**
     * A post-confirmation AWS Lambda trigger.
     *
     * @default - no trigger configured
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-confirmation.html
     * @stability stable
     */
    readonly postConfirmation?: lambda.IFunction;
    /**
     * A pre-authentication AWS Lambda trigger.
     *
     * @default - no trigger configured
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-authentication.html
     * @stability stable
     */
    readonly preAuthentication?: lambda.IFunction;
    /**
     * A pre-registration AWS Lambda trigger.
     *
     * @default - no trigger configured
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-sign-up.html
     * @stability stable
     */
    readonly preSignUp?: lambda.IFunction;
    /**
     * A pre-token-generation AWS Lambda trigger.
     *
     * @default - no trigger configured
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html
     * @stability stable
     */
    readonly preTokenGeneration?: lambda.IFunction;
    /**
     * A user-migration AWS Lambda trigger.
     *
     * @default - no trigger configured
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-migrate-user.html
     * @stability stable
     */
    readonly userMigration?: lambda.IFunction;
    /**
     * Verifies the authentication challenge response.
     *
     * @default - no trigger configured
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-verify-auth-challenge-response.html
     * @stability stable
     */
    readonly verifyAuthChallengeResponse?: lambda.IFunction;
    /**
     * Index signature
     */
    [trigger: string]: lambda.IFunction | undefined;
}
/**
 * User pool operations to which lambda triggers can be attached.
 *
 * @stability stable
 */
export declare class UserPoolOperation {
    /**
     * Creates a challenge in a custom auth flow.
     *
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-create-auth-challenge.html
     * @stability stable
     */
    static readonly CREATE_AUTH_CHALLENGE: UserPoolOperation;
    /**
     * Advanced customization and localization of messages.
     *
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-custom-message.html
     * @stability stable
     */
    static readonly CUSTOM_MESSAGE: UserPoolOperation;
    /**
     * Determines the next challenge in a custom auth flow.
     *
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-define-auth-challenge.html
     * @stability stable
     */
    static readonly DEFINE_AUTH_CHALLENGE: UserPoolOperation;
    /**
     * Event logging for custom analytics.
     *
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-authentication.html
     * @stability stable
     */
    static readonly POST_AUTHENTICATION: UserPoolOperation;
    /**
     * Custom welcome messages or event logging for custom analytics.
     *
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-confirmation.html
     * @stability stable
     */
    static readonly POST_CONFIRMATION: UserPoolOperation;
    /**
     * Custom validation to accept or deny the sign-in request.
     *
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-authentication.html
     * @stability stable
     */
    static readonly PRE_AUTHENTICATION: UserPoolOperation;
    /**
     * Custom validation to accept or deny the sign-up request.
     *
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-sign-up.html
     * @stability stable
     */
    static readonly PRE_SIGN_UP: UserPoolOperation;
    /**
     * Add or remove attributes in Id tokens.
     *
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html
     * @stability stable
     */
    static readonly PRE_TOKEN_GENERATION: UserPoolOperation;
    /**
     * Migrate a user from an existing user directory to user pools.
     *
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-migrate-user.html
     * @stability stable
     */
    static readonly USER_MIGRATION: UserPoolOperation;
    /**
     * Determines if a response is correct in a custom auth flow.
     *
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-verify-auth-challenge-response.html
     * @stability stable
     */
    static readonly VERIFY_AUTH_CHALLENGE_RESPONSE: UserPoolOperation;
    /**
     * A custom user pool operation.
     *
     * @stability stable
     */
    static of(name: string): UserPoolOperation;
    /**
     * The key to use in `CfnUserPool.LambdaConfigProperty`.
     *
     * @stability stable
     */
    readonly operationName: string;
    private constructor();
}
/**
 * The email verification style.
 *
 * @stability stable
 */
export declare enum VerificationEmailStyle {
    /**
     * Verify email via code.
     *
     * @stability stable
     */
    CODE = "CONFIRM_WITH_CODE",
    /**
     * Verify email via link.
     *
     * @stability stable
     */
    LINK = "CONFIRM_WITH_LINK"
}
/**
 * User pool configuration for user self sign up.
 *
 * @stability stable
 */
export interface UserVerificationConfig {
    /**
     * The email subject template for the verification email sent to the user upon sign up.
     *
     * See https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-templates.html to
     * learn more about message templates.
     *
     * @default 'Verify your new account'
     * @stability stable
     */
    readonly emailSubject?: string;
    /**
     * The email body template for the verification email sent to the user upon sign up.
     *
     * See https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-templates.html to
     * learn more about message templates.
     *
     * @default - 'The verification code to your new account is {####}' if VerificationEmailStyle.CODE is chosen,
     * 'Verify your account by clicking on {##Verify Email##}' if VerificationEmailStyle.LINK is chosen.
     * @stability stable
     */
    readonly emailBody?: string;
    /**
     * Emails can be verified either using a code or a link.
     *
     * Learn more at https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-email-verification-message-customization.html
     *
     * @default VerificationEmailStyle.CODE
     * @stability stable
     */
    readonly emailStyle?: VerificationEmailStyle;
    /**
     * The message template for the verification SMS sent to the user upon sign up.
     *
     * See https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-templates.html to
     * learn more about message templates.
     *
     * @default - 'The verification code to your new account is {####}' if VerificationEmailStyle.CODE is chosen,
     * not configured if VerificationEmailStyle.LINK is chosen
     * @stability stable
     */
    readonly smsMessage?: string;
}
/**
 * User pool configuration when administrators sign users up.
 *
 * @stability stable
 */
export interface UserInvitationConfig {
    /**
     * The template to the email subject that is sent to the user when an administrator signs them up to the user pool.
     *
     * @default 'Your temporary password'
     * @stability stable
     */
    readonly emailSubject?: string;
    /**
     * The template to the email body that is sent to the user when an administrator signs them up to the user pool.
     *
     * @default 'Your username is {username} and temporary password is {####}.'
     * @stability stable
     */
    readonly emailBody?: string;
    /**
     * The template to the SMS message that is sent to the user when an administrator signs them up to the user pool.
     *
     * @default 'Your username is {username} and temporary password is {####}'
     * @stability stable
     */
    readonly smsMessage?: string;
}
/**
 * The different ways in which a user pool's MFA enforcement can be configured.
 *
 * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html
 * @stability stable
 */
export declare enum Mfa {
    /**
     * Users are not required to use MFA for sign in, and cannot configure one.
     *
     * @stability stable
     */
    OFF = "OFF",
    /**
     * Users are not required to use MFA for sign in, but can configure one if they so choose to.
     *
     * @stability stable
     */
    OPTIONAL = "OPTIONAL",
    /**
     * Users are required to configure an MFA, and have to use it to sign in.
     *
     * @stability stable
     */
    REQUIRED = "ON"
}
/**
 * The different ways in which a user pool can obtain their MFA token for sign in.
 *
 * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html
 * @stability stable
 */
export interface MfaSecondFactor {
    /**
     * The MFA token is sent to the user via SMS to their verified phone numbers.
     *
     * @default true
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa-sms-text-message.html
     * @stability stable
     */
    readonly sms: boolean;
    /**
     * The MFA token is a time-based one time password that is generated by a hardware or software token.
     *
     * @default false
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa-totp.html
     * @stability stable
     */
    readonly otp: boolean;
}
/**
 * Password policy for User Pools.
 *
 * @stability stable
 */
export interface PasswordPolicy {
    /**
     * The length of time the temporary password generated by an admin is valid.
     *
     * This must be provided as whole days, like Duration.days(3) or Duration.hours(48).
     * Fractional days, such as Duration.hours(20), will generate an error.
     *
     * @default Duration.days(7)
     * @stability stable
     */
    readonly tempPasswordValidity?: Duration;
    /**
     * Minimum length required for a user's password.
     *
     * @default 8
     * @stability stable
     */
    readonly minLength?: number;
    /**
     * Whether the user is required to have lowercase characters in their password.
     *
     * @default true
     * @stability stable
     */
    readonly requireLowercase?: boolean;
    /**
     * Whether the user is required to have uppercase characters in their password.
     *
     * @default true
     * @stability stable
     */
    readonly requireUppercase?: boolean;
    /**
     * Whether the user is required to have digits in their password.
     *
     * @default true
     * @stability stable
     */
    readonly requireDigits?: boolean;
    /**
     * Whether the user is required to have symbols in their password.
     *
     * @default true
     * @stability stable
     */
    readonly requireSymbols?: boolean;
}
/**
 * Email settings for the user pool.
 *
 * @stability stable
 */
export interface EmailSettings {
    /**
     * The 'from' address on the emails received by the user.
     *
     * @default noreply
     * @stability stable
     * @verificationemail .com
     */
    readonly from?: string;
    /**
     * The 'replyTo' address on the emails received by the user as defined by IETF RFC-5322.
     *
     * When set, most email clients recognize to change 'to' line to this address when a reply is drafted.
     *
     * @default - Not set.
     * @stability stable
     */
    readonly replyTo?: string;
}
/**
 * How will a user be able to recover their account?
 *
 * When a user forgets their password, they can have a code sent to their verified email or verified phone to recover their account.
 * You can choose the preferred way to send codes below.
 * We recommend not allowing phone to be used for both password resets and multi-factor authentication (MFA).
 *
 * @see https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-recover-a-user-account.html
 * @stability stable
 */
export declare enum AccountRecovery {
    /**
     * Email if available, otherwise phone, but don’t allow a user to reset their password via phone if they are also using it for MFA.
     *
     * @stability stable
     */
    EMAIL_AND_PHONE_WITHOUT_MFA = 0,
    /**
     * Phone if available, otherwise email, but don’t allow a user to reset their password via phone if they are also using it for MFA.
     *
     * @stability stable
     */
    PHONE_WITHOUT_MFA_AND_EMAIL = 1,
    /**
     * Email only.
     *
     * @stability stable
     */
    EMAIL_ONLY = 2,
    /**
     * Phone only, but don’t allow a user to reset their password via phone if they are also using it for MFA.
     *
     * @stability stable
     */
    PHONE_ONLY_WITHOUT_MFA = 3,
    /**
     * (Not Recommended) Phone if available, otherwise email, and do allow a user to reset their password via phone if they are also using it for MFA.
     *
     * @stability stable
     */
    PHONE_AND_EMAIL = 4,
    /**
     * None – users will have to contact an administrator to reset their passwords.
     *
     * @stability stable
     */
    NONE = 5
}
/**
 * Props for the UserPool construct.
 *
 * @stability stable
 */
export interface UserPoolProps {
    /**
     * Name of the user pool.
     *
     * @default - automatically generated name by CloudFormation at deploy time
     * @stability stable
     */
    readonly userPoolName?: string;
    /**
     * Whether self sign up should be enabled.
     *
     * This can be further configured via the `selfSignUp` property.
     *
     * @default false
     * @stability stable
     */
    readonly selfSignUpEnabled?: boolean;
    /**
     * Configuration around users signing themselves up to the user pool.
     *
     * Enable or disable self sign-up via the `selfSignUpEnabled` property.
     *
     * @default - see defaults in UserVerificationConfig
     * @stability stable
     */
    readonly userVerification?: UserVerificationConfig;
    /**
     * Configuration around admins signing up users into a user pool.
     *
     * @default - see defaults in UserInvitationConfig
     * @stability stable
     */
    readonly userInvitation?: UserInvitationConfig;
    /**
     * The IAM role that Cognito will assume while sending SMS messages.
     *
     * @default - a new IAM role is created
     * @stability stable
     */
    readonly smsRole?: IRole;
    /**
     * The 'ExternalId' that Cognito service must using when assuming the `smsRole`, if the role is restricted with an 'sts:ExternalId' conditional.
     *
     * Learn more about ExternalId here - https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html
     *
     * This property will be ignored if `smsRole` is not specified.
     *
     * @default - No external id will be configured
     * @stability stable
     */
    readonly smsRoleExternalId?: string;
    /**
     * Setting this would explicitly enable or disable SMS role creation.
     *
     * When left unspecified, CDK will determine based on other properties if a role is needed or not.
     *
     * @default - CDK will determine based on other properties of the user pool if an SMS role should be created or not.
     * @stability stable
     */
    readonly enableSmsRole?: boolean;
    /**
     * Methods in which a user registers or signs in to a user pool.
     *
     * Allows either username with aliases OR sign in with email, phone, or both.
     *
     * Read the sections on usernames and aliases to learn more -
     * https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html
     *
     * To match with 'Option 1' in the above link, with a verified email, this property should be set to
     * `{ username: true, email: true }`. To match with 'Option 2' in the above link with both a verified email and phone
     * number, this property should be set to `{ email: true, phone: true }`.
     *
     * @default { username: true }
     * @stability stable
     */
    readonly signInAliases?: SignInAliases;
    /**
     * Attributes which Cognito will look to verify automatically upon user sign up.
     *
     * EMAIL and PHONE are the only available options.
     *
     * @default - If `signInAlias` includes email and/or phone, they will be included in `autoVerifiedAttributes` by default.
     * If absent, no attributes will be auto-verified.
     * @stability stable
     */
    readonly autoVerify?: AutoVerifiedAttrs;
    /**
     * The set of attributes that are required for every user in the user pool.
     *
     * Read more on attributes here - https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html
     *
     * @default - All standard attributes are optional and mutable.
     * @stability stable
     */
    readonly standardAttributes?: StandardAttributes;
    /**
     * Define a set of custom attributes that can be configured for each user in the user pool.
     *
     * @default - No custom attributes.
     * @stability stable
     */
    readonly customAttributes?: {
        [key: string]: ICustomAttribute;
    };
    /**
     * Configure whether users of this user pool can or are required use MFA to sign in.
     *
     * @default Mfa.OFF
     * @stability stable
     */
    readonly mfa?: Mfa;
    /**
     * Configure the MFA types that users can use in this user pool.
     *
     * Ignored if `mfa` is set to `OFF`.
     *
     * @default - { sms: true, oneTimePassword: false }, if `mfa` is set to `OPTIONAL` or `REQUIRED`.
     * { sms: false, oneTimePassword: false }, otherwise
     * @stability stable
     */
    readonly mfaSecondFactor?: MfaSecondFactor;
    /**
     * Password policy for this user pool.
     *
     * @default - see defaults on each property of PasswordPolicy.
     * @stability stable
     */
    readonly passwordPolicy?: PasswordPolicy;
    /**
     * Email settings for a user pool.
     *
     * @default - see defaults on each property of EmailSettings.
     * @stability stable
     */
    readonly emailSettings?: EmailSettings;
    /**
     * Lambda functions to use for supported Cognito triggers.
     *
     * @default - No Lambda triggers.
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html
     * @stability stable
     */
    readonly lambdaTriggers?: UserPoolTriggers;
    /**
     * Whether sign-in aliases should be evaluated with case sensitivity.
     *
     * For example, when this option is set to false, users will be able to sign in using either `MyUsername` or `myusername`.
     *
     * @default true
     * @stability stable
     */
    readonly signInCaseSensitive?: boolean;
    /**
     * How will a user be able to recover their account?
     *
     * @default AccountRecovery.PHONE_WITHOUT_MFA_AND_EMAIL
     * @stability stable
     */
    readonly accountRecovery?: AccountRecovery;
    /**
     * Policy to apply when the user pool is removed from the stack.
     *
     * @default RemovalPolicy.RETAIN
     * @stability stable
     */
    readonly removalPolicy?: RemovalPolicy;
}
/**
 * Represents a Cognito UserPool.
 *
 * @stability stable
 */
export interface IUserPool extends IResource {
    /**
     * The physical ID of this user pool resource.
     *
     * @stability stable
     * @attribute true
     */
    readonly userPoolId: string;
    /**
     * The ARN of this user pool resource.
     *
     * @stability stable
     * @attribute true
     */
    readonly userPoolArn: string;
    /**
     * Get all identity providers registered with this user pool.
     *
     * @stability stable
     */
    readonly identityProviders: IUserPoolIdentityProvider[];
    /**
     * Add a new app client to this user pool.
     *
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-client-apps.html
     * @stability stable
     */
    addClient(id: string, options?: UserPoolClientOptions): UserPoolClient;
    /**
     * Associate a domain to this user pool.
     *
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-assign-domain.html
     * @stability stable
     */
    addDomain(id: string, options: UserPoolDomainOptions): UserPoolDomain;
    /**
     * Add a new resource server to this user pool.
     *
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-resource-servers.html
     * @stability stable
     */
    addResourceServer(id: string, options: UserPoolResourceServerOptions): UserPoolResourceServer;
    /**
     * Register an identity provider with this user pool.
     *
     * @stability stable
     */
    registerIdentityProvider(provider: IUserPoolIdentityProvider): void;
}
declare abstract class UserPoolBase extends Resource implements IUserPool {
    abstract readonly userPoolId: string;
    abstract readonly userPoolArn: string;
    /**
     * Get all identity providers registered with this user pool.
     *
     * @stability stable
     */
    readonly identityProviders: IUserPoolIdentityProvider[];
    /**
     * Add a new app client to this user pool.
     *
     * @stability stable
     */
    addClient(id: string, options?: UserPoolClientOptions): UserPoolClient;
    /**
     * Associate a domain to this user pool.
     *
     * @stability stable
     */
    addDomain(id: string, options: UserPoolDomainOptions): UserPoolDomain;
    /**
     * Add a new resource server to this user pool.
     *
     * @stability stable
     */
    addResourceServer(id: string, options: UserPoolResourceServerOptions): UserPoolResourceServer;
    /**
     * Register an identity provider with this user pool.
     *
     * @stability stable
     */
    registerIdentityProvider(provider: IUserPoolIdentityProvider): void;
}
/**
 * Define a Cognito User Pool.
 *
 * @stability stable
 */
export declare class UserPool extends UserPoolBase {
    /**
     * Import an existing user pool based on its id.
     *
     * @stability stable
     */
    static fromUserPoolId(scope: Construct, id: string, userPoolId: string): IUserPool;
    /**
     * Import an existing user pool based on its ARN.
     *
     * @stability stable
     */
    static fromUserPoolArn(scope: Construct, id: string, userPoolArn: string): IUserPool;
    /**
     * The physical ID of this user pool resource.
     *
     * @stability stable
     */
    readonly userPoolId: string;
    /**
     * The ARN of the user pool.
     *
     * @stability stable
     */
    readonly userPoolArn: string;
    /**
     * User pool provider name.
     *
     * @stability stable
     * @attribute true
     */
    readonly userPoolProviderName: string;
    /**
     * User pool provider URL.
     *
     * @stability stable
     * @attribute true
     */
    readonly userPoolProviderUrl: string;
    private triggers;
    /**
     * @stability stable
     */
    constructor(scope: Construct, id: string, props?: UserPoolProps);
    /**
     * Add a lambda trigger to a user pool operation.
     *
     * @see https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html
     * @stability stable
     */
    addTrigger(operation: UserPoolOperation, fn: lambda.IFunction): void;
    private addLambdaPermission;
    private verificationMessageConfiguration;
    private signInConfiguration;
    private smsConfiguration;
    private mfaConfiguration;
    private configurePasswordPolicy;
    private schemaConfiguration;
    private accountRecovery;
}
export {};
