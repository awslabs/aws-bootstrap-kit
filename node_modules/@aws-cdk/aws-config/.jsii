{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-events": "1.91.0",
    "@aws-cdk/aws-iam": "1.91.0",
    "@aws-cdk/aws-lambda": "1.91.0",
    "@aws-cdk/aws-sns": "1.91.0",
    "@aws-cdk/core": "1.91.0",
    "constructs": "^3.2.0"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::Config",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.21.0 (build 4262b22)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "config"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@aws-cdk/aws-config",
  "readme": {
    "markdown": "# AWS Config Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\nFeatures                                                                               | Stability\n---------------------------------------------------------------------------------------|------------\nCFN Resources                                                                          | ![Stable](https://img.shields.io/badge/stable-success.svg?style=for-the-badge)\nHigher level constructs for Config Rules                                               | ![Stable](https://img.shields.io/badge/stable-success.svg?style=for-the-badge)\nHigher level constructs for initial set-up (delivery channel & configuration recorder) | ![Not Implemented](https://img.shields.io/badge/not--implemented-black.svg?style=for-the-badge)\n\n> **CFN Resources:** All classes with the `Cfn` prefix in this module ([CFN Resources]) are always\n> stable and safe to use.\n>\n> [CFN Resources]: https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib\n\n<!-- -->\n\n> **Stable:** Higher level constructs in this module that are marked stable will not undergo any\n> breaking changes. They will strictly follow the [Semantic Versioning](https://semver.org/) model.\n\n---\n\n<!--END STABILITY BANNER-->\n\n[AWS Config](https://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html) provides a detailed view of the configuration of AWS resources in your AWS account.\nThis includes how the resources are related to one another and how they were configured in the\npast so that you can see how the configurations and relationships change over time.\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n\n## Initial Setup\n\nBefore using the constructs provided in this module, you need to set up AWS Config\nin the region in which it will be used. This setup includes the one-time creation of the\nfollowing resources per region:\n\n- `ConfigurationRecorder`: Configure which resources will be recorded for config changes.\n- `DeliveryChannel`: Configure where to store the recorded data.\n\nThe following guides provide the steps for getting started with AWS Config:\n\n- [Using the AWS Console](https://docs.aws.amazon.com/config/latest/developerguide/gs-console.html)\n- [Using the AWS CLI](https://docs.aws.amazon.com/config/latest/developerguide/gs-cli.html)\n\n## Rules\n\nAWS Config can evaluate the configuration settings of your AWS resources by creating AWS Config rules,\nwhich represent your ideal configuration settings.\n\nSee [Evaluating Resources with AWS Config Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html) to learn more about AWS Config rules.\n\n### AWS Managed Rules\n\nAWS Config provides AWS managed rules, which are predefined, customizable rules that AWS Config\nuses to evaluate whether your AWS resources comply with common best practices.\n\nFor example, you could create a managed rule that checks whether active access keys are rotated\nwithin the number of days specified.\n\n```ts\nimport * as config from '@aws-cdk/aws-config';\nimport * as cdk from '@aws-cdk/core';\n\n// https://docs.aws.amazon.com/config/latest/developerguide/access-keys-rotated.html\nnew config.ManagedRule(this, 'AccessKeysRotated', {\n  identifier: config.ManagedRuleIdentifiers.ACCESS_KEYS_ROTATED,\n  inputParameters: {\n     maxAccessKeyAge: 60 // default is 90 days\n  },\n  maximumExecutionFrequency: config.MaximumExecutionFrequency.TWELVE_HOURS // default is 24 hours\n});\n```\n\nIdentifiers for AWS managed rules are available through static constants in the `ManagedRuleIdentifiers` class.\nYou can find supported input parameters in the [List of AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html).\n\nThe following higher level constructs for AWS managed rules are available.\n\n#### Access Key rotation\n\nChecks whether your active access keys are rotated within the number of days specified.\n\n```ts\nimport * as config from '@aws-cdk/aws-config';\nimport * as cdk from '@aws-cdk/aws-cdk';\n\n// compliant if access keys have been rotated within the last 90 days\nnew config.AccessKeysRotated(this, 'AccessKeyRotated');\n```\n\n#### CloudFormation Stack drift detection\n\nChecks whether your CloudFormation stack's actual configuration differs, or has drifted,\nfrom it's expected configuration.\n\n```ts\nimport * as config from '@aws-cdk/aws-config';\nimport * as cdk from '@aws-cdk/aws-cdk';\n\n// compliant if stack's status is 'IN_SYNC'\n// non-compliant if the stack's drift status is 'DRIFTED'\nnew config.CloudFormationStackDriftDetectionCheck(stack, 'Drift', {\n  ownStackOnly: true, // checks only the stack containing the rule\n});\n```\n\n#### CloudFormation Stack notifications\n\nChecks whether your CloudFormation stacks are sending event notifications to a SNS topic.\n\n```ts\nimport * as config from '@aws-cdk/aws-config';\nimport * as cdk from '@aws-cdk/aws-cdk';\n\n// topics to which CloudFormation stacks may send event notifications\nconst topic1 = new sns.Topic(stack, 'AllowedTopic1');\nconst topic2 = new sns.Topic(stack, 'AllowedTopic2');\n\n// non-compliant if CloudFormation stack does not send notifications to 'topic1' or 'topic2'\nnew config.CloudFormationStackNotificationCheck(this, 'NotificationCheck', {\n  topics: [topic1, topic2],\n})\n```\n\n### Custom rules\n\nYou can develop custom rules and add them to AWS Config. You associate each custom rule with an\nAWS Lambda function, which contains the logic that evaluates whether your AWS resources comply\nwith the rule.\n\n### Triggers\n\nAWS Lambda executes functions in response to events that are published by AWS Services.\nThe function for a custom Config rule receives an event that is published by AWS Config,\nand is responsible for evaluating the compliance of the rule.\n\nEvaluations can be triggered by configuration changes, periodically, or both.\nTo create a custom rule, define a `CustomRule` and specify the Lambda Function\nto run and the trigger types.\n\n```ts\nimport * as config from '@aws-cdk/aws-config';\n\nnew config.CustomRule(this, 'CustomRule', {\n  lambdaFunction: evalComplianceFn,\n  configurationChanges: true,\n  periodic: true,\n  maximumExecutionFrequency: config.MaximumExecutionFrequency.SIX_HOURS, // default is 24 hours\n});\n```\n\nWhen the trigger for a rule occurs, the Lambda function is invoked by publishing an event.\nSee [example events for AWS Config Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules_example-events.html)\n\nThe AWS documentation has examples of Lambda functions for evaluations that are\n[triggered by configuration changes](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules_nodejs-sample.html#event-based-example-rule) and [triggered periodically](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules_nodejs-sample.html#periodic-example-rule)\n\n\n### Scope\n\nBy default rules are triggered by changes to all [resources](https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources).\n\nUse the `RuleScope` APIs (`fromResource()`, `fromResources()` or `fromTag()`) to restrict\nthe scope of both managed and custom rules:\n\n```ts\nimport * as config from '@aws-cdk/aws-config';\n\nconst sshRule = new config.ManagedRule(this, 'SSH', {\n  identifier: config.ManagedRuleIdentifiers.EC2_SECURITY_GROUPS_INCOMING_SSH_DISABLED,\n  ruleScope: config.RuleScope.fromResource(config.ResourceType.EC2_SECURITY_GROUP, 'sg-1234567890abcdefgh'), // restrict to specific security group\n});\n\nconst customRule = new config.CustomRule(this, 'Lambda', {\n  lambdaFunction: evalComplianceFn,\n  configurationChanges: true\n  ruleScope: config.RuleScope.fromResources([config.ResourceType.CLOUDFORMATION_STACK, config.ResourceType.S3_BUCKET]), // restrict to all CloudFormation stacks and S3 buckets\n});\n\nconst tagRule = new config.CustomRule(this, 'CostCenterTagRule', {\n  lambdaFunction: evalComplianceFn,\n  configurationChanges: true\n  ruleScope: config.RuleScope.fromTag('Cost Center', 'MyApp'), // restrict to a specific tag\n});\n```\n\n### Events\n\nYou can define Amazon EventBridge event rules which trigger when a compliance check fails\nor when a rule is re-evaluated.\n\nUse the `onComplianceChange()` APIs to trigger an EventBridge event when a compliance check\nof your AWS Config Rule fails:\n\n```ts\nimport * as config from '@aws-cdk/aws-config';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\n// Topic to which compliance notification events will be published\nconst complianceTopic = new sns.Topic(this, 'ComplianceTopic');\n\nconst rule = new config.CloudFormationStackDriftDetectionCheck(this, 'Drift');\nrule.onComplianceChange('TopicEvent', {\n  target: new targets.SnsTopic(complianceTopic),\n});\n```\n\nUse the `onReEvaluationStatus()` status to trigger an EventBridge event when an AWS Config\nrule is re-evaluated.\n\n```ts\nimport * as config from '@aws-cdk/aws-config';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\n// Topic to which re-evaluation notification events will be published\nconst reEvaluationTopic = new sns.Topic(this, 'ComplianceTopic');\nrule.onReEvaluationStatus('ReEvaluationEvent', {\n  target: new targets.SnsTopic(reEvaluationTopic),\n})\n```\n\n### Example\n\nThe following example creates a custom rule that evaluates whether EC2 instances are compliant.\nCompliance events are published to an SNS topic.\n\n```ts\nimport * as config from '@aws-cdk/aws-config';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\n// Lambda function containing logic that evaluates compliance with the rule.\nconst evalComplianceFn = new lambda.Function(this, 'CustomFunction', {\n  code: lambda.AssetCode.fromInline('exports.handler = (event) => console.log(event);'),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_10_X,\n});\n\n// A custom rule that runs on configuration changes of EC2 instances\nconst customRule = new config.CustomRule(this, 'Custom', {\n  configurationChanges: true,\n  lambdaFunction: evalComplianceFn,\n  ruleScope: config.RuleScope.fromResource([config.ResourceType.EC2_INSTANCE]),\n});\n\n// A rule to detect stack drifts\nconst driftRule = new config.CloudFormationStackDriftDetectionCheck(this, 'Drift');\n\n// Topic to which compliance notification events will be published\nconst complianceTopic = new sns.Topic(this, 'ComplianceTopic');\n\n// Send notification on compliance change events\ndriftRule.onComplianceChange('ComplianceChange', {\n  target: new targets.SnsTopic(complianceTopic),\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-config",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.Config",
      "packageId": "Amazon.CDK.AWS.Config"
    },
    "java": {
      "maven": {
        "artifactId": "config",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.config"
    },
    "js": {
      "npm": "@aws-cdk/aws-config"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-config",
      "module": "aws_cdk.aws_config"
    }
  },
  "types": {
    "@aws-cdk/aws-config.AccessKeysRotated": {
      "assembly": "@aws-cdk/aws-config",
      "base": "@aws-cdk/aws-config.ManagedRule",
      "docs": {
        "custom": {
          "resource": "AWS::Config::ConfigRule"
        },
        "see": "https://docs.aws.amazon.com/config/latest/developerguide/access-keys-rotated.html",
        "stability": "stable",
        "summary": "Checks whether the active access keys are rotated within the number of days specified in `maxAge`."
      },
      "fqn": "@aws-cdk/aws-config.AccessKeysRotated",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/managed-rules.ts",
          "line": 28
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-config.AccessKeysRotatedProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/managed-rules.ts",
        "line": 27
      },
      "name": "AccessKeysRotated"
    },
    "@aws-cdk/aws-config.AccessKeysRotatedProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a AccessKeysRotated."
      },
      "fqn": "@aws-cdk/aws-config.AccessKeysRotatedProps",
      "interfaces": [
        "@aws-cdk/aws-config.RuleProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/managed-rules.ts",
        "line": 10
      },
      "name": "AccessKeysRotatedProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Duration.days(90)",
            "stability": "stable",
            "summary": "The maximum number of days within which the access keys must be rotated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/managed-rules.ts",
            "line": 16
          },
          "name": "maxAge",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnAggregationAuthorization": {
      "assembly": "@aws-cdk/aws-config",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Config::AggregationAuthorization",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Config::AggregationAuthorization`."
      },
      "fqn": "@aws-cdk/aws-config.CfnAggregationAuthorization",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Config::AggregationAuthorization`."
        },
        "locationInModule": {
          "filename": "lib/config.generated.ts",
          "line": 145
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-config.CfnAggregationAuthorizationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 95
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 162
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 175
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnAggregationAuthorization",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 99
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 167
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html#cfn-config-aggregationauthorization-tags"
            },
            "stability": "external",
            "summary": "`AWS::Config::AggregationAuthorization.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 136
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html#cfn-config-aggregationauthorization-authorizedaccountid"
            },
            "stability": "external",
            "summary": "`AWS::Config::AggregationAuthorization.AuthorizedAccountId`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 124
          },
          "name": "authorizedAccountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html#cfn-config-aggregationauthorization-authorizedawsregion"
            },
            "stability": "external",
            "summary": "`AWS::Config::AggregationAuthorization.AuthorizedAwsRegion`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 130
          },
          "name": "authorizedAwsRegion",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnAggregationAuthorizationProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Config::AggregationAuthorization`."
      },
      "fqn": "@aws-cdk/aws-config.CfnAggregationAuthorizationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 17
      },
      "name": "CfnAggregationAuthorizationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html#cfn-config-aggregationauthorization-authorizedaccountid"
            },
            "stability": "external",
            "summary": "`AWS::Config::AggregationAuthorization.AuthorizedAccountId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 23
          },
          "name": "authorizedAccountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html#cfn-config-aggregationauthorization-authorizedawsregion"
            },
            "stability": "external",
            "summary": "`AWS::Config::AggregationAuthorization.AuthorizedAwsRegion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 29
          },
          "name": "authorizedAwsRegion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html#cfn-config-aggregationauthorization-tags"
            },
            "stability": "external",
            "summary": "`AWS::Config::AggregationAuthorization.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 35
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnConfigRule": {
      "assembly": "@aws-cdk/aws-config",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Config::ConfigRule",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Config::ConfigRule`."
      },
      "fqn": "@aws-cdk/aws-config.CfnConfigRule",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Config::ConfigRule`."
        },
        "locationInModule": {
          "filename": "lib/config.generated.ts",
          "line": 373
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-config.CfnConfigRuleProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 290
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 395
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 411
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnConfigRule",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 294
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 318
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Compliance.Type"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 323
          },
          "name": "attrComplianceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ConfigRuleId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 328
          },
          "name": "attrConfigRuleId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 400
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-inputparameters"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigRule.InputParameters`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 352
          },
          "name": "inputParameters",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-source"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigRule.Source`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 334
          },
          "name": "source",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-config.CfnConfigRule.SourceProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-configrulename"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigRule.ConfigRuleName`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 340
          },
          "name": "configRuleName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-description"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigRule.Description`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 346
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-maximumexecutionfrequency"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigRule.MaximumExecutionFrequency`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 358
          },
          "name": "maximumExecutionFrequency",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-scope"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigRule.Scope`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 364
          },
          "name": "scope",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnConfigRule.ScopeProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnConfigRule.ScopeProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-scope.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnConfigRule.ScopeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 421
      },
      "name": "ScopeProperty",
      "namespace": "CfnConfigRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-scope.html#cfn-config-configrule-scope-complianceresourceid"
            },
            "stability": "external",
            "summary": "`CfnConfigRule.ScopeProperty.ComplianceResourceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 426
          },
          "name": "complianceResourceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-scope.html#cfn-config-configrule-scope-complianceresourcetypes"
            },
            "stability": "external",
            "summary": "`CfnConfigRule.ScopeProperty.ComplianceResourceTypes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 431
          },
          "name": "complianceResourceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-scope.html#cfn-config-configrule-scope-tagkey"
            },
            "stability": "external",
            "summary": "`CfnConfigRule.ScopeProperty.TagKey`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 436
          },
          "name": "tagKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-scope.html#cfn-config-configrule-scope-tagvalue"
            },
            "stability": "external",
            "summary": "`CfnConfigRule.ScopeProperty.TagValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 441
          },
          "name": "tagValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnConfigRule.SourceDetailProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source-sourcedetails.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnConfigRule.SourceDetailProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 581
      },
      "name": "SourceDetailProperty",
      "namespace": "CfnConfigRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source-sourcedetails.html#cfn-config-configrule-source-sourcedetail-eventsource"
            },
            "stability": "external",
            "summary": "`CfnConfigRule.SourceDetailProperty.EventSource`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 586
          },
          "name": "eventSource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source-sourcedetails.html#cfn-config-configrule-source-sourcedetail-messagetype"
            },
            "stability": "external",
            "summary": "`CfnConfigRule.SourceDetailProperty.MessageType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 596
          },
          "name": "messageType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source-sourcedetails.html#cfn-config-configrule-sourcedetail-maximumexecutionfrequency"
            },
            "stability": "external",
            "summary": "`CfnConfigRule.SourceDetailProperty.MaximumExecutionFrequency`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 591
          },
          "name": "maximumExecutionFrequency",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnConfigRule.SourceProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnConfigRule.SourceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 504
      },
      "name": "SourceProperty",
      "namespace": "CfnConfigRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source.html#cfn-config-configrule-source-owner"
            },
            "stability": "external",
            "summary": "`CfnConfigRule.SourceProperty.Owner`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 509
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source.html#cfn-config-configrule-source-sourceidentifier"
            },
            "stability": "external",
            "summary": "`CfnConfigRule.SourceProperty.SourceIdentifier`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 519
          },
          "name": "sourceIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source.html#cfn-config-configrule-source-sourcedetails"
            },
            "stability": "external",
            "summary": "`CfnConfigRule.SourceProperty.SourceDetails`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 514
          },
          "name": "sourceDetails",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-config.CfnConfigRule.SourceDetailProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnConfigRuleProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Config::ConfigRule`."
      },
      "fqn": "@aws-cdk/aws-config.CfnConfigRuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 186
      },
      "name": "CfnConfigRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-source"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigRule.Source`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 192
          },
          "name": "source",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-config.CfnConfigRule.SourceProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-configrulename"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigRule.ConfigRuleName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 198
          },
          "name": "configRuleName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-description"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigRule.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 204
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-inputparameters"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigRule.InputParameters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 210
          },
          "name": "inputParameters",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-maximumexecutionfrequency"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigRule.MaximumExecutionFrequency`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 216
          },
          "name": "maximumExecutionFrequency",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-scope"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigRule.Scope`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 222
          },
          "name": "scope",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnConfigRule.ScopeProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnConfigurationAggregator": {
      "assembly": "@aws-cdk/aws-config",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Config::ConfigurationAggregator",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Config::ConfigurationAggregator`."
      },
      "fqn": "@aws-cdk/aws-config.CfnConfigurationAggregator",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Config::ConfigurationAggregator`."
        },
        "locationInModule": {
          "filename": "lib/config.generated.ts",
          "line": 801
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-config.CfnConfigurationAggregatorProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 745
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 818
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 832
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnConfigurationAggregator",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 749
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 823
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html#cfn-config-configurationaggregator-tags"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigurationAggregator.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 792
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html#cfn-config-configurationaggregator-configurationaggregatorname"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigurationAggregator.ConfigurationAggregatorName`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 774
          },
          "name": "configurationAggregatorName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html#cfn-config-configurationaggregator-accountaggregationsources"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigurationAggregator.AccountAggregationSources`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 780
          },
          "name": "accountAggregationSources",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-config.CfnConfigurationAggregator.AccountAggregationSourceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html#cfn-config-configurationaggregator-organizationaggregationsource"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigurationAggregator.OrganizationAggregationSource`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 786
          },
          "name": "organizationAggregationSource",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnConfigurationAggregator.OrganizationAggregationSourceProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnConfigurationAggregator.AccountAggregationSourceProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationaggregator-accountaggregationsource.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnConfigurationAggregator.AccountAggregationSourceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 842
      },
      "name": "AccountAggregationSourceProperty",
      "namespace": "CfnConfigurationAggregator",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationaggregator-accountaggregationsource.html#cfn-config-configurationaggregator-accountaggregationsource-accountids"
            },
            "stability": "external",
            "summary": "`CfnConfigurationAggregator.AccountAggregationSourceProperty.AccountIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 847
          },
          "name": "accountIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationaggregator-accountaggregationsource.html#cfn-config-configurationaggregator-accountaggregationsource-allawsregions"
            },
            "stability": "external",
            "summary": "`CfnConfigurationAggregator.AccountAggregationSourceProperty.AllAwsRegions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 852
          },
          "name": "allAwsRegions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationaggregator-accountaggregationsource.html#cfn-config-configurationaggregator-accountaggregationsource-awsregions"
            },
            "stability": "external",
            "summary": "`CfnConfigurationAggregator.AccountAggregationSourceProperty.AwsRegions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 857
          },
          "name": "awsRegions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnConfigurationAggregator.OrganizationAggregationSourceProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationaggregator-organizationaggregationsource.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnConfigurationAggregator.OrganizationAggregationSourceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 918
      },
      "name": "OrganizationAggregationSourceProperty",
      "namespace": "CfnConfigurationAggregator",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationaggregator-organizationaggregationsource.html#cfn-config-configurationaggregator-organizationaggregationsource-rolearn"
            },
            "stability": "external",
            "summary": "`CfnConfigurationAggregator.OrganizationAggregationSourceProperty.RoleArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 933
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationaggregator-organizationaggregationsource.html#cfn-config-configurationaggregator-organizationaggregationsource-allawsregions"
            },
            "stability": "external",
            "summary": "`CfnConfigurationAggregator.OrganizationAggregationSourceProperty.AllAwsRegions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 923
          },
          "name": "allAwsRegions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationaggregator-organizationaggregationsource.html#cfn-config-configurationaggregator-organizationaggregationsource-awsregions"
            },
            "stability": "external",
            "summary": "`CfnConfigurationAggregator.OrganizationAggregationSourceProperty.AwsRegions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 928
          },
          "name": "awsRegions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnConfigurationAggregatorProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Config::ConfigurationAggregator`."
      },
      "fqn": "@aws-cdk/aws-config.CfnConfigurationAggregatorProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 659
      },
      "name": "CfnConfigurationAggregatorProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html#cfn-config-configurationaggregator-configurationaggregatorname"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigurationAggregator.ConfigurationAggregatorName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 665
          },
          "name": "configurationAggregatorName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html#cfn-config-configurationaggregator-accountaggregationsources"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigurationAggregator.AccountAggregationSources`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 671
          },
          "name": "accountAggregationSources",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-config.CfnConfigurationAggregator.AccountAggregationSourceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html#cfn-config-configurationaggregator-organizationaggregationsource"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigurationAggregator.OrganizationAggregationSource`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 677
          },
          "name": "organizationAggregationSource",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnConfigurationAggregator.OrganizationAggregationSourceProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html#cfn-config-configurationaggregator-tags"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigurationAggregator.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 683
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnConfigurationRecorder": {
      "assembly": "@aws-cdk/aws-config",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Config::ConfigurationRecorder",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Config::ConfigurationRecorder`."
      },
      "fqn": "@aws-cdk/aws-config.CfnConfigurationRecorder",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Config::ConfigurationRecorder`."
        },
        "locationInModule": {
          "filename": "lib/config.generated.ts",
          "line": 1122
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-config.CfnConfigurationRecorderProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 1072
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1138
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1151
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnConfigurationRecorder",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1076
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1143
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-rolearn"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigurationRecorder.RoleARN`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1101
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-name"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigurationRecorder.Name`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1107
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-recordinggroup"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigurationRecorder.RecordingGroup`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1113
          },
          "name": "recordingGroup",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnConfigurationRecorder.RecordingGroupProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnConfigurationRecorder.RecordingGroupProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationrecorder-recordinggroup.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnConfigurationRecorder.RecordingGroupProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 1161
      },
      "name": "RecordingGroupProperty",
      "namespace": "CfnConfigurationRecorder",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationrecorder-recordinggroup.html#cfn-config-configurationrecorder-recordinggroup-allsupported"
            },
            "stability": "external",
            "summary": "`CfnConfigurationRecorder.RecordingGroupProperty.AllSupported`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1166
          },
          "name": "allSupported",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationrecorder-recordinggroup.html#cfn-config-configurationrecorder-recordinggroup-includeglobalresourcetypes"
            },
            "stability": "external",
            "summary": "`CfnConfigurationRecorder.RecordingGroupProperty.IncludeGlobalResourceTypes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1171
          },
          "name": "includeGlobalResourceTypes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationrecorder-recordinggroup.html#cfn-config-configurationrecorder-recordinggroup-resourcetypes"
            },
            "stability": "external",
            "summary": "`CfnConfigurationRecorder.RecordingGroupProperty.ResourceTypes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1176
          },
          "name": "resourceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnConfigurationRecorderProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Config::ConfigurationRecorder`."
      },
      "fqn": "@aws-cdk/aws-config.CfnConfigurationRecorderProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 995
      },
      "name": "CfnConfigurationRecorderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-rolearn"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigurationRecorder.RoleARN`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1001
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-name"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigurationRecorder.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1007
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-recordinggroup"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConfigurationRecorder.RecordingGroup`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1013
          },
          "name": "recordingGroup",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnConfigurationRecorder.RecordingGroupProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnConformancePack": {
      "assembly": "@aws-cdk/aws-config",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Config::ConformancePack",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Config::ConformancePack`."
      },
      "fqn": "@aws-cdk/aws-config.CfnConformancePack",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Config::ConformancePack`."
        },
        "locationInModule": {
          "filename": "lib/config.generated.ts",
          "line": 1409
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-config.CfnConformancePackProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 1341
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1428
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1444
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnConformancePack",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1345
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1433
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-conformancepackname"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConformancePack.ConformancePackName`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1370
          },
          "name": "conformancePackName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-conformancepackinputparameters"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConformancePack.ConformancePackInputParameters`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1376
          },
          "name": "conformancePackInputParameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-config.CfnConformancePack.ConformancePackInputParameterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-deliverys3bucket"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConformancePack.DeliveryS3Bucket`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1382
          },
          "name": "deliveryS3Bucket",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-deliverys3keyprefix"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConformancePack.DeliveryS3KeyPrefix`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1388
          },
          "name": "deliveryS3KeyPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-templatebody"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConformancePack.TemplateBody`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1394
          },
          "name": "templateBody",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-templates3uri"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConformancePack.TemplateS3Uri`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1400
          },
          "name": "templateS3Uri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnConformancePack.ConformancePackInputParameterProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-conformancepack-conformancepackinputparameter.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnConformancePack.ConformancePackInputParameterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 1454
      },
      "name": "ConformancePackInputParameterProperty",
      "namespace": "CfnConformancePack",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-conformancepack-conformancepackinputparameter.html#cfn-config-conformancepack-conformancepackinputparameter-parametername"
            },
            "stability": "external",
            "summary": "`CfnConformancePack.ConformancePackInputParameterProperty.ParameterName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1459
          },
          "name": "parameterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-conformancepack-conformancepackinputparameter.html#cfn-config-conformancepack-conformancepackinputparameter-parametervalue"
            },
            "stability": "external",
            "summary": "`CfnConformancePack.ConformancePackInputParameterProperty.ParameterValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1464
          },
          "name": "parameterValue",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnConformancePackProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Config::ConformancePack`."
      },
      "fqn": "@aws-cdk/aws-config.CfnConformancePackProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 1237
      },
      "name": "CfnConformancePackProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-conformancepackname"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConformancePack.ConformancePackName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1243
          },
          "name": "conformancePackName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-conformancepackinputparameters"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConformancePack.ConformancePackInputParameters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1249
          },
          "name": "conformancePackInputParameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-config.CfnConformancePack.ConformancePackInputParameterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-deliverys3bucket"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConformancePack.DeliveryS3Bucket`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1255
          },
          "name": "deliveryS3Bucket",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-deliverys3keyprefix"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConformancePack.DeliveryS3KeyPrefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1261
          },
          "name": "deliveryS3KeyPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-templatebody"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConformancePack.TemplateBody`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1267
          },
          "name": "templateBody",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-templates3uri"
            },
            "stability": "external",
            "summary": "`AWS::Config::ConformancePack.TemplateS3Uri`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1273
          },
          "name": "templateS3Uri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnDeliveryChannel": {
      "assembly": "@aws-cdk/aws-config",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Config::DeliveryChannel",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Config::DeliveryChannel`."
      },
      "fqn": "@aws-cdk/aws-config.CfnDeliveryChannel",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Config::DeliveryChannel`."
        },
        "locationInModule": {
          "filename": "lib/config.generated.ts",
          "line": 1681
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-config.CfnDeliveryChannelProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 1619
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1699
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1714
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDeliveryChannel",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1623
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1704
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-s3bucketname"
            },
            "stability": "external",
            "summary": "`AWS::Config::DeliveryChannel.S3BucketName`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1648
          },
          "name": "s3BucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-configsnapshotdeliveryproperties"
            },
            "stability": "external",
            "summary": "`AWS::Config::DeliveryChannel.ConfigSnapshotDeliveryProperties`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1654
          },
          "name": "configSnapshotDeliveryProperties",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnDeliveryChannel.ConfigSnapshotDeliveryPropertiesProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-name"
            },
            "stability": "external",
            "summary": "`AWS::Config::DeliveryChannel.Name`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1660
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-s3keyprefix"
            },
            "stability": "external",
            "summary": "`AWS::Config::DeliveryChannel.S3KeyPrefix`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1666
          },
          "name": "s3KeyPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-snstopicarn"
            },
            "stability": "external",
            "summary": "`AWS::Config::DeliveryChannel.SnsTopicARN`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1672
          },
          "name": "snsTopicArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnDeliveryChannel.ConfigSnapshotDeliveryPropertiesProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-deliverychannel-configsnapshotdeliveryproperties.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnDeliveryChannel.ConfigSnapshotDeliveryPropertiesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 1724
      },
      "name": "ConfigSnapshotDeliveryPropertiesProperty",
      "namespace": "CfnDeliveryChannel",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-deliverychannel-configsnapshotdeliveryproperties.html#cfn-config-deliverychannel-configsnapshotdeliveryproperties-deliveryfrequency"
            },
            "stability": "external",
            "summary": "`CfnDeliveryChannel.ConfigSnapshotDeliveryPropertiesProperty.DeliveryFrequency`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1729
          },
          "name": "deliveryFrequency",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnDeliveryChannelProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Config::DeliveryChannel`."
      },
      "fqn": "@aws-cdk/aws-config.CfnDeliveryChannelProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 1524
      },
      "name": "CfnDeliveryChannelProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-s3bucketname"
            },
            "stability": "external",
            "summary": "`AWS::Config::DeliveryChannel.S3BucketName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1530
          },
          "name": "s3BucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-configsnapshotdeliveryproperties"
            },
            "stability": "external",
            "summary": "`AWS::Config::DeliveryChannel.ConfigSnapshotDeliveryProperties`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1536
          },
          "name": "configSnapshotDeliveryProperties",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnDeliveryChannel.ConfigSnapshotDeliveryPropertiesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-name"
            },
            "stability": "external",
            "summary": "`AWS::Config::DeliveryChannel.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1542
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-s3keyprefix"
            },
            "stability": "external",
            "summary": "`AWS::Config::DeliveryChannel.S3KeyPrefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1548
          },
          "name": "s3KeyPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-snstopicarn"
            },
            "stability": "external",
            "summary": "`AWS::Config::DeliveryChannel.SnsTopicARN`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1554
          },
          "name": "snsTopicArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnOrganizationConfigRule": {
      "assembly": "@aws-cdk/aws-config",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Config::OrganizationConfigRule",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Config::OrganizationConfigRule`."
      },
      "fqn": "@aws-cdk/aws-config.CfnOrganizationConfigRule",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Config::OrganizationConfigRule`."
        },
        "locationInModule": {
          "filename": "lib/config.generated.ts",
          "line": 1926
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-config.CfnOrganizationConfigRuleProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 1870
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1943
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1957
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnOrganizationConfigRule",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1874
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1948
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html#cfn-config-organizationconfigrule-organizationconfigrulename"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConfigRule.OrganizationConfigRuleName`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1899
          },
          "name": "organizationConfigRuleName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html#cfn-config-organizationconfigrule-excludedaccounts"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConfigRule.ExcludedAccounts`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1905
          },
          "name": "excludedAccounts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html#cfn-config-organizationconfigrule-organizationcustomrulemetadata"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConfigRule.OrganizationCustomRuleMetadata`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1911
          },
          "name": "organizationCustomRuleMetadata",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnOrganizationConfigRule.OrganizationCustomRuleMetadataProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html#cfn-config-organizationconfigrule-organizationmanagedrulemetadata"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConfigRule.OrganizationManagedRuleMetadata`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1917
          },
          "name": "organizationManagedRuleMetadata",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnOrganizationConfigRule.OrganizationManagedRuleMetadataProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnOrganizationConfigRule.OrganizationCustomRuleMetadataProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationcustomrulemetadata.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnOrganizationConfigRule.OrganizationCustomRuleMetadataProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 1967
      },
      "name": "OrganizationCustomRuleMetadataProperty",
      "namespace": "CfnOrganizationConfigRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationcustomrulemetadata.html#cfn-config-organizationconfigrule-organizationcustomrulemetadata-lambdafunctionarn"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationCustomRuleMetadataProperty.LambdaFunctionArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1982
          },
          "name": "lambdaFunctionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationcustomrulemetadata.html#cfn-config-organizationconfigrule-organizationcustomrulemetadata-organizationconfigruletriggertypes"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationCustomRuleMetadataProperty.OrganizationConfigRuleTriggerTypes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1992
          },
          "name": "organizationConfigRuleTriggerTypes",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationcustomrulemetadata.html#cfn-config-organizationconfigrule-organizationcustomrulemetadata-description"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationCustomRuleMetadataProperty.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1972
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationcustomrulemetadata.html#cfn-config-organizationconfigrule-organizationcustomrulemetadata-inputparameters"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationCustomRuleMetadataProperty.InputParameters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1977
          },
          "name": "inputParameters",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationcustomrulemetadata.html#cfn-config-organizationconfigrule-organizationcustomrulemetadata-maximumexecutionfrequency"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationCustomRuleMetadataProperty.MaximumExecutionFrequency`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1987
          },
          "name": "maximumExecutionFrequency",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationcustomrulemetadata.html#cfn-config-organizationconfigrule-organizationcustomrulemetadata-resourceidscope"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationCustomRuleMetadataProperty.ResourceIdScope`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1997
          },
          "name": "resourceIdScope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationcustomrulemetadata.html#cfn-config-organizationconfigrule-organizationcustomrulemetadata-resourcetypesscope"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationCustomRuleMetadataProperty.ResourceTypesScope`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2002
          },
          "name": "resourceTypesScope",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationcustomrulemetadata.html#cfn-config-organizationconfigrule-organizationcustomrulemetadata-tagkeyscope"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationCustomRuleMetadataProperty.TagKeyScope`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2007
          },
          "name": "tagKeyScope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationcustomrulemetadata.html#cfn-config-organizationconfigrule-organizationcustomrulemetadata-tagvaluescope"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationCustomRuleMetadataProperty.TagValueScope`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2012
          },
          "name": "tagValueScope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnOrganizationConfigRule.OrganizationManagedRuleMetadataProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationmanagedrulemetadata.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnOrganizationConfigRule.OrganizationManagedRuleMetadataProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 2092
      },
      "name": "OrganizationManagedRuleMetadataProperty",
      "namespace": "CfnOrganizationConfigRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationmanagedrulemetadata.html#cfn-config-organizationconfigrule-organizationmanagedrulemetadata-ruleidentifier"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationManagedRuleMetadataProperty.RuleIdentifier`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2122
          },
          "name": "ruleIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationmanagedrulemetadata.html#cfn-config-organizationconfigrule-organizationmanagedrulemetadata-description"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationManagedRuleMetadataProperty.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2097
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationmanagedrulemetadata.html#cfn-config-organizationconfigrule-organizationmanagedrulemetadata-inputparameters"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationManagedRuleMetadataProperty.InputParameters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2102
          },
          "name": "inputParameters",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationmanagedrulemetadata.html#cfn-config-organizationconfigrule-organizationmanagedrulemetadata-maximumexecutionfrequency"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationManagedRuleMetadataProperty.MaximumExecutionFrequency`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2107
          },
          "name": "maximumExecutionFrequency",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationmanagedrulemetadata.html#cfn-config-organizationconfigrule-organizationmanagedrulemetadata-resourceidscope"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationManagedRuleMetadataProperty.ResourceIdScope`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2112
          },
          "name": "resourceIdScope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationmanagedrulemetadata.html#cfn-config-organizationconfigrule-organizationmanagedrulemetadata-resourcetypesscope"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationManagedRuleMetadataProperty.ResourceTypesScope`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2117
          },
          "name": "resourceTypesScope",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationmanagedrulemetadata.html#cfn-config-organizationconfigrule-organizationmanagedrulemetadata-tagkeyscope"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationManagedRuleMetadataProperty.TagKeyScope`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2127
          },
          "name": "tagKeyScope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconfigrule-organizationmanagedrulemetadata.html#cfn-config-organizationconfigrule-organizationmanagedrulemetadata-tagvaluescope"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConfigRule.OrganizationManagedRuleMetadataProperty.TagValueScope`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2132
          },
          "name": "tagValueScope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnOrganizationConfigRuleProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Config::OrganizationConfigRule`."
      },
      "fqn": "@aws-cdk/aws-config.CfnOrganizationConfigRuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 1784
      },
      "name": "CfnOrganizationConfigRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html#cfn-config-organizationconfigrule-organizationconfigrulename"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConfigRule.OrganizationConfigRuleName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1790
          },
          "name": "organizationConfigRuleName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html#cfn-config-organizationconfigrule-excludedaccounts"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConfigRule.ExcludedAccounts`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1796
          },
          "name": "excludedAccounts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html#cfn-config-organizationconfigrule-organizationcustomrulemetadata"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConfigRule.OrganizationCustomRuleMetadata`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1802
          },
          "name": "organizationCustomRuleMetadata",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnOrganizationConfigRule.OrganizationCustomRuleMetadataProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html#cfn-config-organizationconfigrule-organizationmanagedrulemetadata"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConfigRule.OrganizationManagedRuleMetadata`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 1808
          },
          "name": "organizationManagedRuleMetadata",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnOrganizationConfigRule.OrganizationManagedRuleMetadataProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnOrganizationConformancePack": {
      "assembly": "@aws-cdk/aws-config",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Config::OrganizationConformancePack",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Config::OrganizationConformancePack`."
      },
      "fqn": "@aws-cdk/aws-config.CfnOrganizationConformancePack",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Config::OrganizationConformancePack`."
        },
        "locationInModule": {
          "filename": "lib/config.generated.ts",
          "line": 2396
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-config.CfnOrganizationConformancePackProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 2322
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2416
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2433
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnOrganizationConformancePack",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2326
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2421
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-organizationconformancepackname"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConformancePack.OrganizationConformancePackName`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2351
          },
          "name": "organizationConformancePackName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-conformancepackinputparameters"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConformancePack.ConformancePackInputParameters`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2357
          },
          "name": "conformancePackInputParameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-config.CfnOrganizationConformancePack.ConformancePackInputParameterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-deliverys3bucket"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConformancePack.DeliveryS3Bucket`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2363
          },
          "name": "deliveryS3Bucket",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-deliverys3keyprefix"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConformancePack.DeliveryS3KeyPrefix`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2369
          },
          "name": "deliveryS3KeyPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-excludedaccounts"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConformancePack.ExcludedAccounts`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2375
          },
          "name": "excludedAccounts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-templatebody"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConformancePack.TemplateBody`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2381
          },
          "name": "templateBody",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-templates3uri"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConformancePack.TemplateS3Uri`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2387
          },
          "name": "templateS3Uri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnOrganizationConformancePack.ConformancePackInputParameterProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconformancepack-conformancepackinputparameter.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnOrganizationConformancePack.ConformancePackInputParameterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 2443
      },
      "name": "ConformancePackInputParameterProperty",
      "namespace": "CfnOrganizationConformancePack",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconformancepack-conformancepackinputparameter.html#cfn-config-organizationconformancepack-conformancepackinputparameter-parametername"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConformancePack.ConformancePackInputParameterProperty.ParameterName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2448
          },
          "name": "parameterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-organizationconformancepack-conformancepackinputparameter.html#cfn-config-organizationconformancepack-conformancepackinputparameter-parametervalue"
            },
            "stability": "external",
            "summary": "`CfnOrganizationConformancePack.ConformancePackInputParameterProperty.ParameterValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2453
          },
          "name": "parameterValue",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnOrganizationConformancePackProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Config::OrganizationConformancePack`."
      },
      "fqn": "@aws-cdk/aws-config.CfnOrganizationConformancePackProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 2209
      },
      "name": "CfnOrganizationConformancePackProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-organizationconformancepackname"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConformancePack.OrganizationConformancePackName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2215
          },
          "name": "organizationConformancePackName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-conformancepackinputparameters"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConformancePack.ConformancePackInputParameters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2221
          },
          "name": "conformancePackInputParameters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-config.CfnOrganizationConformancePack.ConformancePackInputParameterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-deliverys3bucket"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConformancePack.DeliveryS3Bucket`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2227
          },
          "name": "deliveryS3Bucket",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-deliverys3keyprefix"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConformancePack.DeliveryS3KeyPrefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2233
          },
          "name": "deliveryS3KeyPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-excludedaccounts"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConformancePack.ExcludedAccounts`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2239
          },
          "name": "excludedAccounts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-templatebody"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConformancePack.TemplateBody`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2245
          },
          "name": "templateBody",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-templates3uri"
            },
            "stability": "external",
            "summary": "`AWS::Config::OrganizationConformancePack.TemplateS3Uri`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2251
          },
          "name": "templateS3Uri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnRemediationConfiguration": {
      "assembly": "@aws-cdk/aws-config",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Config::RemediationConfiguration",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Config::RemediationConfiguration`."
      },
      "fqn": "@aws-cdk/aws-config.CfnRemediationConfiguration",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Config::RemediationConfiguration`."
        },
        "locationInModule": {
          "filename": "lib/config.generated.ts",
          "line": 2747
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-config.CfnRemediationConfigurationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 2655
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2772
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2792
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRemediationConfiguration",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2659
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2777
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-configrulename"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.ConfigRuleName`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2684
          },
          "name": "configRuleName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-parameters"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.Parameters`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2720
          },
          "name": "parameters",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-targetid"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.TargetId`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2690
          },
          "name": "targetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-targettype"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.TargetType`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2696
          },
          "name": "targetType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-automatic"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.Automatic`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2702
          },
          "name": "automatic",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-executioncontrols"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.ExecutionControls`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2708
          },
          "name": "executionControls",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnRemediationConfiguration.ExecutionControlsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-maximumautomaticattempts"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.MaximumAutomaticAttempts`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2714
          },
          "name": "maximumAutomaticAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-resourcetype"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.ResourceType`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2726
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-retryattemptseconds"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.RetryAttemptSeconds`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2732
          },
          "name": "retryAttemptSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-targetversion"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.TargetVersion`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2738
          },
          "name": "targetVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnRemediationConfiguration.ExecutionControlsProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-remediationconfiguration-executioncontrols.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnRemediationConfiguration.ExecutionControlsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 2802
      },
      "name": "ExecutionControlsProperty",
      "namespace": "CfnRemediationConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-remediationconfiguration-executioncontrols.html#cfn-config-remediationconfiguration-executioncontrols-ssmcontrols"
            },
            "stability": "external",
            "summary": "`CfnRemediationConfiguration.ExecutionControlsProperty.SsmControls`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2807
          },
          "name": "ssmControls",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnRemediationConfiguration.SsmControlsProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnRemediationConfiguration.RemediationParameterValueProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-remediationconfiguration-remediationparametervalue.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnRemediationConfiguration.RemediationParameterValueProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 2861
      },
      "name": "RemediationParameterValueProperty",
      "namespace": "CfnRemediationConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-remediationconfiguration-remediationparametervalue.html#cfn-config-remediationconfiguration-remediationparametervalue-resourcevalue"
            },
            "stability": "external",
            "summary": "`CfnRemediationConfiguration.RemediationParameterValueProperty.ResourceValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2866
          },
          "name": "resourceValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnRemediationConfiguration.ResourceValueProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-remediationconfiguration-remediationparametervalue.html#cfn-config-remediationconfiguration-remediationparametervalue-staticvalue"
            },
            "stability": "external",
            "summary": "`CfnRemediationConfiguration.RemediationParameterValueProperty.StaticValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2871
          },
          "name": "staticValue",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnRemediationConfiguration.StaticValueProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnRemediationConfiguration.ResourceValueProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-remediationconfiguration-resourcevalue.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnRemediationConfiguration.ResourceValueProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 2928
      },
      "name": "ResourceValueProperty",
      "namespace": "CfnRemediationConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-remediationconfiguration-resourcevalue.html#cfn-config-remediationconfiguration-resourcevalue-value"
            },
            "stability": "external",
            "summary": "`CfnRemediationConfiguration.ResourceValueProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2933
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnRemediationConfiguration.SsmControlsProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-remediationconfiguration-ssmcontrols.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnRemediationConfiguration.SsmControlsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 2987
      },
      "name": "SsmControlsProperty",
      "namespace": "CfnRemediationConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-remediationconfiguration-ssmcontrols.html#cfn-config-remediationconfiguration-ssmcontrols-concurrentexecutionratepercentage"
            },
            "stability": "external",
            "summary": "`CfnRemediationConfiguration.SsmControlsProperty.ConcurrentExecutionRatePercentage`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2992
          },
          "name": "concurrentExecutionRatePercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-remediationconfiguration-ssmcontrols.html#cfn-config-remediationconfiguration-ssmcontrols-errorpercentage"
            },
            "stability": "external",
            "summary": "`CfnRemediationConfiguration.SsmControlsProperty.ErrorPercentage`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2997
          },
          "name": "errorPercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnRemediationConfiguration.StaticValueProperty": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-remediationconfiguration-staticvalue.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-config.CfnRemediationConfiguration.StaticValueProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 3054
      },
      "name": "StaticValueProperty",
      "namespace": "CfnRemediationConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-remediationconfiguration-staticvalue.html#cfn-config-remediationconfiguration-staticvalue-values"
            },
            "stability": "external",
            "summary": "`CfnRemediationConfiguration.StaticValueProperty.Values`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 3059
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnRemediationConfigurationProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Config::RemediationConfiguration`."
      },
      "fqn": "@aws-cdk/aws-config.CfnRemediationConfigurationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 2513
      },
      "name": "CfnRemediationConfigurationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-configrulename"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.ConfigRuleName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2519
          },
          "name": "configRuleName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-targetid"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.TargetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2525
          },
          "name": "targetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-targettype"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.TargetType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2531
          },
          "name": "targetType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-automatic"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.Automatic`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2537
          },
          "name": "automatic",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-executioncontrols"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.ExecutionControls`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2543
          },
          "name": "executionControls",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-config.CfnRemediationConfiguration.ExecutionControlsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-maximumautomaticattempts"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.MaximumAutomaticAttempts`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2549
          },
          "name": "maximumAutomaticAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-parameters"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.Parameters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2555
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-resourcetype"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2561
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-retryattemptseconds"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.RetryAttemptSeconds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2567
          },
          "name": "retryAttemptSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-targetversion"
            },
            "stability": "external",
            "summary": "`AWS::Config::RemediationConfiguration.TargetVersion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 2573
          },
          "name": "targetVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnStoredQuery": {
      "assembly": "@aws-cdk/aws-config",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Config::StoredQuery",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Config::StoredQuery`."
      },
      "fqn": "@aws-cdk/aws-config.CfnStoredQuery",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Config::StoredQuery`."
        },
        "locationInModule": {
          "filename": "lib/config.generated.ts",
          "line": 3267
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-config.CfnStoredQueryProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 3201
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 3287
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 3301
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnStoredQuery",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 3205
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "QueryArn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 3229
          },
          "name": "attrQueryArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "QueryId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 3234
          },
          "name": "attrQueryId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 3292
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html#cfn-config-storedquery-tags"
            },
            "stability": "external",
            "summary": "`AWS::Config::StoredQuery.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 3258
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html#cfn-config-storedquery-queryexpression"
            },
            "stability": "external",
            "summary": "`AWS::Config::StoredQuery.QueryExpression`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 3240
          },
          "name": "queryExpression",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html#cfn-config-storedquery-queryname"
            },
            "stability": "external",
            "summary": "`AWS::Config::StoredQuery.QueryName`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 3246
          },
          "name": "queryName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html#cfn-config-storedquery-querydescription"
            },
            "stability": "external",
            "summary": "`AWS::Config::StoredQuery.QueryDescription`."
          },
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 3252
          },
          "name": "queryDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CfnStoredQueryProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Config::StoredQuery`."
      },
      "fqn": "@aws-cdk/aws-config.CfnStoredQueryProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/config.generated.ts",
        "line": 3114
      },
      "name": "CfnStoredQueryProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html#cfn-config-storedquery-queryexpression"
            },
            "stability": "external",
            "summary": "`AWS::Config::StoredQuery.QueryExpression`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 3120
          },
          "name": "queryExpression",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html#cfn-config-storedquery-queryname"
            },
            "stability": "external",
            "summary": "`AWS::Config::StoredQuery.QueryName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 3126
          },
          "name": "queryName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html#cfn-config-storedquery-querydescription"
            },
            "stability": "external",
            "summary": "`AWS::Config::StoredQuery.QueryDescription`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 3132
          },
          "name": "queryDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html#cfn-config-storedquery-tags"
            },
            "stability": "external",
            "summary": "`AWS::Config::StoredQuery.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/config.generated.ts",
            "line": 3138
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CloudFormationStackDriftDetectionCheck": {
      "assembly": "@aws-cdk/aws-config",
      "base": "@aws-cdk/aws-config.ManagedRule",
      "docs": {
        "custom": {
          "resource": "AWS::Config::ConfigRule"
        },
        "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudformation-stack-drift-detection-check.html",
        "stability": "stable",
        "summary": "Checks whether your CloudFormation stacks' actual configuration differs, or has drifted, from its expected configuration."
      },
      "fqn": "@aws-cdk/aws-config.CloudFormationStackDriftDetectionCheck",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/managed-rules.ts",
          "line": 76
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-config.CloudFormationStackDriftDetectionCheckProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/managed-rules.ts",
        "line": 73
      },
      "name": "CloudFormationStackDriftDetectionCheck"
    },
    "@aws-cdk/aws-config.CloudFormationStackDriftDetectionCheckProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a CloudFormationStackDriftDetectionCheck."
      },
      "fqn": "@aws-cdk/aws-config.CloudFormationStackDriftDetectionCheckProps",
      "interfaces": [
        "@aws-cdk/aws-config.RuleProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/managed-rules.ts",
        "line": 46
      },
      "name": "CloudFormationStackDriftDetectionCheckProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to check only the stack where this rule is deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/managed-rules.ts",
            "line": 52
          },
          "name": "ownStackOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role will be created",
            "remarks": "It must have permissions to detect drift\nfor AWS CloudFormation stacks. Ensure to attach `config.amazonaws.com` trusted\npermissions and `ReadOnlyAccess` policy permissions. For specific policy permissions,\nrefer to https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html.",
            "stability": "stable",
            "summary": "The IAM role to use for this rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/managed-rules.ts",
            "line": 62
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CloudFormationStackNotificationCheck": {
      "assembly": "@aws-cdk/aws-config",
      "base": "@aws-cdk/aws-config.ManagedRule",
      "docs": {
        "custom": {
          "resource": "AWS::Config::ConfigRule"
        },
        "remarks": "Optionally checks whether specified SNS topics are used.",
        "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudformation-stack-notification-check.html",
        "stability": "stable",
        "summary": "Checks whether your CloudFormation stacks are sending event notifications to a SNS topic."
      },
      "fqn": "@aws-cdk/aws-config.CloudFormationStackNotificationCheck",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/managed-rules.ts",
          "line": 117
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-config.CloudFormationStackNotificationCheckProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/managed-rules.ts",
        "line": 116
      },
      "name": "CloudFormationStackNotificationCheck"
    },
    "@aws-cdk/aws-config.CloudFormationStackNotificationCheckProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a CloudFormationStackNotificationCheck."
      },
      "fqn": "@aws-cdk/aws-config.CloudFormationStackNotificationCheckProps",
      "interfaces": [
        "@aws-cdk/aws-config.RuleProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/managed-rules.ts",
        "line": 99
      },
      "name": "CloudFormationStackNotificationCheckProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No topics.",
            "remarks": "At most 5 topics.",
            "stability": "stable",
            "summary": "A list of allowed topics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/managed-rules.ts",
            "line": 105
          },
          "name": "topics",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-sns.ITopic"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CustomRule": {
      "assembly": "@aws-cdk/aws-config",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::Config::ConfigRule"
        },
        "stability": "stable",
        "summary": "A new custom rule."
      },
      "fqn": "@aws-cdk/aws-config.CustomRule",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/rule.ts",
          "line": 325
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-config.CustomRuleProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-config.IRule"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 312
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports an existing rule."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 90
          },
          "name": "fromConfigRuleName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the name of the rule."
              },
              "name": "configRuleName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-config.IRule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines an EventBridge event rule which triggers for rule compliance events."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 61
          },
          "name": "onComplianceChange",
          "overrides": "@aws-cdk/aws-config.IRule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "remarks": "Use\n`rule.addEventPattern(pattern)` to specify a filter.",
            "stability": "stable",
            "summary": "Defines an EventBridge event rule which triggers for rule events."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 46
          },
          "name": "onEvent",
          "overrides": "@aws-cdk/aws-config.IRule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines an EventBridge event rule which triggers for rule re-evaluation status events."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 72
          },
          "name": "onReEvaluationStatus",
          "overrides": "@aws-cdk/aws-config.IRule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        }
      ],
      "name": "CustomRule",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The arn of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 317
          },
          "name": "configRuleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The compliance status of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 323
          },
          "name": "configRuleComplianceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The id of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 320
          },
          "name": "configRuleId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 314
          },
          "name": "configRuleName",
          "overrides": "@aws-cdk/aws-config.IRule",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 115
          },
          "name": "isCustomWithChanges",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 114
          },
          "name": "isManaged",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 113
          },
          "name": "ruleScope",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.RuleScope"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.CustomRuleProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a CustomRule."
      },
      "fqn": "@aws-cdk/aws-config.CustomRuleProps",
      "interfaces": [
        "@aws-cdk/aws-config.RuleProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 287
      },
      "name": "CustomRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Lambda function to run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 291
          },
          "name": "lambdaFunction",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to run the rule on configuration changes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 298
          },
          "name": "configurationChanges",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to run the rule on a fixed frequency."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 305
          },
          "name": "periodic",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.IRule": {
      "assembly": "@aws-cdk/aws-config",
      "docs": {
        "stability": "stable",
        "summary": "Interface representing an AWS Config rule."
      },
      "fqn": "@aws-cdk/aws-config.IRule",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 11
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Defines a EventBridge event rule which triggers for rule compliance events."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 28
          },
          "name": "onComplianceChange",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Use\n`rule.addEventPattern(pattern)` to specify a filter.",
            "stability": "stable",
            "summary": "Defines an EventBridge event rule which triggers for rule events."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 23
          },
          "name": "onEvent",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Defines a EventBridge event rule which triggers for rule re-evaluation status events."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 33
          },
          "name": "onReEvaluationStatus",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        }
      ],
      "name": "IRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 17
          },
          "name": "configRuleName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.ManagedRule": {
      "assembly": "@aws-cdk/aws-config",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::Config::ConfigRule"
        },
        "stability": "stable",
        "summary": "A new managed rule."
      },
      "fqn": "@aws-cdk/aws-config.ManagedRule",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/rule.ts",
          "line": 256
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-config.ManagedRuleProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-config.IRule"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 243
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports an existing rule."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 90
          },
          "name": "fromConfigRuleName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the name of the rule."
              },
              "name": "configRuleName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-config.IRule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines an EventBridge event rule which triggers for rule compliance events."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 61
          },
          "name": "onComplianceChange",
          "overrides": "@aws-cdk/aws-config.IRule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "remarks": "Use\n`rule.addEventPattern(pattern)` to specify a filter.",
            "stability": "stable",
            "summary": "Defines an EventBridge event rule which triggers for rule events."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 46
          },
          "name": "onEvent",
          "overrides": "@aws-cdk/aws-config.IRule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines an EventBridge event rule which triggers for rule re-evaluation status events."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 72
          },
          "name": "onReEvaluationStatus",
          "overrides": "@aws-cdk/aws-config.IRule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        }
      ],
      "name": "ManagedRule",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The arn of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 248
          },
          "name": "configRuleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The compliance status of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 254
          },
          "name": "configRuleComplianceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The id of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 251
          },
          "name": "configRuleId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 245
          },
          "name": "configRuleName",
          "overrides": "@aws-cdk/aws-config.IRule",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 115
          },
          "name": "isCustomWithChanges",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 114
          },
          "name": "isManaged",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 113
          },
          "name": "ruleScope",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.RuleScope"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.ManagedRuleIdentifiers": {
      "assembly": "@aws-cdk/aws-config",
      "docs": {
        "see": "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html",
        "stability": "stable",
        "summary": "Managed rules that are supported by AWS Config."
      },
      "fqn": "@aws-cdk/aws-config.ManagedRuleIdentifiers",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 397
      },
      "name": "ManagedRuleIdentifiers",
      "properties": [
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/access-keys-rotated.html",
            "stability": "stable",
            "summary": "Checks whether the active access keys are rotated within the number of days specified in maxAccessKeyAge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 414
          },
          "name": "ACCESS_KEYS_ROTATED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/account-part-of-organizations.html",
            "stability": "stable",
            "summary": "Checks whether AWS account is part of AWS Organizations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 419
          },
          "name": "ACCOUNT_PART_OF_ORGANIZATIONS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/acm-certificate-expiration-check.html",
            "stability": "stable",
            "summary": "Checks whether ACM Certificates in your account are marked for expiration within the specified number of days."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 424
          },
          "name": "ACM_CERTIFICATE_EXPIRATION_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-drop-invalid-header-enabled.html",
            "stability": "stable",
            "summary": "Checks if rule evaluates Application Load Balancers (ALBs) to ensure they are configured to drop http headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 429
          },
          "name": "ALB_HTTP_DROP_INVALID_HEADER_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-to-https-redirection-check.html",
            "stability": "stable",
            "summary": "Checks whether HTTP to HTTPS redirection is configured on all HTTP listeners of Application Load Balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 434
          },
          "name": "ALB_HTTP_TO_HTTPS_REDIRECTION_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/alb-waf-enabled.html",
            "stability": "stable",
            "summary": "Checks if Web Application Firewall (WAF) is enabled on Application Load Balancers (ALBs)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 439
          },
          "name": "ALB_WAF_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/api-gw-cache-enabled-and-encrypted.html",
            "stability": "stable",
            "summary": "Checks that all methods in Amazon API Gateway stages have caching enabled and encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 444
          },
          "name": "API_GW_CACHE_ENABLED_AND_ENCRYPTED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/api-gw-endpoint-type-check.html",
            "stability": "stable",
            "summary": "Checks that Amazon API Gateway APIs are of the type specified in the rule parameter endpointConfigurationType."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 449
          },
          "name": "API_GW_ENDPOINT_TYPE_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/api-gw-execution-logging-enabled.html",
            "stability": "stable",
            "summary": "Checks that all methods in Amazon API Gateway stage has logging enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 454
          },
          "name": "API_GW_EXECUTION_LOGGING_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/approved-amis-by-id.html",
            "stability": "stable",
            "summary": "Checks whether running instances are using specified AMIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 459
          },
          "name": "APPROVED_AMIS_BY_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/approved-amis-by-tag.html",
            "stability": "stable",
            "summary": "Checks whether running instances are using specified AMIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 464
          },
          "name": "APPROVED_AMIS_BY_TAG",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/autoscaling-group-elb-healthcheck-required.html",
            "stability": "stable",
            "summary": "Checks whether your Auto Scaling groups that are associated with a load balancer are using Elastic Load Balancing health checks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 470
          },
          "name": "AUTOSCALING_GROUP_ELB_HEALTHCHECK_REQUIRED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloud-trail-cloud-watch-logs-enabled.html",
            "stability": "stable",
            "summary": "Checks whether AWS CloudTrail trails are configured to send logs to Amazon CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 511
          },
          "name": "CLOUD_TRAIL_CLOUD_WATCH_LOGS_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudtrail-enabled.html",
            "stability": "stable",
            "summary": "Checks whether AWS CloudTrail is enabled in your AWS account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 516
          },
          "name": "CLOUD_TRAIL_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloud-trail-encryption-enabled.html",
            "stability": "stable",
            "summary": "Checks whether AWS CloudTrail is configured to use the server side encryption (SSE) AWS Key Management Service (AWS KMS) customer master key (CMK) encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 522
          },
          "name": "CLOUD_TRAIL_ENCRYPTION_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloud-trail-log-file-validation-enabled.html",
            "stability": "stable",
            "summary": "Checks whether AWS CloudTrail creates a signed digest file with logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 527
          },
          "name": "CLOUD_TRAIL_LOG_FILE_VALIDATION_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudformation-stack-drift-detection-check.html",
            "stability": "stable",
            "summary": "Checks whether an AWS CloudFormation stack's actual configuration differs, or has drifted, from it's expected configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 476
          },
          "name": "CLOUDFORMATION_STACK_DRIFT_DETECTION_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudformation-stack-notification-check.html",
            "stability": "stable",
            "summary": "Checks whether your CloudFormation stacks are sending event notifications to an SNS topic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 481
          },
          "name": "CLOUDFORMATION_STACK_NOTIFICATION_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudfront-default-root-object-configured.html",
            "stability": "stable",
            "summary": "Checks if an Amazon CloudFront distribution is configured to return a specific object that is the default root object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 486
          },
          "name": "CLOUDFRONT_DEFAULT_ROOT_OBJECT_CONFIGURED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudfront-origin-access-identity-enabled.html",
            "stability": "stable",
            "summary": "Checks that Amazon CloudFront distribution with Amazon S3 Origin type has Origin Access Identity (OAI) configured."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 491
          },
          "name": "CLOUDFRONT_ORIGIN_ACCESS_IDENTITY_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudfront-origin-failover-enabled.html",
            "stability": "stable",
            "summary": "Checks whether an origin group is configured for the distribution of at least 2 origins in the origin group for Amazon CloudFront."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 496
          },
          "name": "CLOUDFRONT_ORIGIN_FAILOVER_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudfront-sni-enabled.html",
            "stability": "stable",
            "summary": "Checks if Amazon CloudFront distributions are using a custom SSL certificate and are configured to use SNI to serve HTTPS requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 502
          },
          "name": "CLOUDFRONT_SNI_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudfront-viewer-policy-https.html",
            "stability": "stable",
            "summary": "Checks whether your Amazon CloudFront distributions use HTTPS (directly or via a redirection)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 506
          },
          "name": "CLOUDFRONT_VIEWER_POLICY_HTTPS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/multi-region-cloudtrail-enabled.html",
            "stability": "stable",
            "summary": "Checks that there is at least one multi-region AWS CloudTrail."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 996
          },
          "name": "CLOUDTRAIL_MULTI_REGION_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudtrail-s3-dataevents-enabled.html",
            "stability": "stable",
            "summary": "Checks whether at least one AWS CloudTrail trail is logging Amazon S3 data events for all S3 buckets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 532
          },
          "name": "CLOUDTRAIL_S3_DATAEVENTS_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudtrail-security-trail-enabled.html",
            "stability": "stable",
            "summary": "Checks that there is at least one AWS CloudTrail trail defined with security best practices."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 537
          },
          "name": "CLOUDTRAIL_SECURITY_TRAIL_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudwatch-alarm-action-check.html",
            "stability": "stable",
            "summary": "Checks whether CloudWatch alarms have at least one alarm action, one INSUFFICIENT_DATA action, or one OK action enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 543
          },
          "name": "CLOUDWATCH_ALARM_ACTION_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudwatch-alarm-resource-check.html",
            "stability": "stable",
            "summary": "Checks whether the specified resource type has a CloudWatch alarm for the specified metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 548
          },
          "name": "CLOUDWATCH_ALARM_RESOURCE_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudwatch-alarm-settings-check.html",
            "stability": "stable",
            "summary": "Checks whether CloudWatch alarms with the given metric name have the specified settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 553
          },
          "name": "CLOUDWATCH_ALARM_SETTINGS_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cloudwatch-log-group-encrypted.html",
            "stability": "stable",
            "summary": "Checks whether a log group in Amazon CloudWatch Logs is encrypted with a AWS Key Management Service (KMS) managed Customer Master Keys (CMK)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 559
          },
          "name": "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cmk-backing-key-rotation-enabled.html",
            "stability": "stable",
            "summary": "Checks that key rotation is enabled for each key and matches to the key ID of the customer created customer master key (CMK)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 565
          },
          "name": "CMK_BACKING_KEY_ROTATION_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/codebuild-project-envvar-awscred-check.html",
            "stability": "stable",
            "summary": "Checks whether the project contains environment variables AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 570
          },
          "name": "CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/codebuild-project-source-repo-url-check.html",
            "stability": "stable",
            "summary": "Checks whether the GitHub or Bitbucket source repository URL contains either personal access tokens or user name and password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 576
          },
          "name": "CODEBUILD_PROJECT_SOURCE_REPO_URL_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/codepipeline-deployment-count-check.html",
            "stability": "stable",
            "summary": "Checks whether the first deployment stage of the AWS CodePipeline performs more than one deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 581
          },
          "name": "CODEPIPELINE_DEPLOYMENT_COUNT_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/codepipeline-region-fanout-check.html",
            "stability": "stable",
            "summary": "Checks whether each stage in the AWS CodePipeline deploys to more than N times the number of the regions the AWS CodePipeline has deployed in all the previous combined stages, where N is the region fanout number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 588
          },
          "name": "CODEPIPELINE_REGION_FANOUT_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/cw-loggroup-retention-period-check.html",
            "stability": "stable",
            "summary": "Checks whether Amazon CloudWatch LogGroup retention period is set to specific number of days."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 593
          },
          "name": "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/dax-encryption-enabled.html",
            "stability": "stable",
            "summary": "Checks that DynamoDB Accelerator (DAX) clusters are encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 598
          },
          "name": "DAX_ENCRYPTION_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/dms-replication-not-public.html",
            "stability": "stable",
            "summary": "Checks whether AWS Database Migration Service replication instances are public."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 618
          },
          "name": "DMS_REPLICATION_NOT_PUBLIC",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/dynamodb-autoscaling-enabled.html",
            "stability": "stable",
            "summary": "Checks whether Auto Scaling or On-Demand is enabled on your DynamoDB tables and/or global secondary indexes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 623
          },
          "name": "DYNAMODB_AUTOSCALING_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/dynamodb-in-backup-plan.html",
            "stability": "stable",
            "summary": "Checks whether Amazon DynamoDB table is present in AWS Backup plans."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 628
          },
          "name": "DYNAMODB_IN_BACKUP_PLAN",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/dynamodb-pitr-enabled.html",
            "stability": "stable",
            "summary": "Checks that point in time recovery (PITR) is enabled for Amazon DynamoDB tables."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 633
          },
          "name": "DYNAMODB_PITR_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/dynamodb-table-encrypted-kms.html",
            "stability": "stable",
            "summary": "Checks whether Amazon DynamoDB table is encrypted with AWS Key Management Service (KMS)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 638
          },
          "name": "DYNAMODB_TABLE_ENCRYPTED_KMS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/dynamodb-table-encryption-enabled.html",
            "stability": "stable",
            "summary": "Checks whether the Amazon DynamoDB tables are encrypted and checks their status."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 643
          },
          "name": "DYNAMODB_TABLE_ENCRYPTION_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/dynamodb-throughput-limit-check.html",
            "stability": "stable",
            "summary": "Checks whether provisioned DynamoDB throughput is approaching the maximum limit for your account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 648
          },
          "name": "DYNAMODB_THROUGHPUT_LIMIT_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/encrypted-volumes.html",
            "stability": "stable",
            "summary": "Checks whether the EBS volumes that are in an attached state are encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 843
          },
          "name": "EBS_ENCRYPTED_VOLUMES",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ebs-in-backup-plan.html",
            "stability": "stable",
            "summary": "Checks if Amazon Elastic Block Store (Amazon EBS) volumes are added in backup plans of AWS Backup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 653
          },
          "name": "EBS_IN_BACKUP_PLAN",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ebs-optimized-instance.html",
            "stability": "stable",
            "summary": "Checks whether EBS optimization is enabled for your EC2 instances that can be EBS-optimized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 669
          },
          "name": "EBS_OPTIMIZED_INSTANCE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ebs-snapshot-public-restorable-check.html",
            "stability": "stable",
            "summary": "Checks whether Amazon Elastic Block Store snapshots are not publicly restorable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 674
          },
          "name": "EBS_SNAPSHOT_PUBLIC_RESTORABLE_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/desired-instance-tenancy.html",
            "stability": "stable",
            "summary": "Checks instances for specified tenancy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 608
          },
          "name": "EC2_DESIRED_INSTANCE_TENANCY",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/desired-instance-type.html",
            "stability": "stable",
            "summary": "Checks whether your EC2 instances are of the specified instance types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 613
          },
          "name": "EC2_DESIRED_INSTANCE_TYPE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ec2-ebs-encryption-by-default.html",
            "stability": "stable",
            "summary": "Check that Amazon Elastic Block Store (EBS) encryption is enabled by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 664
          },
          "name": "EC2_EBS_ENCRYPTION_BY_DEFAULT",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ec2-imdsv2-check.html",
            "stability": "stable",
            "summary": "Checks whether your Amazon Elastic Compute Cloud (Amazon EC2) instance metadata version is configured with Instance Metadata Service Version 2 (IMDSv2)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 777
          },
          "name": "EC2_IMDSV2_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ec2-instance-detailed-monitoring-enabled.html",
            "stability": "stable",
            "summary": "Checks whether detailed monitoring is enabled for EC2 instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 679
          },
          "name": "EC2_INSTANCE_DETAILED_MONITORING_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ec2-instance-managed-by-systems-manager.html",
            "stability": "stable",
            "summary": "Checks whether the Amazon EC2 instances in your account are managed by AWS Systems Manager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 684
          },
          "name": "EC2_INSTANCE_MANAGED_BY_SSM",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ec2-instance-no-public-ip.html",
            "stability": "stable",
            "summary": "Checks whether Amazon Elastic Compute Cloud (Amazon EC2) instances have a public IP association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 689
          },
          "name": "EC2_INSTANCE_NO_PUBLIC_IP",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ec2-instances-in-vpc.html",
            "stability": "stable",
            "summary": "Checks whether your EC2 instances belong to a virtual private cloud (VPC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 694
          },
          "name": "EC2_INSTANCES_IN_VPC",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ec2-managedinstance-applications-blacklisted.html",
            "stability": "stable",
            "summary": "Checks that none of the specified applications are installed on the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 699
          },
          "name": "EC2_MANAGED_INSTANCE_APPLICATIONS_BLOCKED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ec2-managedinstance-applications-required.html",
            "stability": "stable",
            "summary": "Checks whether all of the specified applications are installed on the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 704
          },
          "name": "EC2_MANAGED_INSTANCE_APPLICATIONS_REQUIRED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ec2-managedinstance-association-compliance-status-check.html",
            "stability": "stable",
            "summary": "Checks whether the compliance status of AWS Systems Manager association compliance is COMPLIANT or NON_COMPLIANT after the association execution on the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 710
          },
          "name": "EC2_MANAGED_INSTANCE_ASSOCIATION_COMPLIANCE_STATUS_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ec2-managedinstance-inventory-blacklisted.html",
            "stability": "stable",
            "summary": "Checks whether instances managed by AWS Systems Manager are configured to collect blocked inventory types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 715
          },
          "name": "EC2_MANAGED_INSTANCE_INVENTORY_BLOCKED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ec2-managedinstance-patch-compliance-status-check.html",
            "stability": "stable",
            "summary": "Checks whether the compliance status of the Amazon EC2 Systems Manager patch compliance is COMPLIANT or NON_COMPLIANT after the patch installation on the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 721
          },
          "name": "EC2_MANAGED_INSTANCE_PATCH_COMPLIANCE_STATUS_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ec2-managedinstance-platform-check.html",
            "stability": "stable",
            "summary": "Checks whether EC2 managed instances have the desired configurations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 726
          },
          "name": "EC2_MANAGED_INSTANCE_PLATFORM_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ec2-security-group-attached-to-eni.html",
            "stability": "stable",
            "summary": "Checks that security groups are attached to Amazon Elastic Compute Cloud (Amazon EC2) instances or to an elastic network interface."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 732
          },
          "name": "EC2_SECURITY_GROUP_ATTACHED_TO_ENI",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/restricted-ssh.html",
            "stability": "stable",
            "summary": "Checks whether the incoming SSH traffic for the security groups is accessible."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1092
          },
          "name": "EC2_SECURITY_GROUPS_INCOMING_SSH_DISABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/restricted-common-ports.html",
            "stability": "stable",
            "summary": "Checks whether the security groups in use do not allow unrestricted incoming TCP traffic to the specified ports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1087
          },
          "name": "EC2_SECURITY_GROUPS_RESTRICTED_INCOMING_TRAFFIC",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ec2-stopped-instance.html",
            "stability": "stable",
            "summary": "Checks whether there are instances stopped for more than the allowed number of days."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 737
          },
          "name": "EC2_STOPPED_INSTANCE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/ec2-volume-inuse-check.html",
            "stability": "stable",
            "summary": "Checks whether EBS volumes are attached to EC2 instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 742
          },
          "name": "EC2_VOLUME_INUSE_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/efs-encrypted-check.html",
            "stability": "stable",
            "summary": "hecks whether Amazon Elastic File System (Amazon EFS) is configured to encrypt the file data using AWS Key Management Service (AWS KMS)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 748
          },
          "name": "EFS_ENCRYPTED_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/efs-in-backup-plan.html",
            "stability": "stable",
            "summary": "Checks whether Amazon Elastic File System (Amazon EFS) file systems are added in the backup plans of AWS Backup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 659
          },
          "name": "EFS_IN_BACKUP_PLAN",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/eip-attached.html",
            "stability": "stable",
            "summary": "Checks whether all Elastic IP addresses that are allocated to a VPC are attached to EC2 instances or in-use elastic network interfaces (ENIs)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 754
          },
          "name": "EIP_ATTACHED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/eks-endpoint-no-public-access.html",
            "stability": "stable",
            "summary": "Checks whether Amazon Elastic Kubernetes Service (Amazon EKS) endpoint is not publicly accessible."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 782
          },
          "name": "EKS_ENDPOINT_NO_PUBLIC_ACCESS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/eks-secrets-encrypted.html",
            "stability": "stable",
            "summary": "Checks whether Amazon Elastic Kubernetes Service clusters are configured to have Kubernetes secrets encrypted using AWS Key Management Service (KMS) keys."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 788
          },
          "name": "EKS_SECRETS_ENCRYPTED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/elasticache-redis-cluster-automatic-backup-check.html",
            "stability": "stable",
            "summary": "Check if the Amazon ElastiCache Redis clusters have automatic backup turned on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 771
          },
          "name": "ELASTICACHE_REDIS_CLUSTER_AUTOMATIC_BACKUP_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/elasticsearch-encrypted-at-rest.html",
            "stability": "stable",
            "summary": "Checks whether Amazon Elasticsearch Service (Amazon ES) domains have encryption at rest configuration enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 760
          },
          "name": "ELASTICSEARCH_ENCRYPTED_AT_REST",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/elasticsearch-in-vpc-only.html",
            "stability": "stable",
            "summary": "Checks whether Amazon Elasticsearch Service (Amazon ES) domains are in Amazon Virtual Private Cloud (Amazon VPC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 766
          },
          "name": "ELASTICSEARCH_IN_VPC_ONLY",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/elasticsearch-node-to-node-encryption-check.html",
            "stability": "stable",
            "summary": "Check that Amazon ElasticSearch Service nodes are encrypted end to end."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 793
          },
          "name": "ELASTICSEARCH_NODE_TO_NODE_ENCRYPTION_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/elb-acm-certificate-required.html",
            "stability": "stable",
            "summary": "Checks whether the Classic Load Balancers use SSL certificates provided by AWS Certificate Manager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 808
          },
          "name": "ELB_ACM_CERTIFICATE_REQUIRED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/elb-cross-zone-load-balancing-enabled.html",
            "stability": "stable",
            "summary": "Checks if cross-zone load balancing is enabled for the Classic Load Balancers (CLBs)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 798
          },
          "name": "ELB_CROSS_ZONE_LOAD_BALANCING_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/elb-custom-security-policy-ssl-check.html",
            "stability": "stable",
            "summary": "Checks whether your Classic Load Balancer SSL listeners are using a custom policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 813
          },
          "name": "ELB_CUSTOM_SECURITY_POLICY_SSL_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/elb-deletion-protection-enabled.html",
            "stability": "stable",
            "summary": "Checks whether Elastic Load Balancing has deletion protection enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 818
          },
          "name": "ELB_DELETION_PROTECTION_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/elb-logging-enabled.html",
            "stability": "stable",
            "summary": "Checks whether the Application Load Balancer and the Classic Load Balancer have logging enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 823
          },
          "name": "ELB_LOGGING_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/elb-predefined-security-policy-ssl-check.html",
            "stability": "stable",
            "summary": "Checks whether your Classic Load Balancer SSL listeners are using a predefined policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 828
          },
          "name": "ELB_PREDEFINED_SECURITY_POLICY_SSL_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/elb-tls-https-listeners-only.html",
            "stability": "stable",
            "summary": "Checks whether your Classic Load Balancer is configured with SSL or HTTPS listeners."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 803
          },
          "name": "ELB_TLS_HTTPS_LISTENERS_ONLY",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/emr-kerberos-enabled.html",
            "stability": "stable",
            "summary": "Checks that Amazon EMR clusters have Kerberos enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 833
          },
          "name": "EMR_KERBEROS_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/emr-master-no-public-ip.html",
            "stability": "stable",
            "summary": "Checks whether Amazon Elastic MapReduce (EMR) clusters' master nodes have public IPs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 838
          },
          "name": "EMR_MASTER_NO_PUBLIC_IP",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/fms-security-group-audit-policy-check.html",
            "stability": "stable",
            "summary": "Checks whether the security groups associated inScope resources are compliant with the master security groups at each rule level based on allowSecurityGroup and denySecurityGroup flag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 849
          },
          "name": "FMS_SECURITY_GROUP_AUDIT_POLICY_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/fms-security-group-content-check.html",
            "stability": "stable",
            "summary": "Checks whether AWS Firewall Manager created security groups content is the same as the master security groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 854
          },
          "name": "FMS_SECURITY_GROUP_CONTENT_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/fms-security-group-resource-association-check.html",
            "stability": "stable",
            "summary": "Checks whether Amazon EC2 or an elastic network interface is associated with AWS Firewall Manager security groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 859
          },
          "name": "FMS_SECURITY_GROUP_RESOURCE_ASSOCIATION_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/fms-shield-resource-policy-check.html",
            "stability": "stable",
            "summary": "Checks whether an Application Load Balancer, Amazon CloudFront distributions, Elastic Load Balancer or Elastic IP has AWS Shield protection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 865
          },
          "name": "FMS_SHIELD_RESOURCE_POLICY_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/fms-webacl-resource-policy-check.html",
            "stability": "stable",
            "summary": "Checks whether the web ACL is associated with an Application Load Balancer, API Gateway stage, or Amazon CloudFront distributions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 871
          },
          "name": "FMS_WEBACL_RESOURCE_POLICY_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "The correct priority is decided by the rank of the rule groups in the ruleGroups parameter.",
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/fms-webacl-rulegroup-association-check.html",
            "stability": "stable",
            "summary": "Checks that the rule groups associate with the web ACL at the correct priority."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 877
          },
          "name": "FMS_WEBACL_RULEGROUP_ASSOCIATION_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "If you provide an AWS account for centralization,\nthe rule evaluates the Amazon GuardDuty results in the centralized account.",
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/guardduty-enabled-centralized.html",
            "stability": "stable",
            "summary": "Checks whether Amazon GuardDuty is enabled in your AWS account and region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 883
          },
          "name": "GUARDDUTY_ENABLED_CENTRALIZED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/guardduty-non-archived-findings.html",
            "stability": "stable",
            "summary": "Checks whether the Amazon GuardDuty has findings that are non archived."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 888
          },
          "name": "GUARDDUTY_NON_ARCHIVED_FINDINGS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/iam-customer-policy-blocked-kms-actions.html",
            "stability": "stable",
            "summary": "Checks that the managed AWS Identity and Access Management policies that you create do not allow blocked actions on all AWS AWS KMS keys."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 409
          },
          "name": "IAM_CUSTOMER_POLICY_BLOCKED_KMS_ACTIONS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/iam-group-has-users-check.html",
            "stability": "stable",
            "summary": "Checks whether IAM groups have at least one IAM user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 898
          },
          "name": "IAM_GROUP_HAS_USERS_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/iam-inline-policy-blocked-kms-actions.html",
            "stability": "stable",
            "summary": "Checks that the inline policies attached to your AWS Identity and Access Management users, roles, and groups do not allow blocked actions on all AWS Key Management Service keys."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 403
          },
          "name": "IAM_INLINE_POLICY_BLOCKED_KMS_ACTIONS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/iam-no-inline-policy-check.html",
            "stability": "stable",
            "summary": "Checks that inline policy feature is not in use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 893
          },
          "name": "IAM_NO_INLINE_POLICY_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/iam-password-policy.html",
            "stability": "stable",
            "summary": "Checks whether the account password policy for IAM users meets the specified requirements indicated in the parameters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 904
          },
          "name": "IAM_PASSWORD_POLICY",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/iam-policy-blacklisted-check.html",
            "stability": "stable",
            "summary": "Checks whether for each IAM resource, a policy ARN in the input parameter is attached to the IAM resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 909
          },
          "name": "IAM_POLICY_BLOCKED_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/iam-policy-in-use.html",
            "stability": "stable",
            "summary": "Checks whether the IAM policy ARN is attached to an IAM user, or an IAM group with one or more IAM users, or an IAM role with one or more trusted entity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 915
          },
          "name": "IAM_POLICY_IN_USE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/iam-policy-no-statements-with-admin-access.html",
            "stability": "stable",
            "summary": "Checks the IAM policies that you create for Allow statements that grant permissions to all actions on all resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 920
          },
          "name": "IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/iam-role-managed-policy-check.html",
            "stability": "stable",
            "summary": "Checks that AWS Identity and Access Management (IAM) policies in a list of policies are attached to all AWS roles."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 925
          },
          "name": "IAM_ROLE_MANAGED_POLICY_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/iam-root-access-key-check.html",
            "stability": "stable",
            "summary": "Checks whether the root user access key is available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 930
          },
          "name": "IAM_ROOT_ACCESS_KEY_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/iam-user-group-membership-check.html",
            "stability": "stable",
            "summary": "Checks whether IAM users are members of at least one IAM group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 935
          },
          "name": "IAM_USER_GROUP_MEMBERSHIP_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/iam-user-mfa-enabled.html",
            "stability": "stable",
            "summary": "Checks whether the AWS Identity and Access Management users have multi-factor authentication (MFA) enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 940
          },
          "name": "IAM_USER_MFA_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "IAM users must inherit permissions from IAM groups or roles.",
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/iam-user-no-policies-check.html",
            "stability": "stable",
            "summary": "Checks that none of your IAM users have policies attached."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 945
          },
          "name": "IAM_USER_NO_POLICIES_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/iam-user-unused-credentials-check.html",
            "stability": "stable",
            "summary": "Checks whether your AWS Identity and Access Management (IAM) users have passwords or active access keys that have not been used within the specified number of days you provided."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 951
          },
          "name": "IAM_USER_UNUSED_CREDENTIALS_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/internet-gateway-authorized-vpc-only.html",
            "stability": "stable",
            "summary": "Checks that Internet gateways (IGWs) are only attached to an authorized Amazon Virtual Private Cloud (VPCs)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 956
          },
          "name": "INTERNET_GATEWAY_AUTHORIZED_VPC_ONLY",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/kms-cmk-not-scheduled-for-deletion.html",
            "stability": "stable",
            "summary": "Checks whether customer master keys (CMKs) are not scheduled for deletion in AWS Key Management Service (KMS)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 961
          },
          "name": "KMS_CMK_NOT_SCHEDULED_FOR_DELETION",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/lambda-concurrency-check.html",
            "stability": "stable",
            "summary": "Checks whether the AWS Lambda function is configured with function-level concurrent execution limit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 966
          },
          "name": "LAMBDA_CONCURRENCY_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/lambda-dlq-check.html",
            "stability": "stable",
            "summary": "Checks whether an AWS Lambda function is configured with a dead-letter queue."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 971
          },
          "name": "LAMBDA_DLQ_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/lambda-function-public-access-prohibited.html",
            "stability": "stable",
            "summary": "Checks whether the AWS Lambda function policy attached to the Lambda resource prohibits public access."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 976
          },
          "name": "LAMBDA_FUNCTION_PUBLIC_ACCESS_PROHIBITED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/lambda-function-settings-check.html",
            "stability": "stable",
            "summary": "Checks that the lambda function settings for runtime, role, timeout, and memory size match the expected values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 981
          },
          "name": "LAMBDA_FUNCTION_SETTINGS_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/lambda-inside-vpc.html",
            "stability": "stable",
            "summary": "Checks whether an AWS Lambda function is in an Amazon Virtual Private Cloud."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 986
          },
          "name": "LAMBDA_INSIDE_VPC",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/mfa-enabled-for-iam-console-access.html",
            "stability": "stable",
            "summary": "Checks whether AWS Multi-Factor Authentication (MFA) is enabled for all IAM users that use a console password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 991
          },
          "name": "MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/rds-cluster-deletion-protection-enabled.html",
            "stability": "stable",
            "summary": "Checks if an Amazon Relational Database Service (Amazon RDS) cluster has deletion protection enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1001
          },
          "name": "RDS_CLUSTER_DELETION_PROTECTION_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/db-instance-backup-enabled.html",
            "stability": "stable",
            "summary": "Checks whether RDS DB instances have backups enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 603
          },
          "name": "RDS_DB_INSTANCE_BACKUP_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/rds-enhanced-monitoring-enabled.html",
            "stability": "stable",
            "summary": "Checks whether enhanced monitoring is enabled for Amazon Relational Database Service (Amazon RDS) instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1026
          },
          "name": "RDS_ENHANCED_MONITORING_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/rds-in-backup-plan.html",
            "stability": "stable",
            "summary": "Checks whether Amazon RDS database is present in back plans of AWS Backup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1041
          },
          "name": "RDS_IN_BACKUP_PLAN",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/rds-instance-deletion-protection-enabled.html",
            "stability": "stable",
            "summary": "Checks if an Amazon Relational Database Service (Amazon RDS) instance has deletion protection enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1006
          },
          "name": "RDS_INSTANCE_DELETION_PROTECTION_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/rds-instance-iam-authentication-enabled.html",
            "stability": "stable",
            "summary": "Checks if an Amazon RDS instance has AWS Identity and Access Management (IAM) authentication enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1011
          },
          "name": "RDS_INSTANCE_IAM_AUTHENTICATION_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/rds-instance-public-access-check.html",
            "stability": "stable",
            "summary": "Check whether the Amazon Relational Database Service instances are not publicly accessible."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1046
          },
          "name": "RDS_INSTANCE_PUBLIC_ACCESS_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/rds-logging-enabled.html",
            "stability": "stable",
            "summary": "Checks that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1016
          },
          "name": "RDS_LOGGING_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/rds-multi-az-support.html",
            "stability": "stable",
            "summary": "Checks whether high availability is enabled for your RDS DB instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1051
          },
          "name": "RDS_MULTI_AZ_SUPPORT",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/rds-snapshot-encrypted.html",
            "stability": "stable",
            "summary": "Checks whether Amazon Relational Database Service (Amazon RDS) DB snapshots are encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1031
          },
          "name": "RDS_SNAPSHOT_ENCRYPTED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/rds-snapshots-public-prohibited.html",
            "stability": "stable",
            "summary": "Checks if Amazon Relational Database Service (Amazon RDS) snapshots are public."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1056
          },
          "name": "RDS_SNAPSHOTS_PUBLIC_PROHIBITED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/rds-storage-encrypted.html",
            "stability": "stable",
            "summary": "Checks whether storage encryption is enabled for your RDS DB instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1061
          },
          "name": "RDS_STORAGE_ENCRYPTED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/redshift-backup-enabled.html",
            "stability": "stable",
            "summary": "Checks that Amazon Redshift automated snapshots are enabled for clusters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1021
          },
          "name": "REDSHIFT_BACKUP_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/redshift-cluster-configuration-check.html",
            "stability": "stable",
            "summary": "Checks whether Amazon Redshift clusters have the specified settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1066
          },
          "name": "REDSHIFT_CLUSTER_CONFIGURATION_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/redshift-cluster-maintenancesettings-check.html",
            "stability": "stable",
            "summary": "Checks whether Amazon Redshift clusters have the specified maintenance settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1071
          },
          "name": "REDSHIFT_CLUSTER_MAINTENANCE_SETTINGS_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/redshift-cluster-public-access-check.html",
            "stability": "stable",
            "summary": "Checks whether Amazon Redshift clusters are not publicly accessible."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1076
          },
          "name": "REDSHIFT_CLUSTER_PUBLIC_ACCESS_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/redshift-require-tls-ssl.html",
            "stability": "stable",
            "summary": "Checks whether Amazon Redshift clusters require TLS/SSL encryption to connect to SQL clients."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1036
          },
          "name": "REDSHIFT_REQUIRE_TLS_SSL",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "For example, you can check whether your Amazon EC2 instances have the CostCenter tag.",
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/required-tags.html",
            "stability": "stable",
            "summary": "Checks whether your resources have the tags that you specify."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1082
          },
          "name": "REQUIRED_TAGS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/root-account-hardware-mfa-enabled.html",
            "stability": "stable",
            "summary": "Checks whether your AWS account is enabled to use multi-factor authentication (MFA) hardware device to sign in with root credentials."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1098
          },
          "name": "ROOT_ACCOUNT_HARDWARE_MFA_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/root-account-mfa-enabled.html",
            "stability": "stable",
            "summary": "Checks whether users of your AWS account require a multi-factor authentication (MFA) device to sign in with root credentials."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1104
          },
          "name": "ROOT_ACCOUNT_MFA_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/s3-account-level-public-access-blocks.html",
            "stability": "stable",
            "summary": "Checks whether the required public access block settings are configured from account level."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1130
          },
          "name": "S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-blacklisted-actions-prohibited.html",
            "stability": "stable",
            "summary": "Checks that the Amazon Simple Storage Service bucket policy does not allow blocked bucket-level and object-level actions on resources in the bucket for principals from other AWS accounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1137
          },
          "name": "S3_BUCKET_BLOCKED_ACTIONS_PROHIBITED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-default-lock-enabled.html",
            "stability": "stable",
            "summary": "Checks whether Amazon Simple Storage Service (Amazon S3) bucket has lock enabled, by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1109
          },
          "name": "S3_BUCKET_DEFAULT_LOCK_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-logging-enabled.html",
            "stability": "stable",
            "summary": "Checks whether logging is enabled for your S3 buckets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1148
          },
          "name": "S3_BUCKET_LOGGING_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy-grantee-check.html",
            "stability": "stable",
            "summary": "Checks that the access granted by the Amazon S3 bucket is restricted by any of the AWS principals, federated users, service principals, IP addresses, or VPCs that you provide."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1154
          },
          "name": "S3_BUCKET_POLICY_GRANTEE_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-policy-not-more-permissive.html",
            "stability": "stable",
            "summary": "Verifies that your Amazon Simple Storage Service bucket policies do not allow other inter-account permissions than the control Amazon S3 bucket policy provided."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1143
          },
          "name": "S3_BUCKET_POLICY_NOT_MORE_PERMISSIVE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-public-read-prohibited.html",
            "stability": "stable",
            "summary": "Checks that your Amazon S3 buckets do not allow public read access."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1159
          },
          "name": "S3_BUCKET_PUBLIC_READ_PROHIBITED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-public-write-prohibited.html",
            "stability": "stable",
            "summary": "Checks that your Amazon S3 buckets do not allow public write access."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1164
          },
          "name": "S3_BUCKET_PUBLIC_WRITE_PROHIBITED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-replication-enabled.html",
            "stability": "stable",
            "summary": "Checks whether S3 buckets have cross-region replication enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1169
          },
          "name": "S3_BUCKET_REPLICATION_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-server-side-encryption-enabled.html",
            "stability": "stable",
            "summary": "Checks that your Amazon S3 bucket either has Amazon S3 default encryption enabled or that the S3 bucket policy explicitly denies put-object requests without server side encryption that uses AES-256 or AWS Key Management Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1176
          },
          "name": "S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-ssl-requests-only.html",
            "stability": "stable",
            "summary": "Checks whether S3 buckets have policies that require requests to use Secure Socket Layer (SSL)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1181
          },
          "name": "S3_BUCKET_SSL_REQUESTS_ONLY",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-versioning-enabled.html",
            "stability": "stable",
            "summary": "Checks whether versioning is enabled for your S3 buckets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1186
          },
          "name": "S3_BUCKET_VERSIONING_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/s3-default-encryption-kms.html",
            "stability": "stable",
            "summary": "Checks whether the Amazon Simple Storage Service (Amazon S3) buckets are encrypted with AWS Key Management Service (AWS KMS)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1115
          },
          "name": "S3_DEFAULT_ENCRYPTION_KMS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/sagemaker-endpoint-configuration-kms-key-configured.html",
            "stability": "stable",
            "summary": "Checks whether AWS Key Management Service (KMS) key is configured for an Amazon SageMaker endpoint configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1191
          },
          "name": "SAGEMAKER_ENDPOINT_CONFIGURATION_KMS_KEY_CONFIGURED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/sagemaker-notebook-instance-kms-key-configured.html",
            "stability": "stable",
            "summary": "Check whether an AWS Key Management Service (KMS) key is configured for SageMaker notebook instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1196
          },
          "name": "SAGEMAKER_NOTEBOOK_INSTANCE_KMS_KEY_CONFIGURED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/sagemaker-notebook-no-direct-internet-access.html",
            "stability": "stable",
            "summary": "Checks whether direct internet access is disabled for an Amazon SageMaker notebook instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1201
          },
          "name": "SAGEMAKER_NOTEBOOK_NO_DIRECT_INTERNET_ACCESS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/secretsmanager-rotation-enabled-check.html",
            "stability": "stable",
            "summary": "Checks whether AWS Secrets Manager secret has rotation enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1206
          },
          "name": "SECRETSMANAGER_ROTATION_ENABLED_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/secretsmanager-scheduled-rotation-success-check.html",
            "stability": "stable",
            "summary": "Checks whether AWS Secrets Manager secret rotation has rotated successfully as per the rotation schedule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1211
          },
          "name": "SECRETSMANAGER_SCHEDULED_ROTATION_SUCCESS_CHECK",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/securityhub-enabled.html",
            "stability": "stable",
            "summary": "Checks that AWS Security Hub is enabled for an AWS account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1120
          },
          "name": "SECURITYHUB_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/service-vpc-endpoint-enabled.html",
            "stability": "stable",
            "summary": "Checks whether Service Endpoint for the service provided in rule parameter is created for each Amazon VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1216
          },
          "name": "SERVICE_VPC_ENDPOINT_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/shield-advanced-enabled-autorenew.html",
            "stability": "stable",
            "summary": "Checks whether EBS volumes are attached to EC2 instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1221
          },
          "name": "SHIELD_ADVANCED_ENABLED_AUTO_RENEW",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/shield-drt-access.html",
            "stability": "stable",
            "summary": "Verify that DDoS response team (DRT) can access AWS account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1226
          },
          "name": "SHIELD_DRT_ACCESS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/sns-encrypted-kms.html",
            "stability": "stable",
            "summary": "Checks whether Amazon SNS topic is encrypted with AWS Key Management Service (AWS KMS)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1125
          },
          "name": "SNS_ENCRYPTED_KMS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "The rule returns NOT_APPLICABLE if the security group\nis not default.",
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/vpc-default-security-group-closed.html",
            "stability": "stable",
            "summary": "Checks that the default security group of any Amazon Virtual Private Cloud (VPC) does not allow inbound or outbound traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1233
          },
          "name": "VPC_DEFAULT_SECURITY_GROUP_CLOSED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/vpc-flow-logs-enabled.html",
            "stability": "stable",
            "summary": "Checks whether Amazon Virtual Private Cloud flow logs are found and enabled for Amazon VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1238
          },
          "name": "VPC_FLOW_LOGS_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/vpc-sg-open-only-to-authorized-ports.html",
            "stability": "stable",
            "summary": "Checks whether the security group with 0.0.0.0/0 of any Amazon Virtual Private Cloud (Amazon VPC) allows only specific inbound TCP or UDP traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1244
          },
          "name": "VPC_SG_OPEN_ONLY_TO_AUTHORIZED_PORTS",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/vpc-vpn-2-tunnels-up.html",
            "stability": "stable",
            "summary": "Checks that both AWS Virtual Private Network tunnels provided by AWS Site-to-Site VPN are in UP status."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1250
          },
          "name": "VPC_VPN_2_TUNNELS_UP",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/waf-classic-logging-enabled.html",
            "stability": "stable",
            "summary": "Checks if logging is enabled on AWS Web Application Firewall (WAF) classic global web ACLs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1255
          },
          "name": "WAF_CLASSIC_LOGGING_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/wafv2-logging-enabled.html",
            "stability": "stable",
            "summary": "Checks whether logging is enabled on AWS Web Application Firewall (WAFV2) regional and global web access control list (ACLs)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1261
          },
          "name": "WAFV2_LOGGING_ENABLED",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.ManagedRuleProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a ManagedRule."
      },
      "fqn": "@aws-cdk/aws-config.ManagedRuleProps",
      "interfaces": [
        "@aws-cdk/aws-config.RuleProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 229
      },
      "name": "ManagedRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html",
            "stability": "stable",
            "summary": "The identifier of the AWS managed rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 235
          },
          "name": "identifier",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.MaximumExecutionFrequency": {
      "assembly": "@aws-cdk/aws-config",
      "docs": {
        "stability": "stable",
        "summary": "The maximum frequency at which the AWS Config rule runs evaluations."
      },
      "fqn": "@aws-cdk/aws-config.MaximumExecutionFrequency",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 158
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "1 hour."
          },
          "name": "ONE_HOUR"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "3 hours."
          },
          "name": "THREE_HOURS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "6 hours."
          },
          "name": "SIX_HOURS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "12 hours."
          },
          "name": "TWELVE_HOURS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "24 hours."
          },
          "name": "TWENTY_FOUR_HOURS"
        }
      ],
      "name": "MaximumExecutionFrequency"
    },
    "@aws-cdk/aws-config.ResourceType": {
      "assembly": "@aws-cdk/aws-config",
      "docs": {
        "see": "https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html",
        "stability": "stable",
        "summary": "Resources types that are supported by AWS Config."
      },
      "fqn": "@aws-cdk/aws-config.ResourceType",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 1271
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "A custom resource type to support future cases."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1451
          },
          "name": "of",
          "parameters": [
            {
              "name": "type",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-config.ResourceType"
            }
          },
          "static": true
        }
      ],
      "name": "ResourceType",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Certificate manager certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1373
          },
          "name": "ACM_CERTIFICATE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API Gateway REST API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1277
          },
          "name": "APIGATEWAY_REST_API",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API Gateway Stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1273
          },
          "name": "APIGATEWAY_STAGE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API Gatewayv2 API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1279
          },
          "name": "APIGATEWAYV2_API",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API Gatewayv2 Stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1275
          },
          "name": "APIGATEWAYV2_STAGE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1365
          },
          "name": "AUTO_SCALING_GROUP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Auto Scaling launch configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1367
          },
          "name": "AUTO_SCALING_LAUNCH_CONFIGURATION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Auto Scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1369
          },
          "name": "AUTO_SCALING_POLICY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Auto Scaling scheduled action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1371
          },
          "name": "AUTO_SCALING_SCHEDULED_ACTION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS CloudFormation stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1375
          },
          "name": "CLOUDFORMATION_STACK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon CloudFront Distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1281
          },
          "name": "CLOUDFRONT_DISTRIBUTION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon CloudFront streaming distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1283
          },
          "name": "CLOUDFRONT_STREAMING_DISTRIBUTION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS CloudTrail trail."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1377
          },
          "name": "CLOUDTRAIL_TRAIL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon CloudWatch Alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1285
          },
          "name": "CLOUDWATCH_ALARM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS CodeBuild project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1379
          },
          "name": "CODEBUILD_PROJECT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS CodePipeline pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1381
          },
          "name": "CODEPIPELINE_PIPELINE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon DynamoDB Table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1287
          },
          "name": "DYNAMODB_TABLE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Elastic Block Store (EBS) volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1289
          },
          "name": "EBS_VOLUME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon EC2 customer gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1349
          },
          "name": "EC2_CUSTOMER_GATEWAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "EC2 Egress only internet gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1301
          },
          "name": "EC2_EGRESS_ONLY_INTERNET_GATEWAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "EC2 Elastic IP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1293
          },
          "name": "EC2_EIP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "EC2 flow log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1303
          },
          "name": "EC2_FLOW_LOG",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "EC2 host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1291
          },
          "name": "EC2_HOST",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "EC2 instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1295
          },
          "name": "EC2_INSTANCE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon EC2 internet gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1351
          },
          "name": "EC2_INTERNET_GATEWAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "EC2 NAT gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1299
          },
          "name": "EC2_NAT_GATEWAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon EC2 network ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1353
          },
          "name": "EC2_NETWORK_ACL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon EC2 route table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1355
          },
          "name": "EC2_ROUTE_TABLE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "EC2 security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1297
          },
          "name": "EC2_SECURITY_GROUP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon EC2 subnet table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1357
          },
          "name": "EC2_SUBNET",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon EC2 VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1359
          },
          "name": "EC2_VPC",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "EC2 VPC endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1305
          },
          "name": "EC2_VPC_ENDPOINT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "EC2 VPC endpoint service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1307
          },
          "name": "EC2_VPC_ENDPOINT_SERVICE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "EC2 VPC peering connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1309
          },
          "name": "EC2_VPC_PEERING_CONNECTION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon EC2 VPN connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1361
          },
          "name": "EC2_VPN_CONNECTION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon EC2 VPN gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1363
          },
          "name": "EC2_VPN_GATEWAY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Elastic Beanstalk (EB) application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1383
          },
          "name": "ELASTIC_BEANSTALK_APPLICATION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Elastic Beanstalk (EB) application version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1385
          },
          "name": "ELASTIC_BEANSTALK_APPLICATION_VERSION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Elastic Beanstalk (EB) environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1387
          },
          "name": "ELASTIC_BEANSTALK_ENVIRONMENT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon ElasticSearch domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1311
          },
          "name": "ELASTICSEARCH_DOMAIN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS ELB classic load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1446
          },
          "name": "ELB_LOAD_BALANCER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS ELBv2 network load balancer or AWS ELBv2 application load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1448
          },
          "name": "ELBV2_LOAD_BALANCER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS IAM group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1391
          },
          "name": "IAM_GROUP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS IAM policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1395
          },
          "name": "IAM_POLICY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS IAM role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1393
          },
          "name": "IAM_ROLE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS IAM user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1389
          },
          "name": "IAM_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS KMS Key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1397
          },
          "name": "KMS_KEY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1399
          },
          "name": "LAMBDA_FUNCTION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon QLDB ledger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1313
          },
          "name": "QLDB_LEDGER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon RDS database cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1337
          },
          "name": "RDS_DB_CLUSTER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon RDS database cluster snapshot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1339
          },
          "name": "RDS_DB_CLUSTER_SNAPSHOT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon RDS database instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1327
          },
          "name": "RDS_DB_INSTANCE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon RDS database security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1329
          },
          "name": "RDS_DB_SECURITY_GROUP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon RDS database snapshot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1331
          },
          "name": "RDS_DB_SNAPSHOT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon RDS database subnet group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1333
          },
          "name": "RDS_DB_SUBNET_GROUP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon RDS event subscription."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1335
          },
          "name": "RDS_EVENT_SUBSCRIPTION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon Redshift cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1315
          },
          "name": "REDSHIFT_CLUSTER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon Redshift cluster parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1317
          },
          "name": "REDSHIFT_CLUSTER_PARAMETER_GROUP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon Redshift cluster security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1319
          },
          "name": "REDSHIFT_CLUSTER_SECURITY_GROUP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon Redshift cluster snapshot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1321
          },
          "name": "REDSHIFT_CLUSTER_SNAPSHOT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon Redshift cluster subnet group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1323
          },
          "name": "REDSHIFT_CLUSTER_SUBNET_GROUP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon Redshift event subscription."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1325
          },
          "name": "REDSHIFT_EVENT_SUBSCRIPTION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon S3 account public access block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1347
          },
          "name": "S3_ACCOUNT_PUBLIC_ACCESS_BLOCK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon S3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1345
          },
          "name": "S3_BUCKET",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Secrets Manager secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1401
          },
          "name": "SECRETS_MANAGER_SECRET",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Service Catalog CloudFormation product."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1403
          },
          "name": "SERVICE_CATALOG_CLOUDFORMATION_PRODUCT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Service Catalog CloudFormation provisioned product."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1405
          },
          "name": "SERVICE_CATALOG_CLOUDFORMATION_PROVISIONED_PRODUCT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Service Catalog portfolio."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1408
          },
          "name": "SERVICE_CATALOG_PORTFOLIO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Shield protection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1410
          },
          "name": "SHIELD_PROTECTION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Shield regional protection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1412
          },
          "name": "SHIELD_REGIONAL_PROTECTION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon SNS topic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1343
          },
          "name": "SNS_TOPIC",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Amazon SQS queue."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1341
          },
          "name": "SQS_QUEUE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Systems Manager association compliance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1418
          },
          "name": "SYSTEMS_MANAGER_ASSOCIATION_COMPLIANCE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Systems Manager file data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1420
          },
          "name": "SYSTEMS_MANAGER_FILE_DATA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Systems Manager managed instance inventory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1414
          },
          "name": "SYSTEMS_MANAGER_MANAGED_INSTANCE_INVENTORY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS Systems Manager patch compliance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1416
          },
          "name": "SYSTEMS_MANAGER_PATCH_COMPLIANCE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS WAF rate based rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1422
          },
          "name": "WAF_RATE_BASED_RULE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS WAF regional rate based rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1430
          },
          "name": "WAF_REGIONAL_RATE_BASED_RULE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS WAF regional rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1432
          },
          "name": "WAF_REGIONAL_RULE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS WAF regional rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1436
          },
          "name": "WAF_REGIONAL_RULE_GROUP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS WAF web ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1434
          },
          "name": "WAF_REGIONAL_WEB_ACL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS WAF rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1424
          },
          "name": "WAF_RULE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS WAF rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1428
          },
          "name": "WAF_RULE_GROUP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS WAF web ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1426
          },
          "name": "WAF_WEB_ACL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS WAFv2 managed rule set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1442
          },
          "name": "WAFV2_MANAGED_RULE_SET",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS WAFv2 rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1440
          },
          "name": "WAFV2_RULE_GROUP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS WAFv2 web ACL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1438
          },
          "name": "WAFV2_WEB_ACL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "AWS X-Ray encryption configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1444
          },
          "name": "XRAY_ENCRYPTION_CONFIGURATION",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.ResourceType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Valid value of resource type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 1458
          },
          "name": "complianceResourceType",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.RuleProps": {
      "assembly": "@aws-cdk/aws-config",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a new rule."
      },
      "fqn": "@aws-cdk/aws-config.RuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 189
      },
      "name": "RuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- CloudFormation generated name",
            "stability": "stable",
            "summary": "A name for the AWS Config rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 195
          },
          "name": "configRuleName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No description",
            "stability": "stable",
            "summary": "A description about this AWS Config rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 202
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No input parameters",
            "stability": "stable",
            "summary": "Input parameter values that are passed to the AWS Config rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 209
          },
          "name": "inputParameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "MaximumExecutionFrequency.TWENTY_FOUR_HOURS",
            "stability": "stable",
            "summary": "The maximum frequency at which the AWS Config rule runs evaluations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 216
          },
          "name": "maximumExecutionFrequency",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.MaximumExecutionFrequency"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- evaluations for the rule are triggered when any resource in the recording group changes.",
            "stability": "stable",
            "summary": "Defines which resources trigger an evaluation for an AWS Config rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 223
          },
          "name": "ruleScope",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-config.RuleScope"
          }
        }
      ]
    },
    "@aws-cdk/aws-config.RuleScope": {
      "assembly": "@aws-cdk/aws-config",
      "docs": {
        "stability": "stable",
        "summary": "Determines which resources trigger an evaluation of an AWS Config rule."
      },
      "fqn": "@aws-cdk/aws-config.RuleScope",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 121
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "restricts scope of changes to a specific resource type or resource identifier."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 123
          },
          "name": "fromResource",
          "parameters": [
            {
              "name": "resourceType",
              "type": {
                "fqn": "@aws-cdk/aws-config.ResourceType"
              }
            },
            {
              "name": "resourceId",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-config.RuleScope"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "restricts scope of changes to specific resource types."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 127
          },
          "name": "fromResources",
          "parameters": [
            {
              "name": "resourceTypes",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-config.ResourceType"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-config.RuleScope"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "restricts scope of changes to a specific tag."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 131
          },
          "name": "fromTag",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-config.RuleScope"
            }
          },
          "static": true
        }
      ],
      "name": "RuleScope",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "tag key applied to resources that will trigger evaluation of a rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 142
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "ID of the only AWS resource that will trigger evaluation of a rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 139
          },
          "name": "resourceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Resource types that will trigger evaluation of a rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 136
          },
          "name": "resourceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-config.ResourceType"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "tag value applied to resources that will trigger evaluation of a rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 145
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    }
  },
  "version": "1.91.0",
  "fingerprint": "74kWLjviLjr6zN2K6Qg4SZibJ+yZeopdtBg7WeAeuc8="
}
