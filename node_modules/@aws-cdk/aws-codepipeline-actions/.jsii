{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "bundled": {
    "case": "1.6.3"
  },
  "dependencies": {
    "@aws-cdk/aws-cloudformation": "1.91.0",
    "@aws-cdk/aws-codebuild": "1.91.0",
    "@aws-cdk/aws-codecommit": "1.91.0",
    "@aws-cdk/aws-codedeploy": "1.91.0",
    "@aws-cdk/aws-codepipeline": "1.91.0",
    "@aws-cdk/aws-ec2": "1.91.0",
    "@aws-cdk/aws-ecr": "1.91.0",
    "@aws-cdk/aws-ecs": "1.91.0",
    "@aws-cdk/aws-events": "1.91.0",
    "@aws-cdk/aws-events-targets": "1.91.0",
    "@aws-cdk/aws-iam": "1.91.0",
    "@aws-cdk/aws-lambda": "1.91.0",
    "@aws-cdk/aws-s3": "1.91.0",
    "@aws-cdk/aws-servicecatalog": "1.91.0",
    "@aws-cdk/aws-sns": "1.91.0",
    "@aws-cdk/aws-sns-subscriptions": "1.91.0",
    "@aws-cdk/aws-stepfunctions": "1.91.0",
    "@aws-cdk/core": "1.91.0",
    "constructs": "^3.2.0"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-apigateway": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.APIGateway",
          "packageId": "Amazon.CDK.AWS.APIGateway"
        },
        "java": {
          "maven": {
            "artifactId": "apigateway",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.apigateway"
        },
        "js": {
          "npm": "@aws-cdk/aws-apigateway"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-apigateway",
          "module": "aws_cdk.aws_apigateway"
        }
      }
    },
    "@aws-cdk/aws-apigatewayv2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.APIGatewayv2",
          "packageId": "Amazon.CDK.AWS.APIGatewayv2"
        },
        "java": {
          "maven": {
            "artifactId": "apigatewayv2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.apigatewayv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-apigatewayv2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-apigatewayv2",
          "module": "aws_cdk.aws_apigatewayv2"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling",
          "packageId": "Amazon.CDK.AWS.AutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling",
          "module": "aws_cdk.aws_autoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-hooktargets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets",
          "packageId": "Amazon.CDK.AWS.AutoScaling.HookTargets"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-hooktargets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-hooktargets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-hooktargets",
          "module": "aws_cdk.aws_autoscaling_hooktargets"
        }
      }
    },
    "@aws-cdk/aws-batch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Batch",
          "packageId": "Amazon.CDK.AWS.Batch"
        },
        "java": {
          "maven": {
            "artifactId": "batch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.batch"
        },
        "js": {
          "npm": "@aws-cdk/aws-batch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-batch",
          "module": "aws_cdk.aws_batch"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudfront": {
      "submodules": {
        "@aws-cdk/aws-cloudfront.experimental": {
          "locationInModule": {
            "filename": "lib/index.ts",
            "line": 11
          }
        }
      },
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFront",
          "packageId": "Amazon.CDK.AWS.CloudFront"
        },
        "java": {
          "maven": {
            "artifactId": "cloudfront",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudfront"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudfront"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudfront",
          "module": "aws_cdk.aws_cloudfront"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codebuild": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeBuild",
          "packageId": "Amazon.CDK.AWS.CodeBuild"
        },
        "java": {
          "maven": {
            "artifactId": "codebuild",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codebuild"
        },
        "js": {
          "npm": "@aws-cdk/aws-codebuild"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codebuild",
          "module": "aws_cdk.aws_codebuild"
        }
      }
    },
    "@aws-cdk/aws-codecommit": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeCommit",
          "packageId": "Amazon.CDK.AWS.CodeCommit"
        },
        "java": {
          "maven": {
            "artifactId": "codecommit",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codecommit"
        },
        "js": {
          "npm": "@aws-cdk/aws-codecommit"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codecommit",
          "module": "aws_cdk.aws_codecommit"
        }
      }
    },
    "@aws-cdk/aws-codedeploy": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeDeploy",
          "packageId": "Amazon.CDK.AWS.CodeDeploy"
        },
        "java": {
          "maven": {
            "artifactId": "codedeploy",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codedeploy"
        },
        "js": {
          "npm": "@aws-cdk/aws-codedeploy"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codedeploy",
          "module": "aws_cdk.aws_codedeploy"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codepipeline": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodePipeline",
          "packageId": "Amazon.CDK.AWS.CodePipeline"
        },
        "java": {
          "maven": {
            "artifactId": "codepipeline",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codepipeline"
        },
        "js": {
          "npm": "@aws-cdk/aws-codepipeline"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codepipeline",
          "module": "aws_cdk.aws_codepipeline"
        }
      }
    },
    "@aws-cdk/aws-cognito": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Cognito",
          "packageId": "Amazon.CDK.AWS.Cognito"
        },
        "java": {
          "maven": {
            "artifactId": "cognito",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cognito"
        },
        "js": {
          "npm": "@aws-cdk/aws-cognito"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cognito",
          "module": "aws_cdk.aws_cognito"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-ecs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECS",
          "packageId": "Amazon.CDK.AWS.ECS"
        },
        "java": {
          "maven": {
            "artifactId": "ecs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecs"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecs",
          "module": "aws_cdk.aws_ecs"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancing": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancing"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancing",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancing"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancing"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancing",
          "module": "aws_cdk.aws_elasticloadbalancing"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancingv2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancingv2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancingv2",
          "module": "aws_cdk.aws_elasticloadbalancingv2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-events-targets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events.Targets",
          "packageId": "Amazon.CDK.AWS.Events.Targets"
        },
        "java": {
          "maven": {
            "artifactId": "events-targets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events.targets"
        },
        "js": {
          "npm": "@aws-cdk/aws-events-targets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events-targets",
          "module": "aws_cdk.aws_events_targets"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kinesis": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Kinesis",
          "packageId": "Amazon.CDK.AWS.Kinesis"
        },
        "java": {
          "maven": {
            "artifactId": "kinesis",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kinesis"
        },
        "js": {
          "npm": "@aws-cdk/aws-kinesis"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kinesis",
          "module": "aws_cdk.aws_kinesis"
        }
      }
    },
    "@aws-cdk/aws-kinesisfirehose": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KinesisFirehose",
          "packageId": "Amazon.CDK.AWS.KinesisFirehose"
        },
        "java": {
          "maven": {
            "artifactId": "kinesisfirehose",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kinesisfirehose"
        },
        "js": {
          "npm": "@aws-cdk/aws-kinesisfirehose"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kinesisfirehose",
          "module": "aws_cdk.aws_kinesisfirehose"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-route53-targets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53.Targets",
          "packageId": "Amazon.CDK.AWS.Route53.Targets"
        },
        "java": {
          "maven": {
            "artifactId": "route53-targets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53.targets"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53-targets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53-targets",
          "module": "aws_cdk.aws_route53_targets"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SAM",
          "packageId": "Amazon.CDK.AWS.SAM"
        },
        "java": {
          "maven": {
            "artifactId": "sam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sam"
        },
        "js": {
          "npm": "@aws-cdk/aws-sam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sam",
          "module": "aws_cdk.aws_sam"
        }
      }
    },
    "@aws-cdk/aws-secretsmanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SecretsManager",
          "packageId": "Amazon.CDK.AWS.SecretsManager"
        },
        "java": {
          "maven": {
            "artifactId": "secretsmanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.secretsmanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-secretsmanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-secretsmanager",
          "module": "aws_cdk.aws_secretsmanager"
        }
      }
    },
    "@aws-cdk/aws-servicecatalog": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ServiceCatalog",
          "packageId": "Amazon.CDK.AWS.ServiceCatalog"
        },
        "java": {
          "maven": {
            "artifactId": "servicecatalog",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.servicecatalog"
        },
        "js": {
          "npm": "@aws-cdk/aws-servicecatalog"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-servicecatalog",
          "module": "aws_cdk.aws_servicecatalog"
        }
      }
    },
    "@aws-cdk/aws-servicediscovery": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ServiceDiscovery",
          "packageId": "Amazon.CDK.AWS.ServiceDiscovery"
        },
        "java": {
          "maven": {
            "artifactId": "servicediscovery",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.servicediscovery"
        },
        "js": {
          "npm": "@aws-cdk/aws-servicediscovery"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-servicediscovery",
          "module": "aws_cdk.aws_servicediscovery"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sns-subscriptions": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS.Subscriptions",
          "packageId": "Amazon.CDK.AWS.SNS.Subscriptions"
        },
        "java": {
          "maven": {
            "artifactId": "sns-subscriptions",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns.subscriptions"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns-subscriptions"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns-subscriptions",
          "module": "aws_cdk.aws_sns_subscriptions"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/aws-stepfunctions": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.StepFunctions",
          "packageId": "Amazon.CDK.AWS.StepFunctions"
        },
        "java": {
          "maven": {
            "artifactId": "stepfunctions",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.stepfunctions"
        },
        "js": {
          "npm": "@aws-cdk/aws-stepfunctions"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-stepfunctions",
          "module": "aws_cdk.aws_stepfunctions"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "Concrete Actions for AWS Code Pipeline",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.21.0 (build 4262b22)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "codepipeline",
    "pipeline"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@aws-cdk/aws-codepipeline-actions",
  "readme": {
    "markdown": "# AWS CodePipeline Actions\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis package contains Actions that can be used in a CodePipeline.\n\n```ts\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\n```\n\n## Sources\n\n### AWS CodeCommit\n\nTo use a CodeCommit Repository in a CodePipeline:\n\n```ts\nimport * as codecommit from '@aws-cdk/aws-codecommit';\n\nconst repo = new codecommit.Repository(this, 'Repo', {\n  // ...\n});\n\nconst pipeline = new codepipeline.Pipeline(this, 'MyPipeline', {\n  pipelineName: 'MyPipeline',\n});\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new codepipeline_actions.CodeCommitSourceAction({\n  actionName: 'CodeCommit',\n  repository: repo,\n  output: sourceOutput,\n});\npipeline.addStage({\n  stageName: 'Source',\n  actions: [sourceAction],\n});\n```\n\nIf you want to use existing role which can be used by on commit event rule.\nYou can specify the role object in eventRole property.\n\n```ts\nconst eventRole = iam.Role.fromRoleArn(this, 'Event-role', 'roleArn');\nconst sourceAction = new codepipeline_actions.CodeCommitSourceAction({\n  actionName: 'CodeCommit',\n  repository: repo,\n  output: new codepipeline.Artifact(),\n  eventRole,\n});\n```\n\nIf you want to clone the entire CodeCommit repository (only available for CodeBuild actions),\nyou can set the `codeBuildCloneOutput` property to `true`:\n\n```ts\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new codepipeline_actions.CodeCommitSourceAction({\n  actionName: 'CodeCommit',\n  repository: repo,\n  output: sourceOutput,\n  codeBuildCloneOutput: true,\n});\n\nconst buildAction = new codepipeline_actions.CodeBuildAction({\n  actionName: 'CodeBuild',\n  project,\n  input: sourceOutput, // The build action must use the CodeCommitSourceAction output as input.\n  outputs: [new codepipeline.Artifact()], // optional\n});\n```\n\nThe CodeCommit source action emits variables:\n\n```ts\nconst sourceAction = new codepipeline_actions.CodeCommitSourceAction({\n  // ...\n  variablesNamespace: 'MyNamespace', // optional - by default, a name will be generated for you\n});\n\n// later:\n\nnew codepipeline_actions.CodeBuildAction({\n  // ...\n  environmentVariables: {\n    COMMIT_ID: {\n      value: sourceAction.variables.commitId,\n    },\n  },\n});\n```\n\n### GitHub\n\nIf you want to use a GitHub repository as the source, you must create:\n\n* A [GitHub Access Token](https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line),\n  with scopes **repo** and **admin:repo_hook**.\n* A [Secrets Manager Secret](https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_create-basic-secret.html)\n  with the value of the **GitHub Access Token**. Pick whatever name you want (for example `my-github-token`).\n  This token can be stored either as Plaintext or as a Secret key/value.\n  If you stored the token as Plaintext,\n  set `cdk.SecretValue.secretsManager('my-github-token')` as the value of `oauthToken`.\n  If you stored it as a Secret key/value,\n  you must set `cdk.SecretValue.secretsManager('my-github-token', { jsonField : 'my-github-token' })` as the value of `oauthToken`.\n\nTo use GitHub as the source of a CodePipeline:\n\n```ts\n// Read the secret from Secrets Manager\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new codepipeline_actions.GitHubSourceAction({\n  actionName: 'GitHub_Source',\n  owner: 'awslabs',\n  repo: 'aws-cdk',\n  oauthToken: cdk.SecretValue.secretsManager('my-github-token'),\n  output: sourceOutput,\n  branch: 'develop', // default: 'master'\n});\npipeline.addStage({\n  stageName: 'Source',\n  actions: [sourceAction],\n});\n```\n\nThe GitHub source action emits variables:\n\n```ts\nconst sourceAction = new codepipeline_actions.GitHubSourceAction({\n  // ...\n  variablesNamespace: 'MyNamespace', // optional - by default, a name will be generated for you\n});\n\n// later:\n\nnew codepipeline_actions.CodeBuildAction({\n  // ...\n  environmentVariables: {\n    COMMIT_URL: {\n      value: sourceAction.variables.commitUrl,\n    },\n  },\n});\n```\n\n### BitBucket\n\nCodePipeline can use a BitBucket Git repository as a source:\n\n**Note**: you have to manually connect CodePipeline through the AWS Console with your BitBucket account.\nThis is a one-time operation for a given AWS account in a given region.\nThe simplest way to do that is to either start creating a new CodePipeline,\nor edit an existing one, while being logged in to BitBucket.\nChoose BitBucket as the source,\nand grant CodePipeline permissions to your BitBucket account.\nCopy & paste the Connection ARN that you get in the console,\nor use the [`codestar-connections list-connections` AWS CLI operation](https://docs.aws.amazon.com/cli/latest/reference/codestar-connections/list-connections.html)\nto find it.\nAfter that, you can safely abort creating or editing the pipeline -\nthe connection has already been created.\n\n```ts\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new codepipeline_actions.BitBucketSourceAction({\n  actionName: 'BitBucket_Source',\n  owner: 'aws',\n  repo: 'aws-cdk',\n  output: sourceOutput,\n  connectionArn: 'arn:aws:codestar-connections:us-east-1:123456789012:connection/12345678-abcd-12ab-34cdef5678gh',\n});\n```\n\n**Note**: as this feature is still in Beta in CodePipeline,\nthe above class `BitBucketSourceAction` is experimental -\nwe reserve the right to make breaking changes to it.\n\n### AWS S3 Source\n\nTo use an S3 Bucket as a source in CodePipeline:\n\n```ts\nimport * as s3 from '@aws-cdk/aws-s3';\n\nconst sourceBucket = new s3.Bucket(this, 'MyBucket', {\n  versioned: true, // a Bucket used as a source in CodePipeline must be versioned\n});\n\nconst pipeline = new codepipeline.Pipeline(this, 'MyPipeline');\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new codepipeline_actions.S3SourceAction({\n  actionName: 'S3Source',\n  bucket: sourceBucket,\n  bucketKey: 'path/to/file.zip',\n  output: sourceOutput,\n});\npipeline.addStage({\n  stageName: 'Source',\n  actions: [sourceAction],\n});\n```\n\nThe region of the action will be determined by the region the bucket itself is in.\nWhen using a newly created bucket,\nthat region will be taken from the stack the bucket belongs to;\nfor an imported bucket,\nyou can specify the region explicitly:\n\n```ts\nconst sourceBucket = s3.Bucket.fromBucketAttributes(this, 'SourceBucket', {\n  bucketName: 'my-bucket',\n  region: 'ap-southeast-1',\n});\n```\n\nBy default, the Pipeline will poll the Bucket to detect changes.\nYou can change that behavior to use CloudWatch Events by setting the `trigger`\nproperty to `S3Trigger.EVENTS` (it's `S3Trigger.POLL` by default).\nIf you do that, make sure the source Bucket is part of an AWS CloudTrail Trail -\notherwise, the CloudWatch Events will not be emitted,\nand your Pipeline will not react to changes in the Bucket.\nYou can do it through the CDK:\n\n```ts\nimport * as cloudtrail from '@aws-cdk/aws-cloudtrail';\n\nconst key = 'some/key.zip';\nconst trail = new cloudtrail.Trail(this, 'CloudTrail');\ntrail.addS3EventSelector([sourceBucket.arnForObjects(key)], {\n  readWriteType: cloudtrail.ReadWriteType.WRITE_ONLY,\n});\nconst sourceAction = new codepipeline_actions.S3SourceAction({\n  actionName: 'S3Source',\n  bucketKey: key,\n  bucket: sourceBucket,\n  output: sourceOutput,\n  trigger: codepipeline_actions.S3Trigger.EVENTS, // default: S3Trigger.POLL\n});\n```\n\nThe S3 source action emits variables:\n\n```ts\nconst sourceAction = new codepipeline_actions.S3SourceAction({\n  // ...\n  variablesNamespace: 'MyNamespace', // optional - by default, a name will be generated for you\n});\n\n// later:\n\nnew codepipeline_actions.CodeBuildAction({\n  // ...\n  environmentVariables: {\n    VERSION_ID: {\n      value: sourceAction.variables.versionId,\n    },\n  },\n});\n```\n\n### AWS ECR\n\nTo use an ECR Repository as a source in a Pipeline:\n\n```ts\nimport * as ecr from '@aws-cdk/aws-ecr';\n\nconst pipeline = new codepipeline.Pipeline(this, 'MyPipeline');\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new codepipeline_actions.EcrSourceAction({\n  actionName: 'ECR',\n  repository: ecrRepository,\n  imageTag: 'some-tag', // optional, default: 'latest'\n  output: sourceOutput,\n});\npipeline.addStage({\n  stageName: 'Source',\n  actions: [sourceAction],\n});\n```\n\nThe ECR source action emits variables:\n\n```ts\nconst sourceAction = new codepipeline_actions.EcrSourceAction({\n  // ...\n  variablesNamespace: 'MyNamespace', // optional - by default, a name will be generated for you\n});\n\n// later:\n\nnew codepipeline_actions.CodeBuildAction({\n  // ...\n  environmentVariables: {\n    IMAGE_URI: {\n      value: sourceAction.variables.imageUri,\n    },\n  },\n});\n```\n\n## Build & test\n\n### AWS CodeBuild\n\nExample of a CodeBuild Project used in a Pipeline, alongside CodeCommit:\n\n```ts\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nimport * as codecommit from '@aws-cdk/aws-codecommit';\n\nconst repository = new codecommit.Repository(this, 'MyRepository', {\n  repositoryName: 'MyRepository',\n});\nconst project = new codebuild.PipelineProject(this, 'MyProject');\n\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new codepipeline_actions.CodeCommitSourceAction({\n  actionName: 'CodeCommit',\n  repository,\n  output: sourceOutput,\n});\nconst buildAction = new codepipeline_actions.CodeBuildAction({\n  actionName: 'CodeBuild',\n  project,\n  input: sourceOutput,\n  outputs: [new codepipeline.Artifact()], // optional\n  executeBatchBuild: true // optional, defaults to false\n});\n\nnew codepipeline.Pipeline(this, 'MyPipeline', {\n  stages: [\n    {\n      stageName: 'Source',\n      actions: [sourceAction],\n    },\n    {\n      stageName: 'Build',\n      actions: [buildAction],\n    },\n  ],\n});\n```\n\nThe default category of the CodeBuild Action is `Build`;\nif you want a `Test` Action instead,\noverride the `type` property:\n\n```ts\nconst testAction = new codepipeline_actions.CodeBuildAction({\n  actionName: 'IntegrationTest',\n  project,\n  input: sourceOutput,\n  type: codepipeline_actions.CodeBuildActionType.TEST, // default is BUILD\n});\n```\n\n#### Multiple inputs and outputs\n\nWhen you want to have multiple inputs and/or outputs for a Project used in a\nPipeline, instead of using the `secondarySources` and `secondaryArtifacts`\nproperties of the `Project` class, you need to use the `extraInputs` and\n`outputs` properties of the CodeBuild CodePipeline\nActions. Example:\n\n```ts\nconst sourceOutput1 = new codepipeline.Artifact();\nconst sourceAction1 = new codepipeline_actions.CodeCommitSourceAction({\n  actionName: 'Source1',\n  repository: repository1,\n  output: sourceOutput1,\n});\nconst sourceOutput2 = new codepipeline.Artifact('source2');\nconst sourceAction2 = new codepipeline_actions.CodeCommitSourceAction({\n  actionName: 'Source2',\n  repository: repository2,\n  output: sourceOutput2,\n});\n\nconst buildAction = new codepipeline_actions.CodeBuildAction({\n  actionName: 'Build',\n  project,\n  input: sourceOutput1,\n  extraInputs: [\n    sourceOutput2, // this is where 'source2' comes from\n  ],\n  outputs: [\n    new codepipeline.Artifact('artifact1'), // for better buildspec readability - see below\n    new codepipeline.Artifact('artifact2'),\n  ],\n});\n```\n\n**Note**: when a CodeBuild Action in a Pipeline has more than one output, it\nonly uses the `secondary-artifacts` field of the buildspec, never the\nprimary output specification directly under `artifacts`. Because of that, it\npays to explicitly name all output artifacts of that Action, like we did\nabove, so that you know what name to use in the buildspec.\n\nExample buildspec for the above project:\n\n```ts\nconst project = new codebuild.PipelineProject(this, 'MyProject', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands: [\n          // By default, you're in a directory with the contents of the repository from sourceAction1.\n          // Use the CODEBUILD_SRC_DIR_source2 environment variable\n          // to get a path to the directory with the contents of the second input repository.\n        ],\n      },\n    },\n    artifacts: {\n      'secondary-artifacts': {\n        'artifact1': {\n          // primary Action output artifact,\n          // available as buildAction.outputArtifact\n        },\n        'artifact2': {\n          // additional output artifact,\n          // available as buildAction.additionalOutputArtifact('artifact2')\n        },\n      },\n    },\n  }),\n  // ...\n});\n```\n\n#### Variables\n\nThe CodeBuild action emits variables.\nUnlike many other actions, the variables are not static,\nbut dynamic, defined in the buildspec,\nin the 'exported-variables' subsection of the 'env' section.\nExample:\n\n```ts\nconst buildAction = new codepipeline_actions.CodeBuildAction({\n  actionName: 'Build1',\n  input: sourceOutput,\n  project: new codebuild.PipelineProject(this, 'Project', {\n    buildSpec: codebuild.BuildSpec.fromObject({\n      version: '0.2',\n      env: {\n        'exported-variables': [\n          'MY_VAR',\n        ],\n      },\n      phases: {\n        build: {\n          commands: 'export MY_VAR=\"some value\"',\n        },\n      },\n    }),\n  }),\n  variablesNamespace: 'MyNamespace', // optional - by default, a name will be generated for you\n});\n\n// later:\n\nnew codepipeline_actions.CodeBuildAction({\n  // ...\n  environmentVariables: {\n    MyVar: {\n      value: buildAction.variable('MY_VAR'),\n    },\n  },\n});\n```\n\n### Jenkins\n\nIn order to use Jenkins Actions in the Pipeline,\nyou first need to create a `JenkinsProvider`:\n\n```ts\nconst jenkinsProvider = new codepipeline_actions.JenkinsProvider(this, 'JenkinsProvider', {\n  providerName: 'MyJenkinsProvider',\n  serverUrl: 'http://my-jenkins.com:8080',\n  version: '2', // optional, default: '1'\n});\n```\n\nIf you've registered a Jenkins provider in a different CDK app,\nor outside the CDK (in the CodePipeline AWS Console, for example),\nyou can import it:\n\n```ts\nconst jenkinsProvider = codepipeline_actions.JenkinsProvider.import(this, 'JenkinsProvider', {\n  providerName: 'MyJenkinsProvider',\n  serverUrl: 'http://my-jenkins.com:8080',\n  version: '2', // optional, default: '1'\n});\n```\n\nNote that a Jenkins provider\n(identified by the provider name-category(build/test)-version tuple)\nmust always be registered in the given account, in the given AWS region,\nbefore it can be used in CodePipeline.\n\nWith a `JenkinsProvider`,\nwe can create a Jenkins Action:\n\n```ts\nconst buildAction = new codepipeline_actions.JenkinsAction({\n  actionName: 'JenkinsBuild',\n  jenkinsProvider: jenkinsProvider,\n  projectName: 'MyProject',\n  type: codepipeline_actions.JenkinsActionType.BUILD,\n});\n```\n\n## Deploy\n\n### AWS CloudFormation\n\nThis module contains Actions that allows you to deploy to CloudFormation from AWS CodePipeline.\n\nFor example, the following code fragment defines a pipeline that automatically deploys a CloudFormation template\ndirectly from a CodeCommit repository, with a manual approval step in between to confirm the changes:\n\n```ts lit=test/integ.cfn-template-from-repo.lit.ts\n// Source stage: read from repository\nconst repo = new codecommit.Repository(stack, 'TemplateRepo', {\n  repositoryName: 'template-repo',\n});\nconst sourceOutput = new codepipeline.Artifact('SourceArtifact');\nconst source = new cpactions.CodeCommitSourceAction({\n  actionName: 'Source',\n  repository: repo,\n  output: sourceOutput,\n  trigger: cpactions.CodeCommitTrigger.POLL,\n});\nconst sourceStage = {\n  stageName: 'Source',\n  actions: [source],\n};\n\n// Deployment stage: create and deploy changeset with manual approval\nconst stackName = 'OurStack';\nconst changeSetName = 'StagedChangeSet';\n\nconst prodStage = {\n  stageName: 'Deploy',\n  actions: [\n    new cpactions.CloudFormationCreateReplaceChangeSetAction({\n      actionName: 'PrepareChanges',\n      stackName,\n      changeSetName,\n      adminPermissions: true,\n      templatePath: sourceOutput.atPath('template.yaml'),\n      runOrder: 1,\n    }),\n    new cpactions.ManualApprovalAction({\n      actionName: 'ApproveChanges',\n      runOrder: 2,\n    }),\n    new cpactions.CloudFormationExecuteChangeSetAction({\n      actionName: 'ExecuteChanges',\n      stackName,\n      changeSetName,\n      runOrder: 3,\n    }),\n  ],\n};\n\nnew codepipeline.Pipeline(stack, 'Pipeline', {\n  stages: [\n    sourceStage,\n    prodStage,\n  ],\n});\n```\n\nSee [the AWS documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline.html)\nfor more details about using CloudFormation in CodePipeline.\n\n#### Actions defined by this package\n\nThis package contains the following CloudFormation actions:\n\n* **CloudFormationCreateUpdateStackAction** - Deploy a CloudFormation template directly from the pipeline. The indicated stack is created,\n  or updated if it already exists. If the stack is in a failure state, deployment will fail (unless `replaceOnFailure`\n  is set to `true`, in which case it will be destroyed and recreated).\n* **CloudFormationDeleteStackAction** - Delete the stack with the given name.\n* **CloudFormationCreateReplaceChangeSetAction** - Prepare a change set to be applied later. You will typically use change sets if you want\n  to manually verify the changes that are being staged, or if you want to separate the people (or system) preparing the\n  changes from the people (or system) applying the changes.\n* **CloudFormationExecuteChangeSetAction** - Execute a change set prepared previously.\n\n#### Lambda deployed through CodePipeline\n\nIf you want to deploy your Lambda through CodePipeline,\nand you don't use assets (for example, because your CDK code and Lambda code are separate),\nyou can use a special Lambda `Code` class, `CfnParametersCode`.\nNote that your Lambda must be in a different Stack than your Pipeline.\nThe Lambda itself will be deployed, alongside the entire Stack it belongs to,\nusing a CloudFormation CodePipeline Action. Example:\n\n```ts lit=test/integ.lambda-deployed-through-codepipeline.lit.ts\nconst lambdaStack = new cdk.Stack(app, 'LambdaStack');\nconst lambdaCode = lambda.Code.fromCfnParameters();\nnew lambda.Function(lambdaStack, 'Lambda', {\n  code: lambdaCode,\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_10_X,\n});\n// other resources that your Lambda needs, added to the lambdaStack...\n\nconst pipelineStack = new cdk.Stack(app, 'PipelineStack');\nconst pipeline = new codepipeline.Pipeline(pipelineStack, 'Pipeline');\n\n// add the source code repository containing this code to your Pipeline,\n// and the source code of the Lambda Function, if they're separate\nconst cdkSourceOutput = new codepipeline.Artifact();\nconst cdkSourceAction = new codepipeline_actions.CodeCommitSourceAction({\n  repository: new codecommit.Repository(pipelineStack, 'CdkCodeRepo', {\n    repositoryName: 'CdkCodeRepo',\n  }),\n  actionName: 'CdkCode_Source',\n  output: cdkSourceOutput,\n});\nconst lambdaSourceOutput = new codepipeline.Artifact();\nconst lambdaSourceAction = new codepipeline_actions.CodeCommitSourceAction({\n  repository: new codecommit.Repository(pipelineStack, 'LambdaCodeRepo', {\n    repositoryName: 'LambdaCodeRepo',\n  }),\n  actionName: 'LambdaCode_Source',\n  output: lambdaSourceOutput,\n});\npipeline.addStage({\n  stageName: 'Source',\n  actions: [cdkSourceAction, lambdaSourceAction],\n});\n\n// synthesize the Lambda CDK template, using CodeBuild\n// the below values are just examples, assuming your CDK code is in TypeScript/JavaScript -\n// adjust the build environment and/or commands accordingly\nconst cdkBuildProject = new codebuild.Project(pipelineStack, 'CdkBuildProject', {\n  environment: {\n    buildImage: codebuild.LinuxBuildImage.UBUNTU_14_04_NODEJS_10_1_0,\n  },\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      install: {\n        commands: 'npm install',\n      },\n      build: {\n        commands: [\n          'npm run build',\n          'npm run cdk synth LambdaStack -- -o .',\n        ],\n      },\n    },\n    artifacts: {\n      files: 'LambdaStack.template.yaml',\n    },\n  }),\n});\nconst cdkBuildOutput = new codepipeline.Artifact();\nconst cdkBuildAction = new codepipeline_actions.CodeBuildAction({\n  actionName: 'CDK_Build',\n  project: cdkBuildProject,\n  input: cdkSourceOutput,\n  outputs: [cdkBuildOutput],\n});\n\n// build your Lambda code, using CodeBuild\n// again, this example assumes your Lambda is written in TypeScript/JavaScript -\n// make sure to adjust the build environment and/or commands if they don't match your specific situation\nconst lambdaBuildProject = new codebuild.Project(pipelineStack, 'LambdaBuildProject', {\n  environment: {\n    buildImage: codebuild.LinuxBuildImage.UBUNTU_14_04_NODEJS_10_1_0,\n  },\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      install: {\n        commands: 'npm install',\n      },\n      build: {\n        commands: 'npm run build',\n      },\n    },\n    artifacts: {\n      files: [\n        'index.js',\n        'node_modules/**/*',\n      ],\n    },\n  }),\n});\nconst lambdaBuildOutput = new codepipeline.Artifact();\nconst lambdaBuildAction = new codepipeline_actions.CodeBuildAction({\n  actionName: 'Lambda_Build',\n  project: lambdaBuildProject,\n  input: lambdaSourceOutput,\n  outputs: [lambdaBuildOutput],\n});\n\npipeline.addStage({\n  stageName: 'Build',\n  actions: [cdkBuildAction, lambdaBuildAction],\n});\n\n// finally, deploy your Lambda Stack\npipeline.addStage({\n  stageName: 'Deploy',\n  actions: [\n    new codepipeline_actions.CloudFormationCreateUpdateStackAction({\n      actionName: 'Lambda_CFN_Deploy',\n      templatePath: cdkBuildOutput.atPath('LambdaStack.template.yaml'),\n      stackName: 'LambdaStackDeployedName',\n      adminPermissions: true,\n      parameterOverrides: {\n        ...lambdaCode.assign(lambdaBuildOutput.s3Location),\n      },\n      extraInputs: [\n        lambdaBuildOutput,\n      ],\n    }),\n  ],\n});\n\n```\n\n#### Cross-account actions\n\nIf you want to update stacks in a different account,\npass the `account` property when creating the action:\n\n```ts\nnew codepipeline_actions.CloudFormationCreateUpdateStackAction({\n  // ...\n  account: '123456789012',\n});\n```\n\nThis will create a new stack, called `<PipelineStackName>-support-123456789012`, in your `App`,\nthat will contain the role that the pipeline will assume in account 123456789012 before executing this action.\nThis support stack will automatically be deployed before the stack containing the pipeline.\n\nYou can also pass a role explicitly when creating the action -\nin that case, the `account` property is ignored,\nand the action will operate in the same account the role belongs to:\n\n```ts\nimport { PhysicalName } from '@aws-cdk/core';\n\n// in stack for account 123456789012...\nconst actionRole = new iam.Role(otherAccountStack, 'ActionRole', {\n  assumedBy: new iam.AccountPrincipal(pipelineAccount),\n  // the role has to have a physical name set\n  roleName: PhysicalName.GENERATE_IF_NEEDED,\n});\n\n// in the pipeline stack...\nnew codepipeline_actions.CloudFormationCreateUpdateStackAction({\n  // ...\n  role: actionRole, // this action will be cross-account as well\n});\n```\n\n### AWS CodeDeploy\n\n#### Server deployments\n\nTo use CodeDeploy for EC2/on-premise deployments in a Pipeline:\n\n```ts\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\n\nconst pipeline = new codepipeline.Pipeline(this, 'MyPipeline', {\n  pipelineName: 'MyPipeline',\n});\n\n// add the source and build Stages to the Pipeline...\n\nconst deployAction = new codepipeline_actions.CodeDeployServerDeployAction({\n  actionName: 'CodeDeploy',\n  input: buildOutput,\n  deploymentGroup,\n});\npipeline.addStage({\n  stageName: 'Deploy',\n  actions: [deployAction],\n});\n```\n\n##### Lambda deployments\n\nTo use CodeDeploy for blue-green Lambda deployments in a Pipeline:\n\n```ts\nconst lambdaCode = lambda.Code.fromCfnParameters();\nconst func = new lambda.Function(lambdaStack, 'Lambda', {\n  code: lambdaCode,\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_10_X,\n});\n// used to make sure each CDK synthesis produces a different Version\nconst version = func.addVersion('NewVersion');\nconst alias = new lambda.Alias(lambdaStack, 'LambdaAlias', {\n  aliasName: 'Prod',\n  version,\n});\n\nnew codedeploy.LambdaDeploymentGroup(lambdaStack, 'DeploymentGroup', {\n  alias,\n  deploymentConfig: codedeploy.LambdaDeploymentConfig.LINEAR_10PERCENT_EVERY_1MINUTE,\n});\n```\n\nThen, you need to create your Pipeline Stack,\nwhere you will define your Pipeline,\nand deploy the `lambdaStack` using a CloudFormation CodePipeline Action\n(see above for a complete example).\n\n### ECS\n\nCodePipeline can deploy an ECS service.\nThe deploy Action receives one input Artifact which contains the [image definition file]:\n\n```ts\nconst deployStage = pipeline.addStage({\n  stageName: 'Deploy',\n  actions: [\n    new codepipeline_actions.EcsDeployAction({\n      actionName: 'DeployAction',\n      service,\n      // if your file is called imagedefinitions.json,\n      // use the `input` property,\n      // and leave out the `imageFile` property\n      input: buildOutput,\n      // if your file name is _not_ imagedefinitions.json,\n      // use the `imageFile` property,\n      // and leave out the `input` property\n      imageFile: buildOutput.atPath('imageDef.json'),\n      deploymentTimeout: cdk.Duration.minutes(60), // optional, default is 60 minutes\n    }),\n  ],\n});\n```\n\n[image definition file]: https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-create.html#pipelines-create-image-definitions\n\n#### Deploying ECS applications stored in a separate source code repository\n\nThe idiomatic CDK way of deploying an ECS application is to have your Dockerfiles and your CDK code in the same source code repository,\nleveraging [Docker Assets])(https://docs.aws.amazon.com/cdk/latest/guide/assets.html#assets_types_docker),\nand use the [CDK Pipelines module](https://docs.aws.amazon.com/cdk/api/latest/docs/pipelines-readme.html).\n\nHowever, if you want to deploy a Docker application whose source code is kept in a separate version control repository than the CDK code,\nyou can use the `TagParameterContainerImage` class from the ECS module.\nHere's an example:\n\n```ts lit=test/integ.pipeline-ecs-separate-source.lit.ts\n\n/**\n * These are the construction properties for {@link EcsAppStack}.\n * They extend the standard Stack properties,\n * but also require providing the ContainerImage that the service will use.\n * That Image will be provided from the Stack containing the CodePipeline.\n */\nexport interface EcsAppStackProps extends cdk.StackProps {\n  readonly image: ecs.ContainerImage;\n}\n\n/**\n * This is the Stack containing a simple ECS Service that uses the provided ContainerImage.\n */\nexport class EcsAppStack extends cdk.Stack {\n  constructor(scope: Construct, id: string, props: EcsAppStackProps) {\n    super(scope, id, props);\n\n    const taskDefinition = new ecs.TaskDefinition(this, 'TaskDefinition', {\n      compatibility: ecs.Compatibility.FARGATE,\n      cpu: '1024',\n      memoryMiB: '2048',\n    });\n    taskDefinition.addContainer('AppContainer', {\n      image: props.image,\n    });\n    new ecs.FargateService(this, 'EcsService', {\n      taskDefinition,\n      cluster: new ecs.Cluster(this, 'Cluster', {\n        vpc: new ec2.Vpc(this, 'Vpc', {\n          maxAzs: 1,\n        }),\n      }),\n    });\n  }\n}\n\n/**\n * This is the Stack containing the CodePipeline definition that deploys an ECS Service.\n */\nexport class PipelineStack extends cdk.Stack {\n  public readonly tagParameterContainerImage: ecs.TagParameterContainerImage;\n\n  constructor(scope: Construct, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    /* ********** ECS part **************** */\n\n    // this is the ECR repository where the built Docker image will be pushed\n    const appEcrRepo = new ecr.Repository(this, 'EcsDeployRepository');\n    // the build that creates the Docker image, and pushes it to the ECR repo\n    const appCodeDockerBuild = new codebuild.PipelineProject(this, 'AppCodeDockerImageBuildAndPushProject', {\n      environment: {\n        // we need to run Docker\n        privileged: true,\n      },\n      buildSpec: codebuild.BuildSpec.fromObject({\n        version: '0.2',\n        phases: {\n          build: {\n            commands: [\n              // login to ECR first\n              '$(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)',\n              // if your application needs any build steps, they would be invoked here\n\n              // build the image, and tag it with the commit hash\n              // (CODEBUILD_RESOLVED_SOURCE_VERSION is a special environment variable available in CodeBuild)\n              'docker build -t $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION .',\n            ],\n          },\n          post_build: {\n            commands: [\n              // push the built image into the ECR repository\n              'docker push $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION',\n              // save the declared tag as an environment variable,\n              // that is then exported below in the 'exported-variables' section as a CodePipeline Variable\n              'export imageTag=$CODEBUILD_RESOLVED_SOURCE_VERSION',\n            ],\n          },\n        },\n        env: {\n          // save the imageTag environment variable as a CodePipeline Variable\n          'exported-variables': [\n            'imageTag',\n          ],\n        },\n      }),\n      environmentVariables: {\n        REPOSITORY_URI: {\n          value: appEcrRepo.repositoryUri,\n        },\n      },\n    });\n    // needed for `docker push`\n    appEcrRepo.grantPullPush(appCodeDockerBuild);\n    // create the ContainerImage used for the ECS application Stack\n    this.tagParameterContainerImage = new ecs.TagParameterContainerImage(appEcrRepo);\n\n    const cdkCodeBuild = new codebuild.PipelineProject(this, 'CdkCodeBuildProject', {\n      buildSpec: codebuild.BuildSpec.fromObject({\n        version: '0.2',\n        phases: {\n          install: {\n            commands: [\n              'npm install',\n            ],\n          },\n          build: {\n            commands: [\n              // synthesize the CDK code for the ECS application Stack\n              'npx cdk synth --verbose',\n            ],\n          },\n        },\n        artifacts: {\n          // store the entire Cloud Assembly as the output artifact\n          'base-directory': 'cdk.out',\n          'files': '**/*',\n        },\n      }),\n    });\n\n    /* ********** Pipeline part **************** */\n\n    const appCodeSourceOutput = new codepipeline.Artifact();\n    const cdkCodeSourceOutput = new codepipeline.Artifact();\n    const cdkCodeBuildOutput = new codepipeline.Artifact();\n    const appCodeBuildAction = new codepipeline_actions.CodeBuildAction({\n      actionName: 'AppCodeDockerImageBuildAndPush',\n      project: appCodeDockerBuild,\n      input: appCodeSourceOutput,\n    });\n    new codepipeline.Pipeline(this, 'CodePipelineDeployingEcsApplication', {\n      artifactBucket: new s3.Bucket(this, 'ArtifactBucket', {\n        removalPolicy: cdk.RemovalPolicy.DESTROY,\n      }),\n      stages: [\n        {\n          stageName: 'Source',\n          actions: [\n            // this is the Action that takes the source of your application code\n            new codepipeline_actions.CodeCommitSourceAction({\n              actionName: 'AppCodeSource',\n              repository: new codecommit.Repository(this, 'AppCodeSourceRepository', { repositoryName: 'AppCodeSourceRepository' }),\n              output: appCodeSourceOutput,\n            }),\n            // this is the Action that takes the source of your CDK code\n            // (which would probably include this Pipeline code as well)\n            new codepipeline_actions.CodeCommitSourceAction({\n              actionName: 'CdkCodeSource',\n              repository: new codecommit.Repository(this, 'CdkCodeSourceRepository', { repositoryName: 'CdkCodeSourceRepository' }),\n              output: cdkCodeSourceOutput,\n            }),\n          ],\n        },\n        {\n          stageName: 'Build',\n          actions: [\n            appCodeBuildAction,\n            new codepipeline_actions.CodeBuildAction({\n              actionName: 'CdkCodeBuildAndSynth',\n              project: cdkCodeBuild,\n              input: cdkCodeSourceOutput,\n              outputs: [cdkCodeBuildOutput],\n            }),\n          ],\n        },\n        {\n          stageName: 'Deploy',\n          actions: [\n            new codepipeline_actions.CloudFormationCreateUpdateStackAction({\n              actionName: 'CFN_Deploy',\n              stackName: 'SampleEcsStackDeployedFromCodePipeline',\n              // this name has to be the same name as used below in the CDK code for the application Stack\n              templatePath: cdkCodeBuildOutput.atPath('EcsStackDeployedInPipeline.template.json'),\n              adminPermissions: true,\n              parameterOverrides: {\n                // read the tag pushed to the ECR repository from the CodePipeline Variable saved by the application build step,\n                // and pass it as the CloudFormation Parameter for the tag\n                [this.tagParameterContainerImage.tagParameterName]: appCodeBuildAction.variable('imageTag'),\n              },\n            }),\n          ],\n        },\n      ],\n    });\n  }\n}\n\nconst app = new cdk.App();\n\n// the CodePipeline Stack needs to be created first\nconst pipelineStack = new PipelineStack(app, 'aws-cdk-pipeline-ecs-separate-sources');\n// we supply the image to the ECS application Stack from the CodePipeline Stack\nnew EcsAppStack(app, 'EcsStackDeployedInPipeline', {\n  image: pipelineStack.tagParameterContainerImage,\n});\n```\n\n### AWS S3 Deployment\n\nTo use an S3 Bucket as a deployment target in CodePipeline:\n\n```ts\nconst targetBucket = new s3.Bucket(this, 'MyBucket', {});\n\nconst pipeline = new codepipeline.Pipeline(this, 'MyPipeline');\nconst deployAction = new codepipeline_actions.S3DeployAction({\n  actionName: 'S3Deploy',\n  stage: deployStage,\n  bucket: targetBucket,\n  input: sourceOutput,\n});\nconst deployStage = pipeline.addStage({\n  stageName: 'Deploy',\n  actions: [deployAction],\n});\n```\n\n#### Invalidating the CloudFront cache when deploying to S3\n\nThere is currently no native support in CodePipeline for invalidating a CloudFront cache after deployment.\nOne workaround is to add another build step after the deploy step,\nand use the AWS CLI to invalidate the cache:\n\n```ts\n// Create a Cloudfront Web Distribution\nconst distribution = new cloudfront.Distribution(this, `Distribution`, {\n  // ...\n});\n\n// Create the build project that will invalidate the cache\nconst invalidateBuildProject = new codebuild.PipelineProject(this, `InvalidateProject`, {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands:[\n          'aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_ID} --paths \"/*\"',\n          // Choose whatever files or paths you'd like, or all files as specified here\n        ],\n      },\n    },\n  }),\n  environmentVariables: {\n    CLOUDFRONT_ID: { value: distribution.distributionId },\n  },\n});\n\n// Add Cloudfront invalidation permissions to the project\nconst distributionArn = `arn:aws:cloudfront::${this.account}:distribution/${distribution.distributionId}`;\ninvalidateBuildProject.addToRolePolicy(new iam.PolicyStatement({\n  resources: [distributionArn],\n  actions: [\n    'cloudfront:CreateInvalidation',\n  ],\n}));\n\n// Create the pipeline (here only the S3 deploy and Invalidate cache build)\nnew codepipeline.Pipeline(this, 'Pipeline', {\n  stages: [\n    // ...\n    {\n      stageName: 'Deploy',\n      actions: [\n        new codepipelineActions.S3DeployAction({\n          actionName: 'S3Deploy',\n          bucket: deployBucket,\n          input: deployInput,\n          runOrder: 1,\n        }),\n        new codepipelineActions.CodeBuildAction({\n          actionName: 'InvalidateCache',\n          project: invalidateBuildProject,\n          input: deployInput,\n          runOrder: 2,\n        }),\n      ],\n    },\n  ],\n});\n```\n\n### Alexa Skill\n\nYou can deploy to Alexa using CodePipeline with the following Action:\n\n```ts\n// Read the secrets from ParameterStore\nconst clientId = cdk.SecretValue.secretsManager('AlexaClientId');\nconst clientSecret = cdk.SecretValue.secretsManager('AlexaClientSecret');\nconst refreshToken = cdk.SecretValue.secretsManager('AlexaRefreshToken');\n\n// Add deploy action\nnew codepipeline_actions.AlexaSkillDeployAction({\n  actionName: 'DeploySkill',\n  runOrder: 1,\n  input: sourceOutput,\n  clientId: clientId.toString(),\n  clientSecret: clientSecret,\n  refreshToken: refreshToken,\n  skillId: 'amzn1.ask.skill.12345678-1234-1234-1234-123456789012',\n});\n```\n\nIf you need manifest overrides you can specify them as `parameterOverridesArtifact` in the action:\n\n```ts\nimport * as cloudformation from '@aws-cdk/aws-cloudformation';\n\n// Deploy some CFN change set and store output\nconst executeOutput = new codepipeline.Artifact('CloudFormation');\nconst executeChangeSetAction = new codepipeline_actions.CloudFormationExecuteChangeSetAction({\n  actionName: 'ExecuteChangesTest',\n  runOrder: 2,\n  stackName,\n  changeSetName,\n  outputFileName: 'overrides.json',\n  output: executeOutput,\n});\n\n// Provide CFN output as manifest overrides\nnew codepipeline_actions.AlexaSkillDeployAction({\n  actionName: 'DeploySkill',\n  runOrder: 1,\n  input: sourceOutput,\n  parameterOverridesArtifact: executeOutput,\n  clientId: clientId.toString(),\n  clientSecret: clientSecret,\n  refreshToken: refreshToken,\n  skillId: 'amzn1.ask.skill.12345678-1234-1234-1234-123456789012',\n});\n```\n\n### AWS Service Catalog\n\nYou can deploy a CloudFormation template to an existing Service Catalog product with the following action:\n\n```ts\nnew codepipeline.Pipeline(this, 'Pipeline', {\n      stages: [\n          {\n            stageName: 'ServiceCatalogDeploy',\n            actions: [\n            new codepipeline_actions.ServiceCatalogDeployAction({\n                actionName: 'ServiceCatalogDeploy',\n                templatePath: cdkBuildOutput.atPath(\"Sample.template.json\"),\n                productVersionName: \"Version - \" + Date.now.toString,\n                productType: \"CLOUD_FORMATION_TEMPLATE\",\n                productVersionDescription: \"This is a version from the pipeline with a new description.\",\n                productId: \"prod-XXXXXXXX\",\n            }),\n          },\n        ],\n});\n```\n\n## Approve & invoke\n\n### Manual approval Action\n\nThis package contains an Action that stops the Pipeline until someone manually clicks the approve button:\n\n```ts\nconst manualApprovalAction = new codepipeline_actions.ManualApprovalAction({\n  actionName: 'Approve',\n  notificationTopic: new sns.Topic(this, 'Topic'), // optional\n  notifyEmails: [\n    'some_email@example.com',\n  ], // optional\n  additionalInformation: 'additional info', // optional\n});\napproveStage.addAction(manualApprovalAction);\n// `manualApprovalAction.notificationTopic` can be used to access the Topic\n// after the Action has been added to a Pipeline\n```\n\nIf the `notificationTopic` has not been provided,\nbut `notifyEmails` were,\na new SNS Topic will be created\n(and accessible through the `notificationTopic` property of the Action).\n\n### AWS Lambda\n\nThis module contains an Action that allows you to invoke a Lambda function in a Pipeline:\n\n```ts\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nconst pipeline = new codepipeline.Pipeline(this, 'MyPipeline');\nconst lambdaAction = new codepipeline_actions.LambdaInvokeAction({\n  actionName: 'Lambda',\n  lambda: fn,\n});\npipeline.addStage({\n  stageName: 'Lambda',\n  actions: [lambdaAction],\n});\n```\n\nThe Lambda Action can have up to 5 inputs,\nand up to 5 outputs:\n\n```ts\n\nconst lambdaAction = new codepipeline_actions.LambdaInvokeAction({\n  actionName: 'Lambda',\n  inputs: [\n    sourceOutput,\n    buildOutput,\n  ],\n  outputs: [\n    new codepipeline.Artifact('Out1'),\n    new codepipeline.Artifact('Out2'),\n  ],\n  lambda: fn\n});\n```\n\nThe Lambda invoke action emits variables.\nUnlike many other actions, the variables are not static,\nbut dynamic, defined by the function calling the `PutJobSuccessResult`\nAPI with the `outputVariables` property filled with the map of variables\nExample:\n\n```ts\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nconst lambdaInvokeAction = new codepipeline_actions.LambdaInvokeAction({\n  actionName: 'Lambda',\n  lambda: new lambda.Function(this, 'Func', {\n    runtime: lambda.Runtime.NODEJS_10_X,\n    handler: 'index.handler',\n    code: lambda.Code.fromInline(`\n        const AWS = require('aws-sdk');\n\n        exports.handler = async function(event, context) {\n            const codepipeline = new AWS.CodePipeline();\n            await codepipeline.putJobSuccessResult({\n                jobId: event['CodePipeline.job'].id,\n                outputVariables: {\n                    MY_VAR: \"some value\",\n                },\n            }).promise();\n        }\n    `),\n  }),\n  variablesNamespace: 'MyNamespace', // optional - by default, a name will be generated for you\n});\n\n// later:\n\nnew codepipeline_actions.CodeBuildAction({\n  // ...\n  environmentVariables: {\n    MyVar: {\n      value: lambdaInvokeAction.variable('MY_VAR'),\n    },\n  },\n});\n```\n\nSee [the AWS documentation](https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html)\non how to write a Lambda function invoked from CodePipeline.\n\n### AWS Step Functions\n\nThis module contains an Action that allows you to invoke a Step Function in a Pipeline:\n\n```ts\nimport * as stepfunction from '@aws-cdk/aws-stepfunctions';\n\nconst pipeline = new codepipeline.Pipeline(this, 'MyPipeline');\nconst startState = new stepfunction.Pass(stack, 'StartState');\nconst simpleStateMachine  = new stepfunction.StateMachine(stack, 'SimpleStateMachine', {\n  definition: startState,\n});\nconst stepFunctionAction = new codepipeline_actions.StepFunctionsInvokeAction({\n  actionName: 'Invoke',\n  stateMachine: simpleStateMachine,\n  stateMachineInput: codepipeline_actions.StateMachineInput.literal({ IsHelloWorldExample: true }),\n});\npipeline.addStage({\n  stageName: 'StepFunctions',\n  actions: [stepFunctionAction],\n});\n```\n\nThe `StateMachineInput` can be created with one of 2 static factory methods:\n`literal`, which takes an arbitrary map as its only argument, or `filePath`:\n\n```ts\nimport * as stepfunction from '@aws-cdk/aws-stepfunctions';\n\nconst pipeline = new codepipeline.Pipeline(this, 'MyPipeline');\nconst inputArtifact = new codepipeline.Artifact();\nconst startState = new stepfunction.Pass(stack, 'StartState');\nconst simpleStateMachine  = new stepfunction.StateMachine(stack, 'SimpleStateMachine', {\n  definition: startState,\n});\nconst stepFunctionAction = new codepipeline_actions.StepFunctionsInvokeAction({\n  actionName: 'Invoke',\n  stateMachine: simpleStateMachine,\n  stateMachineInput: codepipeline_actions.StateMachineInput.filePath(inputArtifact.atPath('assets/input.json')),\n});\npipeline.addStage({\n  stageName: 'StepFunctions',\n  actions: [stepFunctionAction],\n});\n```\n\nSee [the AWS documentation](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-StepFunctions.html)\nfor information on Action structure reference.\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-codepipeline-actions",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.CodePipeline.Actions",
      "packageId": "Amazon.CDK.AWS.CodePipeline.Actions"
    },
    "java": {
      "maven": {
        "artifactId": "codepipeline-actions",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.codepipeline.actions"
    },
    "js": {
      "npm": "@aws-cdk/aws-codepipeline-actions"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-codepipeline-actions",
      "module": "aws_cdk.aws_codepipeline_actions"
    }
  },
  "types": {
    "@aws-cdk/aws-codepipeline-actions.Action": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "docs": {
        "remarks": "WARNING: this class should not be externally exposed, but is currently visible\nbecause of a limitation of jsii (https://github.com/aws/jsii/issues/524).\n\nThis class will disappear in a future release and should not be used.",
        "stability": "experimental",
        "summary": "Low-level class for generic CodePipeline Actions."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.Action",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/action.ts",
          "line": 29
        },
        "parameters": [
          {
            "name": "actionProperties",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionProperties"
            }
          }
        ],
        "protected": true
      },
      "interfaces": [
        "@aws-cdk/aws-codepipeline.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/action.ts",
        "line": 19
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 52
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-codepipeline.IAction",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "experimental",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 94
          },
          "name": "bound",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "docs": {
                "summary": "an instance of the {@link ActionBindOptions} class, that contains the necessary information for the Action to configure itself, like a reference to the Role, etc."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 66
          },
          "name": "onStateChange",
          "overrides": "@aws-cdk/aws-codepipeline.IAction",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.IRuleTarget"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.RuleProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 81
          },
          "name": "variableExpression",
          "parameters": [
            {
              "name": "variableName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Action",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 20
          },
          "name": "actionProperties",
          "overrides": "@aws-cdk/aws-codepipeline.IAction",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ActionProperties"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.AlexaSkillDeployAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "stability": "stable",
        "summary": "Deploys the skill to Alexa."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.AlexaSkillDeployAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/alexa-ask/deploy-action.ts",
          "line": 50
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.AlexaSkillDeployActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/alexa-ask/deploy-action.ts",
        "line": 47
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/alexa-ask/deploy-action.ts",
            "line": 68
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "_options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "AlexaSkillDeployAction"
    },
    "@aws-cdk/aws-codepipeline-actions.AlexaSkillDeployActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of the {@link AlexaSkillDeployAction Alexa deploy Action}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.AlexaSkillDeployActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alexa-ask/deploy-action.ts",
        "line": 12
      },
      "name": "AlexaSkillDeployActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The client id of the developer console token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alexa-ask/deploy-action.ts",
            "line": 16
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The client secret of the developer console token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alexa-ask/deploy-action.ts",
            "line": 21
          },
          "name": "clientSecret",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The source artifact containing the voice model and skill manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alexa-ask/deploy-action.ts",
            "line": 36
          },
          "name": "input",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The refresh token of the developer console token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alexa-ask/deploy-action.ts",
            "line": 26
          },
          "name": "refreshToken",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Alexa skill id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alexa-ask/deploy-action.ts",
            "line": 31
          },
          "name": "skillId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "An optional artifact containing overrides for the skill manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alexa-ask/deploy-action.ts",
            "line": 41
          },
          "name": "parameterOverridesArtifact",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.BaseJenkinsProvider": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.BaseJenkinsProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/jenkins/jenkins-provider.ts",
          "line": 115
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "version",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ],
        "protected": true
      },
      "interfaces": [
        "@aws-cdk/aws-codepipeline-actions.IJenkinsProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/jenkins/jenkins-provider.ts",
        "line": 110
      },
      "name": "BaseJenkinsProvider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 111
          },
          "name": "providerName",
          "overrides": "@aws-cdk/aws-codepipeline-actions.IJenkinsProvider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 112
          },
          "name": "serverUrl",
          "overrides": "@aws-cdk/aws-codepipeline-actions.IJenkinsProvider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 113
          },
          "name": "version",
          "overrides": "@aws-cdk/aws-codepipeline-actions.IJenkinsProvider",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.BitBucketSourceAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "stability": "experimental",
        "summary": "A CodePipeline source action for BitBucket."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.BitBucketSourceAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/bitbucket/source-action.ts",
          "line": 84
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.BitBucketSourceActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/bitbucket/source-action.ts",
        "line": 73
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "experimental",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/bitbucket/source-action.ts",
            "line": 97
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "BitBucketSourceAction"
    },
    "@aws-cdk/aws-codepipeline-actions.BitBucketSourceActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Construction properties for {@link BitBucketSourceAction}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.BitBucketSourceActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/bitbucket/source-action.ts",
        "line": 16
      },
      "name": "BitBucketSourceActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "example": "'arn:aws:codestar-connections:us-east-1:123456789012:connection/12345678-abcd-12ab-34cdef5678gh'",
            "see": "https://docs.aws.amazon.com/codepipeline/latest/userguide/connections-create.html",
            "stability": "experimental",
            "summary": "The ARN of the CodeStar Connection created in the AWS console that has permissions to access this BitBucket repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bitbucket/source-action.ts",
            "line": 30
          },
          "name": "connectionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Can be used as input for further pipeline actions.",
            "stability": "experimental",
            "summary": "The output artifact that this action produces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bitbucket/source-action.ts",
            "line": 21
          },
          "name": "output",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "'aws'",
            "stability": "experimental",
            "summary": "The owning user or organization of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bitbucket/source-action.ts",
            "line": 37
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "'aws-cdk'",
            "stability": "experimental",
            "summary": "The name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bitbucket/source-action.ts",
            "line": 44
          },
          "name": "repo",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'master'",
            "stability": "experimental",
            "summary": "The branch to build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bitbucket/source-action.ts",
            "line": 51
          },
          "name": "branch",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "**Note**: if this option is true,\nthen only CodeBuild actions can use the resulting {@link output}.",
            "see": "https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-CodestarConnectionSource.html#action-reference-CodestarConnectionSource-config",
            "stability": "experimental",
            "summary": "Whether the output should be the contents of the repository (which is the default), or a link that allows CodeBuild to clone the repository before building."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/bitbucket/source-action.ts",
            "line": 65
          },
          "name": "codeBuildCloneOutput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.CacheControl": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "docs": {
        "remarks": "Use the provided static factory methods to construct instances of this class.\nUsed in the {@link S3DeployActionProps.cacheControl} property.",
        "see": "https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9",
        "stability": "stable",
        "summary": "Used for HTTP cache-control header, which influences downstream caches."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CacheControl",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/s3/deploy-action.ts",
        "line": 23
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allows you to create an arbitrary cache control directive, in case our support is missing a method for a particular directive."
          },
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 44
          },
          "name": "fromString",
          "parameters": [
            {
              "name": "s",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The 'max-age' cache control directive."
          },
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 37
          },
          "name": "maxAge",
          "parameters": [
            {
              "name": "t",
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The 'must-revalidate' cache control directive."
          },
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 25
          },
          "name": "mustRevalidate",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The 'no-cache' cache control directive."
          },
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 27
          },
          "name": "noCache",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The 'no-transform' cache control directive."
          },
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 29
          },
          "name": "noTransform",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The 'proxy-revalidate' cache control directive."
          },
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 35
          },
          "name": "proxyRevalidate",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The 'private' cache control directive."
          },
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 33
          },
          "name": "setPrivate",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The 'public' cache control directive."
          },
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 31
          },
          "name": "setPublic",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CacheControl"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The 's-max-age' cache control directive."
          },
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 39
          },
          "name": "sMaxAge",
          "parameters": [
            {
              "name": "t",
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CacheControl"
            }
          },
          "static": true
        }
      ],
      "name": "CacheControl",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "the actual text value of the created directive."
          },
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 47
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateReplaceChangeSetAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "remarks": "Creates the change set if it doesn't exist based on the stack name and template that you submit.\nIf the change set exists, AWS CloudFormation deletes it, and then creates a new one.",
        "stability": "stable",
        "summary": "CodePipeline action to prepare a change set."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateReplaceChangeSetAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cloudformation/pipeline-actions.ts",
          "line": 383
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateReplaceChangeSetActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation/pipeline-actions.ts",
        "line": 380
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add statement to the service role assumed by CloudFormation while executing this action."
          },
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 274
          },
          "name": "addToDeploymentRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 391
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "CloudFormationCreateReplaceChangeSetAction",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 278
          },
          "name": "deploymentRole",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateReplaceChangeSetActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for the CloudFormationCreateReplaceChangeSetAction."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateReplaceChangeSetActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation/pipeline-actions.ts",
        "line": 362
      },
      "name": "CloudFormationCreateReplaceChangeSetActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Setting this to `true` affects the defaults for `role` and `capabilities`, if you\ndon't specify any alternatives.\n\nThe default role that will be created for you will have full (i.e., `*`)\npermissions on all resources, and the deployment will have named IAM\ncapabilities (i.e., able to create all IAM resources).\n\nThis is a shorthand that you can use if you fully trust the templates that\nare deployed in this pipeline. If you want more fine-grained permissions,\nuse `addToRolePolicy` and `capabilities` to control what the CloudFormation\ndeployment is allowed to do.",
            "stability": "stable",
            "summary": "Whether to grant full permissions to CloudFormation while deploying this template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 205
          },
          "name": "adminPermissions",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the change set to create or update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 366
          },
          "name": "changeSetName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the stack to apply this action to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 18
          },
          "name": "stackName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Input artifact with the ChangeSet's CloudFormation template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 371
          },
          "name": "templatePath",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ArtifactPath"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- action resides in the same account as the pipeline",
            "remarks": "**Note**: if you specify the `role` property,\nthis is ignored - the action will operate in the same region the passed role does.",
            "stability": "stable",
            "summary": "The AWS account this Action is supposed to operate in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 60
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None, unless `adminPermissions` is true",
            "deprecated": "use {@link cfnCapabilities} instead",
            "remarks": "For stacks that contain certain resources, explicit acknowledgement that AWS CloudFormation\nmight create or update those resources. For example, you must specify `AnonymousIAM` or `NamedIAM`\nif your stack template contains AWS Identity and Access Management (IAM) resources. For more\ninformation see the link below.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities",
            "stability": "deprecated",
            "summary": "Acknowledge certain changes made as part of deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 173
          },
          "name": "capabilities",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudformation.CloudFormationCapabilities"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None, unless `adminPermissions` is true",
            "remarks": "For stacks that contain certain resources,\nexplicit acknowledgement is required that AWS CloudFormation might create or update those resources.\nFor example, you must specify `ANONYMOUS_IAM` or `NAMED_IAM` if your stack template contains AWS\nIdentity and Access Management (IAM) resources.\nFor more information, see the link below.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities",
            "stability": "stable",
            "summary": "Acknowledge certain changes made as part of deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 188
          },
          "name": "cfnCapabilities",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnCapabilities"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "A fresh role with full or no permissions (depending on the value of `adminPermissions`).",
            "remarks": "If not specified, a fresh role is created. The role is created with zero\npermissions unless `adminPermissions` is true, in which case the role will have\nfull permissions.",
            "stability": "stable",
            "summary": "IAM role to assume when deploying changes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 159
          },
          "name": "deploymentRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is especially useful when used in conjunction with the `parameterOverrides` property.\nFor example, if you have:\n\n   parameterOverrides: {\n     'Param1': action1.outputArtifact.bucketName,\n     'Param2': action2.outputArtifact.objectKey,\n   }\n\n, if the output Artifacts of `action1` and `action2` were not used to\nset either the `templateConfiguration` or the `templatePath` properties,\nyou need to make sure to include them in the `extraInputs` -\notherwise, you'll get an \"unrecognized Artifact\" error during your Pipeline's execution.",
            "stability": "stable",
            "summary": "The list of additional input Artifacts for this Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 255
          },
          "name": "extraInputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.Artifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatically generated artifact name.",
            "remarks": "Only applied if `outputFileName` is set as well.",
            "stability": "stable",
            "summary": "The name of the output artifact to generate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 40
          },
          "name": "output",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No output artifact generated",
            "remarks": "The file will contain the result of the call to AWS CloudFormation (for example\nthe call to UpdateStack or CreateChangeSet).\n\nAWS CodePipeline adds the file to the output artifact after performing\nthe specified action.",
            "stability": "stable",
            "summary": "A name for the filename in the output artifact to store the AWS CloudFormation call's result."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 31
          },
          "name": "outputFileName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No overrides",
            "remarks": "Template parameters specified here take precedence over template parameters\nfound in the artifact specified by the `templateConfiguration` property.\n\nWe recommend that you use the template configuration file to specify\nmost of your parameter values. Use parameter overrides to specify only\ndynamic parameter values (values that are unknown until you run the\npipeline).\n\nAll parameter names must be present in the stack template.\n\nNote: the entire object cannot be more than 1kB.",
            "stability": "stable",
            "summary": "Additional template parameters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 238
          },
          "name": "parameterOverrides",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the Action resides in the same region as the Pipeline",
            "remarks": "Note that a cross-region Pipeline requires replication buckets to function correctly.\nYou can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.\nIf you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,\nthat you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.",
            "stability": "stable",
            "summary": "The AWS region the given Action resides in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 51
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No template configuration based on input artifacts",
            "remarks": "The template configuration file should contain a JSON object that should look like this:\n`{ \"Parameters\": {...}, \"Tags\": {...}, \"StackPolicy\": {... }}`. For more information,\nsee [AWS CloudFormation Artifacts](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-cfn-artifacts.html).\n\nNote that if you include sensitive information, such as passwords, restrict access to this\nfile.",
            "stability": "stable",
            "summary": "Input artifact to use for template parameters values and stack policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 219
          },
          "name": "templateConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ArtifactPath"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateUpdateStackAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "remarks": "Creates the stack if the specified stack doesn't exist. If the stack exists,\nAWS CloudFormation updates the stack. Use this action to update existing\nstacks.\n\nAWS CodePipeline won't replace the stack, and will fail deployment if the\nstack is in a failed state. Use `ReplaceOnFailure` for an action that\nwill delete and recreate the stack to try and recover from failed states.\n\nUse this action to automatically replace failed stacks without recovering or\ntroubleshooting them. You would typically choose this mode for testing.",
        "stability": "stable",
        "summary": "CodePipeline action to deploy a stack."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateUpdateStackAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cloudformation/pipeline-actions.ts",
          "line": 452
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateUpdateStackActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation/pipeline-actions.ts",
        "line": 449
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add statement to the service role assumed by CloudFormation while executing this action."
          },
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 274
          },
          "name": "addToDeploymentRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 460
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "CloudFormationCreateUpdateStackAction",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 278
          },
          "name": "deploymentRole",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateUpdateStackActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for the CloudFormationCreateUpdateStackAction."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateUpdateStackActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation/pipeline-actions.ts",
        "line": 413
      },
      "name": "CloudFormationCreateUpdateStackActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Setting this to `true` affects the defaults for `role` and `capabilities`, if you\ndon't specify any alternatives.\n\nThe default role that will be created for you will have full (i.e., `*`)\npermissions on all resources, and the deployment will have named IAM\ncapabilities (i.e., able to create all IAM resources).\n\nThis is a shorthand that you can use if you fully trust the templates that\nare deployed in this pipeline. If you want more fine-grained permissions,\nuse `addToRolePolicy` and `capabilities` to control what the CloudFormation\ndeployment is allowed to do.",
            "stability": "stable",
            "summary": "Whether to grant full permissions to CloudFormation while deploying this template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 205
          },
          "name": "adminPermissions",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the stack to apply this action to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 18
          },
          "name": "stackName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Input artifact with the CloudFormation template to deploy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 417
          },
          "name": "templatePath",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ArtifactPath"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- action resides in the same account as the pipeline",
            "remarks": "**Note**: if you specify the `role` property,\nthis is ignored - the action will operate in the same region the passed role does.",
            "stability": "stable",
            "summary": "The AWS account this Action is supposed to operate in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 60
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None, unless `adminPermissions` is true",
            "deprecated": "use {@link cfnCapabilities} instead",
            "remarks": "For stacks that contain certain resources, explicit acknowledgement that AWS CloudFormation\nmight create or update those resources. For example, you must specify `AnonymousIAM` or `NamedIAM`\nif your stack template contains AWS Identity and Access Management (IAM) resources. For more\ninformation see the link below.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities",
            "stability": "deprecated",
            "summary": "Acknowledge certain changes made as part of deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 173
          },
          "name": "capabilities",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudformation.CloudFormationCapabilities"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None, unless `adminPermissions` is true",
            "remarks": "For stacks that contain certain resources,\nexplicit acknowledgement is required that AWS CloudFormation might create or update those resources.\nFor example, you must specify `ANONYMOUS_IAM` or `NAMED_IAM` if your stack template contains AWS\nIdentity and Access Management (IAM) resources.\nFor more information, see the link below.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities",
            "stability": "stable",
            "summary": "Acknowledge certain changes made as part of deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 188
          },
          "name": "cfnCapabilities",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnCapabilities"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "A fresh role with full or no permissions (depending on the value of `adminPermissions`).",
            "remarks": "If not specified, a fresh role is created. The role is created with zero\npermissions unless `adminPermissions` is true, in which case the role will have\nfull permissions.",
            "stability": "stable",
            "summary": "IAM role to assume when deploying changes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 159
          },
          "name": "deploymentRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is especially useful when used in conjunction with the `parameterOverrides` property.\nFor example, if you have:\n\n   parameterOverrides: {\n     'Param1': action1.outputArtifact.bucketName,\n     'Param2': action2.outputArtifact.objectKey,\n   }\n\n, if the output Artifacts of `action1` and `action2` were not used to\nset either the `templateConfiguration` or the `templatePath` properties,\nyou need to make sure to include them in the `extraInputs` -\notherwise, you'll get an \"unrecognized Artifact\" error during your Pipeline's execution.",
            "stability": "stable",
            "summary": "The list of additional input Artifacts for this Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 255
          },
          "name": "extraInputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.Artifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatically generated artifact name.",
            "remarks": "Only applied if `outputFileName` is set as well.",
            "stability": "stable",
            "summary": "The name of the output artifact to generate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 40
          },
          "name": "output",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No output artifact generated",
            "remarks": "The file will contain the result of the call to AWS CloudFormation (for example\nthe call to UpdateStack or CreateChangeSet).\n\nAWS CodePipeline adds the file to the output artifact after performing\nthe specified action.",
            "stability": "stable",
            "summary": "A name for the filename in the output artifact to store the AWS CloudFormation call's result."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 31
          },
          "name": "outputFileName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No overrides",
            "remarks": "Template parameters specified here take precedence over template parameters\nfound in the artifact specified by the `templateConfiguration` property.\n\nWe recommend that you use the template configuration file to specify\nmost of your parameter values. Use parameter overrides to specify only\ndynamic parameter values (values that are unknown until you run the\npipeline).\n\nAll parameter names must be present in the stack template.\n\nNote: the entire object cannot be more than 1kB.",
            "stability": "stable",
            "summary": "Additional template parameters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 238
          },
          "name": "parameterOverrides",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the Action resides in the same region as the Pipeline",
            "remarks": "Note that a cross-region Pipeline requires replication buckets to function correctly.\nYou can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.\nIf you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,\nthat you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.",
            "stability": "stable",
            "summary": "The AWS region the given Action resides in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 51
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If this is set to true and the stack is in a failed state (one of\nROLLBACK_COMPLETE, ROLLBACK_FAILED, CREATE_FAILED, DELETE_FAILED, or\nUPDATE_ROLLBACK_FAILED), AWS CloudFormation deletes the stack and then\ncreates a new stack.\n\nIf this is not set to true and the stack is in a failed state,\nthe deployment fails.",
            "stability": "stable",
            "summary": "Replace the stack if it's in a failed state."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 432
          },
          "name": "replaceOnFailure",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No template configuration based on input artifacts",
            "remarks": "The template configuration file should contain a JSON object that should look like this:\n`{ \"Parameters\": {...}, \"Tags\": {...}, \"StackPolicy\": {... }}`. For more information,\nsee [AWS CloudFormation Artifacts](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-cfn-artifacts.html).\n\nNote that if you include sensitive information, such as passwords, restrict access to this\nfile.",
            "stability": "stable",
            "summary": "Input artifact to use for template parameters values and stack policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 219
          },
          "name": "templateConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ArtifactPath"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.CloudFormationDeleteStackAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "remarks": "Deletes a stack. If you specify a stack that doesn't exist, the action completes successfully\nwithout deleting a stack.",
        "stability": "stable",
        "summary": "CodePipeline action to delete a stack."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CloudFormationDeleteStackAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cloudformation/pipeline-actions.ts",
          "line": 493
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CloudFormationDeleteStackActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation/pipeline-actions.ts",
        "line": 490
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add statement to the service role assumed by CloudFormation while executing this action."
          },
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 274
          },
          "name": "addToDeploymentRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 499
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "CloudFormationDeleteStackAction",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 278
          },
          "name": "deploymentRole",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.CloudFormationDeleteStackActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for the CloudFormationDeleteStackAction."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CloudFormationDeleteStackActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation/pipeline-actions.ts",
        "line": 481
      },
      "name": "CloudFormationDeleteStackActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Setting this to `true` affects the defaults for `role` and `capabilities`, if you\ndon't specify any alternatives.\n\nThe default role that will be created for you will have full (i.e., `*`)\npermissions on all resources, and the deployment will have named IAM\ncapabilities (i.e., able to create all IAM resources).\n\nThis is a shorthand that you can use if you fully trust the templates that\nare deployed in this pipeline. If you want more fine-grained permissions,\nuse `addToRolePolicy` and `capabilities` to control what the CloudFormation\ndeployment is allowed to do.",
            "stability": "stable",
            "summary": "Whether to grant full permissions to CloudFormation while deploying this template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 205
          },
          "name": "adminPermissions",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the stack to apply this action to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 18
          },
          "name": "stackName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- action resides in the same account as the pipeline",
            "remarks": "**Note**: if you specify the `role` property,\nthis is ignored - the action will operate in the same region the passed role does.",
            "stability": "stable",
            "summary": "The AWS account this Action is supposed to operate in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 60
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None, unless `adminPermissions` is true",
            "deprecated": "use {@link cfnCapabilities} instead",
            "remarks": "For stacks that contain certain resources, explicit acknowledgement that AWS CloudFormation\nmight create or update those resources. For example, you must specify `AnonymousIAM` or `NamedIAM`\nif your stack template contains AWS Identity and Access Management (IAM) resources. For more\ninformation see the link below.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities",
            "stability": "deprecated",
            "summary": "Acknowledge certain changes made as part of deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 173
          },
          "name": "capabilities",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudformation.CloudFormationCapabilities"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None, unless `adminPermissions` is true",
            "remarks": "For stacks that contain certain resources,\nexplicit acknowledgement is required that AWS CloudFormation might create or update those resources.\nFor example, you must specify `ANONYMOUS_IAM` or `NAMED_IAM` if your stack template contains AWS\nIdentity and Access Management (IAM) resources.\nFor more information, see the link below.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities",
            "stability": "stable",
            "summary": "Acknowledge certain changes made as part of deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 188
          },
          "name": "cfnCapabilities",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnCapabilities"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "A fresh role with full or no permissions (depending on the value of `adminPermissions`).",
            "remarks": "If not specified, a fresh role is created. The role is created with zero\npermissions unless `adminPermissions` is true, in which case the role will have\nfull permissions.",
            "stability": "stable",
            "summary": "IAM role to assume when deploying changes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 159
          },
          "name": "deploymentRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is especially useful when used in conjunction with the `parameterOverrides` property.\nFor example, if you have:\n\n   parameterOverrides: {\n     'Param1': action1.outputArtifact.bucketName,\n     'Param2': action2.outputArtifact.objectKey,\n   }\n\n, if the output Artifacts of `action1` and `action2` were not used to\nset either the `templateConfiguration` or the `templatePath` properties,\nyou need to make sure to include them in the `extraInputs` -\notherwise, you'll get an \"unrecognized Artifact\" error during your Pipeline's execution.",
            "stability": "stable",
            "summary": "The list of additional input Artifacts for this Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 255
          },
          "name": "extraInputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.Artifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatically generated artifact name.",
            "remarks": "Only applied if `outputFileName` is set as well.",
            "stability": "stable",
            "summary": "The name of the output artifact to generate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 40
          },
          "name": "output",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No output artifact generated",
            "remarks": "The file will contain the result of the call to AWS CloudFormation (for example\nthe call to UpdateStack or CreateChangeSet).\n\nAWS CodePipeline adds the file to the output artifact after performing\nthe specified action.",
            "stability": "stable",
            "summary": "A name for the filename in the output artifact to store the AWS CloudFormation call's result."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 31
          },
          "name": "outputFileName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No overrides",
            "remarks": "Template parameters specified here take precedence over template parameters\nfound in the artifact specified by the `templateConfiguration` property.\n\nWe recommend that you use the template configuration file to specify\nmost of your parameter values. Use parameter overrides to specify only\ndynamic parameter values (values that are unknown until you run the\npipeline).\n\nAll parameter names must be present in the stack template.\n\nNote: the entire object cannot be more than 1kB.",
            "stability": "stable",
            "summary": "Additional template parameters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 238
          },
          "name": "parameterOverrides",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the Action resides in the same region as the Pipeline",
            "remarks": "Note that a cross-region Pipeline requires replication buckets to function correctly.\nYou can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.\nIf you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,\nthat you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.",
            "stability": "stable",
            "summary": "The AWS region the given Action resides in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 51
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No template configuration based on input artifacts",
            "remarks": "The template configuration file should contain a JSON object that should look like this:\n`{ \"Parameters\": {...}, \"Tags\": {...}, \"StackPolicy\": {... }}`. For more information,\nsee [AWS CloudFormation Artifacts](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-cfn-artifacts.html).\n\nNote that if you include sensitive information, such as passwords, restrict access to this\nfile.",
            "stability": "stable",
            "summary": "Input artifact to use for template parameters values and stack policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 219
          },
          "name": "templateConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ArtifactPath"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.CloudFormationExecuteChangeSetAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "stability": "stable",
        "summary": "CodePipeline action to execute a prepared change set."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CloudFormationExecuteChangeSetAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cloudformation/pipeline-actions.ts",
          "line": 124
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CloudFormationExecuteChangeSetActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudformation/pipeline-actions.ts",
        "line": 121
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 130
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "CloudFormationExecuteChangeSetAction"
    },
    "@aws-cdk/aws-codepipeline-actions.CloudFormationExecuteChangeSetActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for the CloudFormationExecuteChangeSetAction."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CloudFormationExecuteChangeSetActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudformation/pipeline-actions.ts",
        "line": 111
      },
      "name": "CloudFormationExecuteChangeSetActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the change set to execute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 115
          },
          "name": "changeSetName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the stack to apply this action to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 18
          },
          "name": "stackName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- action resides in the same account as the pipeline",
            "remarks": "**Note**: if you specify the `role` property,\nthis is ignored - the action will operate in the same region the passed role does.",
            "stability": "stable",
            "summary": "The AWS account this Action is supposed to operate in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 60
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatically generated artifact name.",
            "remarks": "Only applied if `outputFileName` is set as well.",
            "stability": "stable",
            "summary": "The name of the output artifact to generate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 40
          },
          "name": "output",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No output artifact generated",
            "remarks": "The file will contain the result of the call to AWS CloudFormation (for example\nthe call to UpdateStack or CreateChangeSet).\n\nAWS CodePipeline adds the file to the output artifact after performing\nthe specified action.",
            "stability": "stable",
            "summary": "A name for the filename in the output artifact to store the AWS CloudFormation call's result."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 31
          },
          "name": "outputFileName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the Action resides in the same region as the Pipeline",
            "remarks": "Note that a cross-region Pipeline requires replication buckets to function correctly.\nYou can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.\nIf you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,\nthat you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.",
            "stability": "stable",
            "summary": "The AWS region the given Action resides in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudformation/pipeline-actions.ts",
            "line": 51
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.CodeBuildAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "stability": "stable",
        "summary": "CodePipeline build action that uses AWS CodeBuild."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CodeBuildAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/codebuild/build-action.ts",
          "line": 113
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CodeBuildActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/codebuild/build-action.ts",
        "line": 110
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/codebuild/build-action.ts",
            "line": 142
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        },
        {
          "docs": {
            "remarks": "Variables in CodeBuild actions are defined using the 'exported-variables' subsection of the 'env'\nsection of the buildspec.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-syntax",
            "stability": "stable",
            "summary": "Reference a CodePipeline variable defined by the CodeBuild project this action points to."
          },
          "locationInModule": {
            "filename": "lib/codebuild/build-action.ts",
            "line": 138
          },
          "name": "variable",
          "parameters": [
            {
              "docs": {
                "remarks": "A variable by this name must be present in the 'exported-variables' section of the buildspec",
                "summary": "the name of the variable to reference."
              },
              "name": "variableName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "CodeBuildAction"
    },
    "@aws-cdk/aws-codepipeline-actions.CodeBuildActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of the {@link CodeBuildAction CodeBuild build CodePipeline action}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CodeBuildActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild/build-action.ts",
        "line": 34
      },
      "name": "CodeBuildActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The source to use as input for this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild/build-action.ts",
            "line": 38
          },
          "name": "input",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The action's Project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild/build-action.ts",
            "line": 67
          },
          "name": "project",
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether to check for the presence of any secrets in the environment variables of the default type, BuildEnvironmentVariableType.PLAINTEXT. Since using a secret for the value of that kind of variable would result in it being displayed in plain text in the AWS Console, the construct will throw an exception if it detects a secret was passed there. Pass this property as false if you want to skip this validation, and keep using a secret in a plain text environment variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild/build-action.ts",
            "line": 95
          },
          "name": "checkSecretsInPlainTextEnvVariables",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No additional environment variables are specified.",
            "remarks": "If a variable with the same name was set both on the project level, and here,\nthis value will take precedence.",
            "stability": "stable",
            "summary": "The environment variables to pass to the CodeBuild project when this action executes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild/build-action.ts",
            "line": 84
          },
          "name": "environmentVariables",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codebuild.BuildEnvironmentVariable"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Enabling this will enable batch builds on the CodeBuild project.",
            "stability": "stable",
            "summary": "Trigger a batch build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild/build-action.ts",
            "line": 104
          },
          "name": "executeBatchBuild",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The directories the additional inputs will be available at are available\nduring the project's build in the CODEBUILD_SRC_DIR_<artifact-name> environment variables.\nThe project's build always starts in the directory with the primary input artifact checked out,\nthe one pointed to by the {@link input} property.\nFor more information,\nsee https://docs.aws.amazon.com/codebuild/latest/userguide/sample-multi-in-out.html .",
            "stability": "stable",
            "summary": "The list of additional input Artifacts for this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild/build-action.ts",
            "line": 50
          },
          "name": "extraInputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.Artifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the action will not have any outputs",
            "remarks": "**Note**: if you specify more than one output Artifact here,\nyou cannot use the primary 'artifacts' section of the buildspec;\nyou have to use the 'secondary-artifacts' section instead.\nSee https://docs.aws.amazon.com/codebuild/latest/userguide/sample-multi-in-out.html\nfor details.",
            "stability": "stable",
            "summary": "The list of output Artifacts for this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild/build-action.ts",
            "line": 62
          },
          "name": "outputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.Artifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CodeBuildActionType.BUILD",
            "stability": "stable",
            "summary": "The type of the action that determines its CodePipeline Category - Build, or Test."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild/build-action.ts",
            "line": 75
          },
          "name": "type",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline-actions.CodeBuildActionType"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.CodeBuildActionType": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "docs": {
        "remarks": "The default is Build.",
        "stability": "stable",
        "summary": "The type of the CodeBuild action that determines its CodePipeline Category - Build, or Test."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CodeBuildActionType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/codebuild/build-action.ts",
        "line": 18
      },
      "members": [
        {
          "docs": {
            "remarks": "This is the default.",
            "stability": "stable",
            "summary": "The action will have the Build Category."
          },
          "name": "BUILD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The action will have the Test Category."
          },
          "name": "TEST"
        }
      ],
      "name": "CodeBuildActionType"
    },
    "@aws-cdk/aws-codepipeline-actions.CodeCommitSourceAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "stability": "stable",
        "summary": "CodePipeline Source that is provided by an AWS CodeCommit repository."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CodeCommitSourceAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/codecommit/source-action.ts",
          "line": 122
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CodeCommitSourceActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/codecommit/source-action.ts",
        "line": 110
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/codecommit/source-action.ts",
            "line": 157
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "CodeCommitSourceAction",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The variables emitted by this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codecommit/source-action.ts",
            "line": 146
          },
          "name": "variables",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline-actions.CodeCommitSourceVariables"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.CodeCommitSourceActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of the {@link CodeCommitSourceAction CodeCommit source CodePipeline Action}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CodeCommitSourceActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codecommit/source-action.ts",
        "line": 62
      },
      "name": "CodeCommitSourceActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codecommit/source-action.ts",
            "line": 66
          },
          "name": "output",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The CodeCommit repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codecommit/source-action.ts",
            "line": 83
          },
          "name": "repository",
          "type": {
            "fqn": "@aws-cdk/aws-codecommit.IRepository"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'master'",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codecommit/source-action.ts",
            "line": 71
          },
          "name": "branch",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "**Note**: if this option is true,\nthen only CodeBuild actions can use the resulting {@link output}.",
            "see": "https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-CodeCommit.html",
            "stability": "stable",
            "summary": "Whether the output should be the contents of the repository (which is the default), or a link that allows CodeBuild to clone the repository before building."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codecommit/source-action.ts",
            "line": 104
          },
          "name": "codeBuildCloneOutput",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "a new role will be created.",
            "remarks": "Used only when trigger value is CodeCommitTrigger.EVENTS.",
            "stability": "stable",
            "summary": "Role to be used by on commit event rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codecommit/source-action.ts",
            "line": 91
          },
          "name": "eventRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CodeCommitTrigger.EVENTS",
            "stability": "stable",
            "summary": "How should CodePipeline detect source changes for this Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codecommit/source-action.ts",
            "line": 78
          },
          "name": "trigger",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline-actions.CodeCommitTrigger"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.CodeCommitSourceVariables": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The CodePipeline variables emitted by the CodeCommit source Action."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CodeCommitSourceVariables",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codecommit/source-action.ts",
        "line": 39
      },
      "name": "CodeCommitSourceVariables",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The date the currently last commit on the tracked branch was authored, in ISO-8601 format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codecommit/source-action.ts",
            "line": 47
          },
          "name": "authorDate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the branch this action tracks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codecommit/source-action.ts",
            "line": 44
          },
          "name": "branchName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The SHA1 hash of the currently last commit on the tracked branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codecommit/source-action.ts",
            "line": 53
          },
          "name": "commitId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The message of the currently last commit on the tracked branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codecommit/source-action.ts",
            "line": 56
          },
          "name": "commitMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The date the currently last commit on the tracked branch was committed, in ISO-8601 format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codecommit/source-action.ts",
            "line": 50
          },
          "name": "committerDate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the repository this action points to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codecommit/source-action.ts",
            "line": 41
          },
          "name": "repositoryName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.CodeCommitTrigger": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "docs": {
        "remarks": "This is the type of the {@link CodeCommitSourceAction.trigger} property.",
        "stability": "stable",
        "summary": "How should the CodeCommit Action detect changes."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CodeCommitTrigger",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/codecommit/source-action.ts",
        "line": 17
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Action will never detect changes - the Pipeline it's part of will only begin a run when explicitly started."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CodePipeline will poll the repository to detect changes."
          },
          "name": "POLL"
        },
        {
          "docs": {
            "remarks": "This is the default method of detecting changes.",
            "stability": "stable",
            "summary": "CodePipeline will use CloudWatch Events to be notified of changes."
          },
          "name": "EVENTS"
        }
      ],
      "name": "CodeCommitTrigger"
    },
    "@aws-cdk/aws-codepipeline-actions.CodeDeployEcsContainerImageInput": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for replacing a placeholder string in the ECS task definition template file with an image URI."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CodeDeployEcsContainerImageInput",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy/ecs-deploy-action.ts",
        "line": 15
      },
      "name": "CodeDeployEcsContainerImageInput",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The artifact's `imageDetails.json` file must be a JSON file containing an\n`ImageURI` property.  For example:\n`{ \"ImageURI\": \"ACCOUNTID.dkr.ecr.us-west-2.amazonaws.com/dk-image-repo@sha256:example3\" }`",
            "stability": "stable",
            "summary": "The artifact that contains an `imageDetails.json` file with the image URI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy/ecs-deploy-action.ts",
            "line": 23
          },
          "name": "input",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "IMAGE",
            "remarks": "The placeholder string must be surrounded by angle brackets in the template file.\nFor example, if the task definition template file contains a placeholder like\n`\"image\": \"<PLACEHOLDER>\"`, then the `taskDefinitionPlaceholder` value should\nbe `PLACEHOLDER`.",
            "stability": "stable",
            "summary": "The placeholder string in the ECS task definition template file that will be replaced with the image URI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy/ecs-deploy-action.ts",
            "line": 36
          },
          "name": "taskDefinitionPlaceholder",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.CodeDeployEcsDeployAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CodeDeployEcsDeployAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/codedeploy/ecs-deploy-action.ts",
          "line": 115
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CodeDeployEcsDeployActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/codedeploy/ecs-deploy-action.ts",
        "line": 112
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/codedeploy/ecs-deploy-action.ts",
            "line": 142
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "CodeDeployEcsDeployAction"
    },
    "@aws-cdk/aws-codepipeline-actions.CodeDeployEcsDeployActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of the {@link CodeDeployEcsDeployAction CodeDeploy ECS deploy CodePipeline Action}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CodeDeployEcsDeployActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy/ecs-deploy-action.ts",
        "line": 42
      },
      "name": "CodeDeployEcsDeployActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The CodeDeploy ECS Deployment Group to deploy to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy/ecs-deploy-action.ts",
            "line": 46
          },
          "name": "deploymentGroup",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IEcsDeploymentGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- one of this property, or `appSpecTemplateInput`, is required",
            "remarks": "During deployment, a new task definition will be registered\nwith ECS, and the new task definition ID will be inserted into\nthe CodeDeploy AppSpec file.  The AppSpec file contents will be\nprovided to CodeDeploy for the deployment.\n\nUse this property if you want to use a different name for this file than the default 'appspec.yaml'.\nIf you use this property, you don't need to specify the `appSpecTemplateInput` property.",
            "stability": "stable",
            "summary": "The name of the CodeDeploy AppSpec file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy/ecs-deploy-action.ts",
            "line": 100
          },
          "name": "appSpecTemplateFile",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ArtifactPath"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- one of this property, or `appSpecTemplateFile`, is required",
            "remarks": "During deployment, a new task definition will be registered\nwith ECS, and the new task definition ID will be inserted into\nthe CodeDeploy AppSpec file.  The AppSpec file contents will be\nprovided to CodeDeploy for the deployment.\n\nIf you use this property, it's assumed the file is called 'appspec.yaml'.\nIf your AppSpec file uses a different filename, leave this property empty,\nand use the `appSpecTemplateFile` property instead.",
            "stability": "stable",
            "summary": "The artifact containing the CodeDeploy AppSpec file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy/ecs-deploy-action.ts",
            "line": 86
          },
          "name": "appSpecTemplateInput",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Provide pairs of an image details input artifact and a placeholder string\nthat will be used to dynamically update the ECS task definition template\nfile prior to deployment. A maximum of 4 images can be given.",
            "stability": "stable",
            "summary": "Configuration for dynamically updated images in the task definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy/ecs-deploy-action.ts",
            "line": 109
          },
          "name": "containerImageInputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline-actions.CodeDeployEcsContainerImageInput"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- one of this property, or `taskDefinitionTemplateInput`, is required",
            "remarks": "During deployment, the task definition template file contents\nwill be registered with ECS.\n\nUse this property if you want to use a different name for this file than the default 'taskdef.json'.\nIf you use this property, you don't need to specify the `taskDefinitionTemplateInput` property.",
            "stability": "stable",
            "summary": "The name of the ECS task definition template file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy/ecs-deploy-action.ts",
            "line": 71
          },
          "name": "taskDefinitionTemplateFile",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ArtifactPath"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- one of this property, or `taskDefinitionTemplateFile`, is required",
            "remarks": "During deployment, the task definition template file contents\nwill be registered with ECS.\n\nIf you use this property, it's assumed the file is called 'taskdef.json'.\nIf your task definition template uses a different filename, leave this property empty,\nand use the `taskDefinitionTemplateFile` property instead.",
            "stability": "stable",
            "summary": "The artifact containing the ECS task definition template file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy/ecs-deploy-action.ts",
            "line": 59
          },
          "name": "taskDefinitionTemplateInput",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.CodeDeployServerDeployAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CodeDeployServerDeployAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/codedeploy/server-deploy-action.ts",
          "line": 30
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.CodeDeployServerDeployActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/codedeploy/server-deploy-action.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/codedeploy/server-deploy-action.ts",
            "line": 43
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "CodeDeployServerDeployAction"
    },
    "@aws-cdk/aws-codepipeline-actions.CodeDeployServerDeployActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of the {@link CodeDeployServerDeployAction CodeDeploy server deploy CodePipeline Action}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.CodeDeployServerDeployActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy/server-deploy-action.ts",
        "line": 15
      },
      "name": "CodeDeployServerDeployActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The CodeDeploy server Deployment Group to deploy to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy/server-deploy-action.ts",
            "line": 24
          },
          "name": "deploymentGroup",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IServerDeploymentGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The source to use as input for deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy/server-deploy-action.ts",
            "line": 19
          },
          "name": "input",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.EcrSourceAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "remarks": "Will trigger the pipeline as soon as the target tag in the repository\nchanges, but only if there is a CloudTrail Trail in the account that\ncaptures the ECR event.",
        "stability": "stable",
        "summary": "The ECR Repository source CodePipeline Action."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.EcrSourceAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/ecr/source-action.ts",
          "line": 65
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.EcrSourceActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecr/source-action.ts",
        "line": 62
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/ecr/source-action.ts",
            "line": 89
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "EcrSourceAction",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The variables emitted by this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr/source-action.ts",
            "line": 79
          },
          "name": "variables",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline-actions.EcrSourceVariables"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.EcrSourceActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of {@link EcrSourceAction}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.EcrSourceActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecr/source-action.ts",
        "line": 36
      },
      "name": "EcrSourceActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr/source-action.ts",
            "line": 47
          },
          "name": "output",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The repository that will be watched for changes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr/source-action.ts",
            "line": 52
          },
          "name": "repository",
          "type": {
            "fqn": "@aws-cdk/aws-ecr.IRepository"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'latest'",
            "stability": "stable",
            "summary": "The image tag that will be checked for changes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr/source-action.ts",
            "line": 42
          },
          "name": "imageTag",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.EcrSourceVariables": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The CodePipeline variables emitted by the ECR source Action."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.EcrSourceVariables",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecr/source-action.ts",
        "line": 16
      },
      "name": "EcrSourceVariables",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The digest of the current image, in the form '<digest type>:<digest value>'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr/source-action.ts",
            "line": 24
          },
          "name": "imageDigest",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Docker tag of the current image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr/source-action.ts",
            "line": 27
          },
          "name": "imageTag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The full ECR Docker URI of the current image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr/source-action.ts",
            "line": 30
          },
          "name": "imageUri",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "In ECR, this is usually the ID of the AWS account owning it.",
            "stability": "stable",
            "summary": "The identifier of the registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr/source-action.ts",
            "line": 18
          },
          "name": "registryId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The physical name of the repository that this action tracks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr/source-action.ts",
            "line": 21
          },
          "name": "repositoryName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.EcsDeployAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "stability": "stable",
        "summary": "CodePipeline Action to deploy an ECS Service."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.EcsDeployAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/ecs/deploy-action.ts",
          "line": 64
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.EcsDeployActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs/deploy-action.ts",
        "line": 60
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/ecs/deploy-action.ts",
            "line": 83
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "EcsDeployAction"
    },
    "@aws-cdk/aws-codepipeline-actions.EcsDeployActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of {@link EcsDeployAction}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.EcsDeployActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/deploy-action.ts",
        "line": 15
      },
      "name": "EcsDeployActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ECS Service to deploy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/deploy-action.ts",
            "line": 46
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.IBaseService"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 60 minutes",
            "remarks": "Value must be between 1-60.",
            "see": "https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-ECS.html",
            "stability": "stable",
            "summary": "Timeout for the ECS deployment in minutes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/deploy-action.ts",
            "line": 54
          },
          "name": "deploymentTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- one of this property, or `input`, is required",
            "remarks": "The JSON file is a list of objects,\neach with 2 keys: `name` is the name of the container in the Task Definition,\nand `imageUri` is the Docker image URI you want to update your service with.\nUse this property if you want to use a different name for this file than the default 'imagedefinitions.json'.\nIf you use this property, you don't need to specify the `input` property.",
            "see": "https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-create.html#pipelines-create-image-definitions",
            "stability": "stable",
            "summary": "The name of the JSON image definitions file to use for deployments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/deploy-action.ts",
            "line": 41
          },
          "name": "imageFile",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ArtifactPath"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- one of this property, or `imageFile`, is required",
            "remarks": "The JSON file is a list of objects,\neach with 2 keys: `name` is the name of the container in the Task Definition,\nand `imageUri` is the Docker image URI you want to update your service with.\nIf you use this property, it's assumed the file is called 'imagedefinitions.json'.\nIf your build uses a different file, leave this property empty,\nand use the `imageFile` property instead.",
            "see": "https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-create.html#pipelines-create-image-definitions",
            "stability": "stable",
            "summary": "The input artifact that contains the JSON image definitions file to use for deployments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/deploy-action.ts",
            "line": 28
          },
          "name": "input",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.GitHubSourceAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "stability": "stable",
        "summary": "Source that is provided by a GitHub repository."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.GitHubSourceAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/github/source-action.ts",
          "line": 103
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.GitHubSourceActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/github/source-action.ts",
        "line": 100
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/github/source-action.ts",
            "line": 129
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "_options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "GitHubSourceAction",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The variables emitted by this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/github/source-action.ts",
            "line": 117
          },
          "name": "variables",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline-actions.GitHubSourceVariables"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.GitHubSourceActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of the {@link GitHubSourceAction GitHub source action}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.GitHubSourceActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/github/source-action.ts",
        "line": 42
      },
      "name": "GitHubSourceActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "It is recommended to use a Secrets Manager `Secret` to obtain the token:\n\n   const oauth = cdk.SecretValue.secretsManager('my-github-token');\n   new GitHubSource(this, 'GitHubAction', { oauthToken: oauth, ... });\n\nThe GitHub Personal Access Token should have these scopes:\n\n* **repo** - to read the repository\n* **admin:repo_hook** - if you plan to use webhooks (true by default)",
            "see": "https://docs.aws.amazon.com/codepipeline/latest/userguide/appendix-github-oauth.html#GitHub-create-personal-token-CLI",
            "stability": "stable",
            "summary": "A GitHub OAuth token to use for authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/github/source-action.ts",
            "line": 80
          },
          "name": "oauthToken",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/github/source-action.ts",
            "line": 46
          },
          "name": "output",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The GitHub account/user that owns the repo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/github/source-action.ts",
            "line": 51
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the repo, without the username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/github/source-action.ts",
            "line": 56
          },
          "name": "repo",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"master\"",
            "stability": "stable",
            "summary": "The branch to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/github/source-action.ts",
            "line": 63
          },
          "name": "branch",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "GitHubTrigger.WEBHOOK",
            "remarks": "With the default value \"WEBHOOK\", a webhook is created in GitHub that triggers the action\nWith \"POLL\", CodePipeline periodically checks the source for changes\nWith \"None\", the action is not triggered through changes in the source\n\nTo use `WEBHOOK`, your GitHub Personal Access Token should have\n**admin:repo_hook** scope (in addition to the regular **repo** scope).",
            "stability": "stable",
            "summary": "How AWS CodePipeline should be triggered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/github/source-action.ts",
            "line": 94
          },
          "name": "trigger",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline-actions.GitHubTrigger"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.GitHubSourceVariables": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The CodePipeline variables emitted by GitHub source Action."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.GitHubSourceVariables",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/github/source-action.ts",
        "line": 22
      },
      "name": "GitHubSourceVariables",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The date the currently last commit on the tracked branch was authored, in ISO-8601 format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/github/source-action.ts",
            "line": 28
          },
          "name": "authorDate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the branch this action tracks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/github/source-action.ts",
            "line": 26
          },
          "name": "branchName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The SHA1 hash of the currently last commit on the tracked branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/github/source-action.ts",
            "line": 32
          },
          "name": "commitId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The message of the currently last commit on the tracked branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/github/source-action.ts",
            "line": 34
          },
          "name": "commitMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The date the currently last commit on the tracked branch was committed, in ISO-8601 format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/github/source-action.ts",
            "line": 30
          },
          "name": "committerDate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The GitHub API URL of the currently last commit on the tracked branch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/github/source-action.ts",
            "line": 36
          },
          "name": "commitUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the repository this action points to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/github/source-action.ts",
            "line": 24
          },
          "name": "repositoryName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.GitHubTrigger": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "docs": {
        "stability": "stable",
        "summary": "If and how the GitHub source action should be triggered."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.GitHubTrigger",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/github/source-action.ts",
        "line": 13
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "POLL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "WEBHOOK"
        }
      ],
      "name": "GitHubTrigger"
    },
    "@aws-cdk/aws-codepipeline-actions.IJenkinsProvider": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "docs": {
        "remarks": "If you want to create a new Jenkins provider managed alongside your CDK code,\ninstantiate the {@link JenkinsProvider} class directly.\n\nIf you want to reference an already registered provider,\nuse the {@link JenkinsProvider#fromJenkinsProviderAttributes} method.",
        "stability": "stable",
        "summary": "A Jenkins provider."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.IJenkinsProvider",
      "interfaces": [
        "@aws-cdk/core.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jenkins/jenkins-provider.ts",
        "line": 19
      },
      "name": "IJenkinsProvider",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 20
          },
          "name": "providerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 21
          },
          "name": "serverUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 22
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.JenkinsAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "see": "https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-four-stage-pipeline.html",
        "stability": "stable",
        "summary": "Jenkins build CodePipeline Action."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.JenkinsAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/jenkins/jenkins-action.ts",
          "line": 69
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.JenkinsActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/jenkins/jenkins-action.ts",
        "line": 66
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-action.ts",
            "line": 84
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "_options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "JenkinsAction"
    },
    "@aws-cdk/aws-codepipeline-actions.JenkinsActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of {@link JenkinsAction}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.JenkinsActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jenkins/jenkins-action.ts",
        "line": 31
      },
      "name": "JenkinsActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Jenkins Provider for this Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-action.ts",
            "line": 45
          },
          "name": "jenkinsProvider",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline-actions.IJenkinsProvider"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "'MyJob'",
            "stability": "stable",
            "summary": "The name of the project (sometimes also called job, or task) on your Jenkins installation that will be invoked by this Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-action.ts",
            "line": 53
          },
          "name": "projectName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of the Action - Build, or Test."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-action.ts",
            "line": 58
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline-actions.JenkinsActionType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The source to use as input for this build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-action.ts",
            "line": 35
          },
          "name": "inputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.Artifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-action.ts",
            "line": 40
          },
          "name": "outputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.Artifact"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.JenkinsActionType": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "docs": {
        "remarks": "Note that a Jenkins provider, even if it has the same name,\nmust be separately registered for each type.",
        "stability": "stable",
        "summary": "The type of the Jenkins Action that determines its CodePipeline Category - Build, or Test."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.JenkinsActionType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/jenkins/jenkins-action.ts",
        "line": 16
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Action will have the Build Category."
          },
          "name": "BUILD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Action will have the Test Category."
          },
          "name": "TEST"
        }
      ],
      "name": "JenkinsActionType"
    },
    "@aws-cdk/aws-codepipeline-actions.JenkinsProvider": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.BaseJenkinsProvider",
      "docs": {
        "see": "#import",
        "stability": "stable",
        "summary": "A class representing Jenkins providers."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.JenkinsProvider",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/jenkins/jenkins-provider.ts",
          "line": 156
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.JenkinsProviderProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/jenkins/jenkins-provider.ts",
        "line": 137
      },
      "methods": [
        {
          "docs": {
            "returns": "a new Construct representing a reference to an existing Jenkins provider",
            "stability": "stable",
            "summary": "Import a Jenkins provider registered either outside the CDK, or in a different CDK Stack."
          },
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 147
          },
          "name": "fromJenkinsProviderAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct for the new provider."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the identifier of the new provider Construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the properties used to identify the existing provider."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline-actions.JenkinsProviderAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.IJenkinsProvider"
            }
          },
          "static": true
        }
      ],
      "name": "JenkinsProvider",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 151
          },
          "name": "providerName",
          "overrides": "@aws-cdk/aws-codepipeline-actions.BaseJenkinsProvider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 152
          },
          "name": "serverUrl",
          "overrides": "@aws-cdk/aws-codepipeline-actions.BaseJenkinsProvider",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.JenkinsProviderAttributes": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for importing an existing Jenkins provider."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.JenkinsProviderAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jenkins/jenkins-provider.ts",
        "line": 48
      },
      "name": "JenkinsProviderAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "example": "'MyJenkinsProvider'",
            "stability": "stable",
            "summary": "The name of the Jenkins provider that you set in the AWS CodePipeline plugin configuration of your Jenkins project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 54
          },
          "name": "providerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "'http://myjenkins.com:8080'",
            "stability": "stable",
            "summary": "The base URL of your Jenkins server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 61
          },
          "name": "serverUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'1'",
            "stability": "stable",
            "summary": "The version of your provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 68
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.JenkinsProviderProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.JenkinsProviderProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jenkins/jenkins-provider.ts",
        "line": 71
      },
      "name": "JenkinsProviderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "example": "'MyJenkinsProvider'",
            "stability": "stable",
            "summary": "The name of the Jenkins provider that you set in the AWS CodePipeline plugin configuration of your Jenkins project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 77
          },
          "name": "providerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "'http://myjenkins.com:8080'",
            "stability": "stable",
            "summary": "The base URL of your Jenkins server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 84
          },
          "name": "serverUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "The Provider will always be registered if you create a {@link JenkinsAction}.",
            "stability": "stable",
            "summary": "Whether to immediately register a Jenkins Provider for the build category."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 99
          },
          "name": "forBuild",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "The Provider will always be registered if you create a {@link JenkinsTestAction}.",
            "stability": "stable",
            "summary": "Whether to immediately register a Jenkins Provider for the test category."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 107
          },
          "name": "forTest",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'1'",
            "stability": "stable",
            "summary": "The version of your provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jenkins/jenkins-provider.ts",
            "line": 91
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.LambdaInvokeAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "see": "https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html",
        "stability": "stable",
        "summary": "CodePipeline invoke Action that is provided by an AWS Lambda function."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.LambdaInvokeAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/lambda/invoke-action.ts",
          "line": 59
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.LambdaInvokeActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda/invoke-action.ts",
        "line": 56
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/lambda/invoke-action.ts",
            "line": 91
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        },
        {
          "docs": {
            "remarks": "Variables in Lambda invoke actions are defined by calling the PutJobSuccessResult CodePipeline API call\nwith the 'outputVariables' property filled.",
            "see": "https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_PutJobSuccessResult.html",
            "stability": "stable",
            "summary": "Reference a CodePipeline variable defined by the Lambda function this action points to."
          },
          "locationInModule": {
            "filename": "lib/lambda/invoke-action.ts",
            "line": 87
          },
          "name": "variable",
          "parameters": [
            {
              "docs": {
                "remarks": "A variable by this name must be present in the 'outputVariables' section of the PutJobSuccessResult\nrequest that the Lambda function calls when the action is invoked",
                "summary": "the name of the variable to reference."
              },
              "name": "variableName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "LambdaInvokeAction"
    },
    "@aws-cdk/aws-codepipeline-actions.LambdaInvokeActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of the {@link LambdaInvokeAction Lambda invoke CodePipeline Action}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.LambdaInvokeActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda/invoke-action.ts",
        "line": 14
      },
      "name": "LambdaInvokeActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The lambda function to invoke."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/invoke-action.ts",
            "line": 48
          },
          "name": "lambda",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the Action will not have any inputs",
            "remarks": "A Lambda Action can have up to 5 inputs.\nThe inputs will appear in the event passed to the Lambda,\nunder the `'CodePipeline.job'.data.inputArtifacts` path.",
            "see": "https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html#actions-invoke-lambda-function-json-event-example",
            "stability": "stable",
            "summary": "The optional input Artifacts of the Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/invoke-action.ts",
            "line": 24
          },
          "name": "inputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.Artifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the Action will not have any outputs",
            "remarks": "A Lambda Action can have up to 5 outputs.\nThe outputs will appear in the event passed to the Lambda,\nunder the `'CodePipeline.job'.data.outputArtifacts` path.\nIt is the responsibility of the Lambda to upload ZIP files with the Artifact contents to the provided locations.",
            "stability": "stable",
            "summary": "The optional names of the output Artifacts of the Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/invoke-action.ts",
            "line": 35
          },
          "name": "outputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.Artifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html#actions-invoke-lambda-function-json-event-example",
            "stability": "stable",
            "summary": "A set of key-value pairs that will be accessible to the invoked Lambda inside the event that the Pipeline will call it with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/invoke-action.ts",
            "line": 43
          },
          "name": "userParameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.ManualApprovalAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "stability": "stable",
        "summary": "Manual approval action."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.ManualApprovalAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/manual-approval-action.ts",
          "line": 51
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.ManualApprovalActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/manual-approval-action.ts",
        "line": 42
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/manual-approval-action.ts",
            "line": 66
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "ManualApprovalAction",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/manual-approval-action.ts",
            "line": 62
          },
          "name": "notificationTopic",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-sns.ITopic"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.ManualApprovalActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of the {@link ManualApprovalAction}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.ManualApprovalActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/manual-approval-action.ts",
        "line": 13
      },
      "name": "ManualApprovalActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Any additional information that you want to include in the notification email message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/manual-approval-action.ts",
            "line": 29
          },
          "name": "additionalInformation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the approval request will not have an external link",
            "stability": "stable",
            "summary": "URL you want to provide to the reviewer as part of the approval request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/manual-approval-action.ts",
            "line": 36
          },
          "name": "externalEntityLink",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Optional SNS topic to send notifications to when an approval is pending."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/manual-approval-action.ts",
            "line": 17
          },
          "name": "notificationTopic",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-sns.ITopic"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this has been provided, but not `notificationTopic`,\na new Topic will be created.",
            "stability": "stable",
            "summary": "A list of email addresses to subscribe to notifications when this Action is pending approval."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/manual-approval-action.ts",
            "line": 24
          },
          "name": "notifyEmails",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.S3DeployAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "stability": "stable",
        "summary": "Deploys the sourceArtifact to Amazon S3."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.S3DeployAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/s3/deploy-action.ts",
          "line": 100
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.S3DeployActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/s3/deploy-action.ts",
        "line": 97
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 113
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "S3DeployAction"
    },
    "@aws-cdk/aws-codepipeline-actions.S3DeployActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of the {@link S3DeployAction S3 deploy Action}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.S3DeployActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3/deploy-action.ts",
        "line": 53
      },
      "name": "S3DeployActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Amazon S3 bucket that is the deploy target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 74
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The input Artifact to deploy to Amazon S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 69
          },
          "name": "input",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the original object ACL",
            "remarks": "This overwrites any existing ACL that was applied to the object.",
            "stability": "stable",
            "summary": "The specified canned ACL to objects deployed to Amazon S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 82
          },
          "name": "accessControl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketAccessControl"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none, decided by the HTTP client",
            "remarks": "The final cache control property will be the result of joining all of the provided array elements with a comma\n(plus a space after the comma).",
            "stability": "stable",
            "summary": "The caching behavior for requests/responses for objects in the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 91
          },
          "name": "cacheControl",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline-actions.CacheControl"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Should the deploy action extract the artifact before deploying to Amazon S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 59
          },
          "name": "extract",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is required if extract is false.",
            "stability": "stable",
            "summary": "The key of the target object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3/deploy-action.ts",
            "line": 64
          },
          "name": "objectKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.S3SourceAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "remarks": "Will trigger the pipeline as soon as the S3 object changes, but only if there is\na CloudTrail Trail in the account that captures the S3 event.",
        "stability": "stable",
        "summary": "Source that is provided by a specific Amazon S3 object."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.S3SourceAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/s3/source-action.ts",
          "line": 89
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.S3SourceActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/s3/source-action.ts",
        "line": 86
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/s3/source-action.ts",
            "line": 114
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "S3SourceAction",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The variables emitted by this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3/source-action.ts",
            "line": 107
          },
          "name": "variables",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline-actions.S3SourceVariables"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.S3SourceActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of the {@link S3SourceAction S3 source Action}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.S3SourceActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3/source-action.ts",
        "line": 51
      },
      "name": "S3SourceActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Amazon S3 bucket that stores the source code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3/source-action.ts",
            "line": 77
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "'path/to/file.zip'",
            "stability": "stable",
            "summary": "The key within the S3 bucket that stores the source code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3/source-action.ts",
            "line": 62
          },
          "name": "bucketKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3/source-action.ts",
            "line": 55
          },
          "name": "output",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "S3Trigger.POLL",
            "remarks": "Note that if this is S3Trigger.EVENTS, you need to make sure to include the source Bucket in a CloudTrail Trail,\nas otherwise the CloudWatch Events will not be emitted.",
            "see": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/log-s3-data-events.html",
            "stability": "stable",
            "summary": "How should CodePipeline detect source changes for this Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3/source-action.ts",
            "line": 72
          },
          "name": "trigger",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline-actions.S3Trigger"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.S3SourceVariables": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The CodePipeline variables emitted by the S3 source Action."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.S3SourceVariables",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3/source-action.ts",
        "line": 40
      },
      "name": "S3SourceVariables",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The e-tag of the S3 version of the object that triggered the build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3/source-action.ts",
            "line": 45
          },
          "name": "eTag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The identifier of the S3 version of the object that triggered the build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3/source-action.ts",
            "line": 42
          },
          "name": "versionId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.S3Trigger": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "docs": {
        "remarks": "This is the type of the {@link S3SourceAction.trigger} property.",
        "stability": "stable",
        "summary": "How should the S3 Action detect changes."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.S3Trigger",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/s3/source-action.ts",
        "line": 16
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Action will never detect changes - the Pipeline it's part of will only begin a run when explicitly started."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "remarks": "This is the default method of detecting changes.",
            "stability": "stable",
            "summary": "CodePipeline will poll S3 to detect changes."
          },
          "name": "POLL"
        },
        {
          "docs": {
            "remarks": "Note that the Bucket that the Action uses needs to be part of a CloudTrail Trail\nfor the events to be delivered.",
            "stability": "stable",
            "summary": "CodePipeline will use CloudWatch Events to be notified of changes."
          },
          "name": "EVENTS"
        }
      ],
      "name": "S3Trigger"
    },
    "@aws-cdk/aws-codepipeline-actions.ServiceCatalogDeployAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "remarks": "**Note**: this class is still experimental, and may have breaking changes in the future!",
        "stability": "experimental",
        "summary": "CodePipeline action to connect to an existing ServiceCatalog product."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.ServiceCatalogDeployAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/servicecatalog/deploy-action.ts",
          "line": 54
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.ServiceCatalogDeployActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/servicecatalog/deploy-action.ts",
        "line": 47
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "experimental",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/servicecatalog/deploy-action.ts",
            "line": 74
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "ServiceCatalogDeployAction"
    },
    "@aws-cdk/aws-codepipeline-actions.ServiceCatalogDeployActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "remarks": "**Note**: this API is still experimental, and may have breaking changes in the future!",
        "stability": "experimental",
        "summary": "Construction properties of the {@link ServiceCatalogDeployAction ServiceCatalog deploy CodePipeline Action}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.ServiceCatalogDeployActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/servicecatalog/deploy-action.ts",
        "line": 17
      },
      "name": "ServiceCatalogDeployActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This product must already exist.",
            "stability": "experimental",
            "summary": "The identifier of the product in the Service Catalog."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicecatalog/deploy-action.ts",
            "line": 37
          },
          "name": "productId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the version of the Service Catalog product to be deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicecatalog/deploy-action.ts",
            "line": 26
          },
          "name": "productVersionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The path to the cloudformation artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicecatalog/deploy-action.ts",
            "line": 21
          },
          "name": "templatePath",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ArtifactPath"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "''",
            "stability": "experimental",
            "summary": "The optional description of this version of the Service Catalog product."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicecatalog/deploy-action.ts",
            "line": 32
          },
          "name": "productVersionDescription",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.StateMachineInput": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "docs": {
        "stability": "stable",
        "summary": "Represents the input for the StateMachine."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.StateMachineInput",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/stepfunctions/invoke-action.ts",
        "line": 14
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "When the input type is FilePath, input artifact and filepath must be specified."
          },
          "locationInModule": {
            "filename": "lib/stepfunctions/invoke-action.ts",
            "line": 19
          },
          "name": "filePath",
          "parameters": [
            {
              "name": "inputFile",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ArtifactPath"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.StateMachineInput"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "When the input type is Literal, input value is passed directly to the state machine input."
          },
          "locationInModule": {
            "filename": "lib/stepfunctions/invoke-action.ts",
            "line": 27
          },
          "name": "literal",
          "parameters": [
            {
              "name": "object",
              "type": {
                "primitive": "json"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.StateMachineInput"
            }
          },
          "static": true
        }
      ],
      "name": "StateMachineInput",
      "properties": [
        {
          "docs": {
            "default": "- none",
            "remarks": "Otherwise, the state machine is invoked with an empty JSON object {}.\n\nWhen InputType is set to FilePath, this field is required.\nAn input artifact is also required when InputType is set to FilePath.",
            "stability": "stable",
            "summary": "When InputType is set to Literal (default), the Input field is used directly as the input for the state machine execution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/invoke-action.ts",
            "line": 59
          },
          "name": "input",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "default": "- the Action will not have any inputs",
            "remarks": "If InputType is set to FilePath, this artifact is required\nand is used to source the input for the state machine execution.",
            "see": "https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-StepFunctions.html#action-reference-StepFunctions-example",
            "stability": "stable",
            "summary": "The optional input Artifact of the Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/invoke-action.ts",
            "line": 39
          },
          "name": "inputArtifact",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "docs": {
            "default": "- Literal",
            "stability": "stable",
            "summary": "Optional StateMachine InputType InputType can be Literal or FilePath."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/invoke-action.ts",
            "line": 47
          },
          "name": "inputType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-codepipeline-actions.StepFunctionInvokeAction": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "base": "@aws-cdk/aws-codepipeline-actions.Action",
      "docs": {
        "stability": "stable",
        "summary": "StepFunctionInvokeAction that is provided by an AWS CodePipeline."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.StepFunctionInvokeAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/stepfunctions/invoke-action.ts",
          "line": 110
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline-actions.StepFunctionsInvokeActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/stepfunctions/invoke-action.ts",
        "line": 107
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method is guaranteed to be called only once for each Action instance.",
            "stability": "stable",
            "summary": "The method called when an Action is attached to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/stepfunctions/invoke-action.ts",
            "line": 128
          },
          "name": "bound",
          "overrides": "@aws-cdk/aws-codepipeline-actions.Action",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        }
      ],
      "name": "StepFunctionInvokeAction"
    },
    "@aws-cdk/aws-codepipeline-actions.StepFunctionsInvokeActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline-actions",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of the {@link StepFunctionsInvokeAction StepFunction Invoke Action}."
      },
      "fqn": "@aws-cdk/aws-codepipeline-actions.StepFunctionsInvokeActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stepfunctions/invoke-action.ts",
        "line": 71
      },
      "name": "StepFunctionsInvokeActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The state machine to invoke."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/invoke-action.ts",
            "line": 82
          },
          "name": "stateMachine",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.IStateMachine"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- action execution ID",
            "remarks": "By default, the action execution ID is used as the state machine execution name.\nIf a prefix is provided, it is prepended to the action execution ID with a hyphen and\ntogether used as the state machine execution name.",
            "stability": "stable",
            "summary": "Prefix (optional)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/invoke-action.ts",
            "line": 101
          },
          "name": "executionNamePrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the Action will not have any outputs",
            "stability": "stable",
            "summary": "The optional output Artifact of the Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/invoke-action.ts",
            "line": 77
          },
          "name": "output",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "remarks": "This includes input artifact, input type and the statemachine input.",
            "stability": "stable",
            "summary": "Represents the input to the StateMachine."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/invoke-action.ts",
            "line": 90
          },
          "name": "stateMachineInput",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline-actions.StateMachineInput"
          }
        }
      ]
    }
  },
  "version": "1.91.0",
  "fingerprint": "yNBpZklvkUwawmQmkyqj/qpS0WB4EKIkucsi3naJTqk="
}
