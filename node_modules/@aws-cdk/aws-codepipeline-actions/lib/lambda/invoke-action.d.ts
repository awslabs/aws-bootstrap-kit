import * as codepipeline from '@aws-cdk/aws-codepipeline';
import * as lambda from '@aws-cdk/aws-lambda';
import { Action } from '../action';
import { Construct } from '@aws-cdk/core';
/**
 * Construction properties of the {@link LambdaInvokeAction Lambda invoke CodePipeline Action}.
 *
 * @stability stable
 */
export interface LambdaInvokeActionProps extends codepipeline.CommonAwsActionProps {
    /**
     * The optional input Artifacts of the Action.
     *
     * A Lambda Action can have up to 5 inputs.
     * The inputs will appear in the event passed to the Lambda,
     * under the `'CodePipeline.job'.data.inputArtifacts` path.
     *
     * @default the Action will not have any inputs
     * @see https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html#actions-invoke-lambda-function-json-event-example
     * @stability stable
     */
    readonly inputs?: codepipeline.Artifact[];
    /**
     * The optional names of the output Artifacts of the Action.
     *
     * A Lambda Action can have up to 5 outputs.
     * The outputs will appear in the event passed to the Lambda,
     * under the `'CodePipeline.job'.data.outputArtifacts` path.
     * It is the responsibility of the Lambda to upload ZIP files with the Artifact contents to the provided locations.
     *
     * @default the Action will not have any outputs
     * @stability stable
     */
    readonly outputs?: codepipeline.Artifact[];
    /**
     * A set of key-value pairs that will be accessible to the invoked Lambda inside the event that the Pipeline will call it with.
     *
     * @see https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html#actions-invoke-lambda-function-json-event-example
     * @stability stable
     */
    readonly userParameters?: {
        [key: string]: any;
    };
    /**
     * The lambda function to invoke.
     *
     * @stability stable
     */
    readonly lambda: lambda.IFunction;
}
/**
 * CodePipeline invoke Action that is provided by an AWS Lambda function.
 *
 * @see https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html
 * @stability stable
 */
export declare class LambdaInvokeAction extends Action {
    private readonly props;
    /**
     * @stability stable
     */
    constructor(props: LambdaInvokeActionProps);
    /**
     * Reference a CodePipeline variable defined by the Lambda function this action points to.
     *
     * Variables in Lambda invoke actions are defined by calling the PutJobSuccessResult CodePipeline API call
     * with the 'outputVariables' property filled.
     *
     * @param variableName the name of the variable to reference.
     * @see https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_PutJobSuccessResult.html
     * @stability stable
     */
    variable(variableName: string): string;
    /**
     * The method called when an Action is attached to a Pipeline.
     *
     * This method is guaranteed to be called only once for each Action instance.
     *
     * @stability stable
     */
    protected bound(scope: Construct, _stage: codepipeline.IStage, options: codepipeline.ActionBindOptions): codepipeline.ActionConfig;
}
