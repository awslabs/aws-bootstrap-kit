export declare class ELBMetrics {
    static latencyAverage(dimensions: {
        LoadBalancerName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            LoadBalancerName: string;
        };
        statistic: string;
    };
    static backendConnectionErrorsAverage(dimensions: {
        LoadBalancerName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            LoadBalancerName: string;
        };
        statistic: string;
    };
    static requestCountAverage(dimensions: {
        LoadBalancerName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            LoadBalancerName: string;
        };
        statistic: string;
    };
    static spilloverCountAverage(dimensions: {
        LoadBalancerName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            LoadBalancerName: string;
        };
        statistic: string;
    };
    static surgeQueueLengthAverage(dimensions: {
        LoadBalancerName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            LoadBalancerName: string;
        };
        statistic: string;
    };
    static healthyHostCountAverage(dimensions: {
        LoadBalancerName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            LoadBalancerName: string;
        };
        statistic: string;
    };
    static unHealthyHostCountAverage(dimensions: {
        LoadBalancerName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            LoadBalancerName: string;
        };
        statistic: string;
    };
    static httpCodeBackend2XxAverage(dimensions: {
        LoadBalancerName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            LoadBalancerName: string;
        };
        statistic: string;
    };
    static httpCodeBackend3XxAverage(dimensions: {
        LoadBalancerName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            LoadBalancerName: string;
        };
        statistic: string;
    };
    static httpCodeBackend4XxAverage(dimensions: {
        LoadBalancerName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            LoadBalancerName: string;
        };
        statistic: string;
    };
    static httpCodeBackend5XxAverage(dimensions: {
        LoadBalancerName: string;
    }): {
        namespace: string;
        metricName: string;
        dimensions: {
            LoadBalancerName: string;
        };
        statistic: string;
    };
}
