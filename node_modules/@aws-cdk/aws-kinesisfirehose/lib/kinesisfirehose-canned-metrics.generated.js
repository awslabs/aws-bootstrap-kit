"use strict";
// Copyright 2012-2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.
Object.defineProperty(exports, "__esModule", { value: true });
exports.FirehoseMetrics = void 0;
/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control
class FirehoseMetrics {
    static incomingBytesAverage(dimensions) {
        return {
            namespace: 'AWS/Firehose',
            metricName: 'IncomingBytes',
            dimensions,
            statistic: 'Average',
        };
    }
    static incomingRecordsAverage(dimensions) {
        return {
            namespace: 'AWS/Firehose',
            metricName: 'IncomingRecords',
            dimensions,
            statistic: 'Average',
        };
    }
    static backupToS3BytesAverage(dimensions) {
        return {
            namespace: 'AWS/Firehose',
            metricName: 'BackupToS3.Bytes',
            dimensions,
            statistic: 'Average',
        };
    }
    static backupToS3DataFreshnessAverage(dimensions) {
        return {
            namespace: 'AWS/Firehose',
            metricName: 'BackupToS3.DataFreshness',
            dimensions,
            statistic: 'Average',
        };
    }
    static backupToS3RecordsAverage(dimensions) {
        return {
            namespace: 'AWS/Firehose',
            metricName: 'BackupToS3.Records',
            dimensions,
            statistic: 'Average',
        };
    }
}
exports.FirehoseMetrics = FirehoseMetrics;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2luZXNpc2ZpcmVob3NlLWNhbm5lZC1tZXRyaWNzLmdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImtpbmVzaXNmaXJlaG9zZS1jYW5uZWQtbWV0cmljcy5nZW5lcmF0ZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLCtFQUErRTs7O0FBRS9FLDRCQUE0QixDQUFDLGlFQUFpRTtBQUU5RixNQUFhLGVBQWU7SUFDbkIsTUFBTSxDQUFDLG9CQUFvQixDQUFDLFVBQTBDO1FBQzNFLE9BQU87WUFDTCxTQUFTLEVBQUUsY0FBYztZQUN6QixVQUFVLEVBQUUsZUFBZTtZQUMzQixVQUFVO1lBQ1YsU0FBUyxFQUFFLFNBQVM7U0FDckIsQ0FBQztJQUNKLENBQUM7SUFDTSxNQUFNLENBQUMsc0JBQXNCLENBQUMsVUFBMEM7UUFDN0UsT0FBTztZQUNMLFNBQVMsRUFBRSxjQUFjO1lBQ3pCLFVBQVUsRUFBRSxpQkFBaUI7WUFDN0IsVUFBVTtZQUNWLFNBQVMsRUFBRSxTQUFTO1NBQ3JCLENBQUM7SUFDSixDQUFDO0lBQ00sTUFBTSxDQUFDLHNCQUFzQixDQUFDLFVBQTBDO1FBQzdFLE9BQU87WUFDTCxTQUFTLEVBQUUsY0FBYztZQUN6QixVQUFVLEVBQUUsa0JBQWtCO1lBQzlCLFVBQVU7WUFDVixTQUFTLEVBQUUsU0FBUztTQUNyQixDQUFDO0lBQ0osQ0FBQztJQUNNLE1BQU0sQ0FBQyw4QkFBOEIsQ0FBQyxVQUEwQztRQUNyRixPQUFPO1lBQ0wsU0FBUyxFQUFFLGNBQWM7WUFDekIsVUFBVSxFQUFFLDBCQUEwQjtZQUN0QyxVQUFVO1lBQ1YsU0FBUyxFQUFFLFNBQVM7U0FDckIsQ0FBQztJQUNKLENBQUM7SUFDTSxNQUFNLENBQUMsd0JBQXdCLENBQUMsVUFBMEM7UUFDL0UsT0FBTztZQUNMLFNBQVMsRUFBRSxjQUFjO1lBQ3pCLFVBQVUsRUFBRSxvQkFBb0I7WUFDaEMsVUFBVTtZQUNWLFNBQVMsRUFBRSxTQUFTO1NBQ3JCLENBQUM7SUFDSixDQUFDO0NBQ0Y7QUF6Q0QsMENBeUNDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTItMjAyMSBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuXG4vKiBlc2xpbnQtZGlzYWJsZSBtYXgtbGVuICovIC8vIFRoaXMgaXMgZ2VuZXJhdGVkIGNvZGUgLSBsaW5lIGxlbmd0aHMgYXJlIGRpZmZpY3VsdCB0byBjb250cm9sXG5cbmV4cG9ydCBjbGFzcyBGaXJlaG9zZU1ldHJpY3Mge1xuICBwdWJsaWMgc3RhdGljIGluY29taW5nQnl0ZXNBdmVyYWdlKGRpbWVuc2lvbnM6IHsgRGVsaXZlcnlTdHJlYW1OYW1lOiBzdHJpbmcgfSkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lc3BhY2U6ICdBV1MvRmlyZWhvc2UnLFxuICAgICAgbWV0cmljTmFtZTogJ0luY29taW5nQnl0ZXMnLFxuICAgICAgZGltZW5zaW9ucyxcbiAgICAgIHN0YXRpc3RpYzogJ0F2ZXJhZ2UnLFxuICAgIH07XG4gIH1cbiAgcHVibGljIHN0YXRpYyBpbmNvbWluZ1JlY29yZHNBdmVyYWdlKGRpbWVuc2lvbnM6IHsgRGVsaXZlcnlTdHJlYW1OYW1lOiBzdHJpbmcgfSkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lc3BhY2U6ICdBV1MvRmlyZWhvc2UnLFxuICAgICAgbWV0cmljTmFtZTogJ0luY29taW5nUmVjb3JkcycsXG4gICAgICBkaW1lbnNpb25zLFxuICAgICAgc3RhdGlzdGljOiAnQXZlcmFnZScsXG4gICAgfTtcbiAgfVxuICBwdWJsaWMgc3RhdGljIGJhY2t1cFRvUzNCeXRlc0F2ZXJhZ2UoZGltZW5zaW9uczogeyBEZWxpdmVyeVN0cmVhbU5hbWU6IHN0cmluZyB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWVzcGFjZTogJ0FXUy9GaXJlaG9zZScsXG4gICAgICBtZXRyaWNOYW1lOiAnQmFja3VwVG9TMy5CeXRlcycsXG4gICAgICBkaW1lbnNpb25zLFxuICAgICAgc3RhdGlzdGljOiAnQXZlcmFnZScsXG4gICAgfTtcbiAgfVxuICBwdWJsaWMgc3RhdGljIGJhY2t1cFRvUzNEYXRhRnJlc2huZXNzQXZlcmFnZShkaW1lbnNpb25zOiB7IERlbGl2ZXJ5U3RyZWFtTmFtZTogc3RyaW5nIH0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZXNwYWNlOiAnQVdTL0ZpcmVob3NlJyxcbiAgICAgIG1ldHJpY05hbWU6ICdCYWNrdXBUb1MzLkRhdGFGcmVzaG5lc3MnLFxuICAgICAgZGltZW5zaW9ucyxcbiAgICAgIHN0YXRpc3RpYzogJ0F2ZXJhZ2UnLFxuICAgIH07XG4gIH1cbiAgcHVibGljIHN0YXRpYyBiYWNrdXBUb1MzUmVjb3Jkc0F2ZXJhZ2UoZGltZW5zaW9uczogeyBEZWxpdmVyeVN0cmVhbU5hbWU6IHN0cmluZyB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWVzcGFjZTogJ0FXUy9GaXJlaG9zZScsXG4gICAgICBtZXRyaWNOYW1lOiAnQmFja3VwVG9TMy5SZWNvcmRzJyxcbiAgICAgIGRpbWVuc2lvbnMsXG4gICAgICBzdGF0aXN0aWM6ICdBdmVyYWdlJyxcbiAgICB9O1xuICB9XG59XG4iXX0=