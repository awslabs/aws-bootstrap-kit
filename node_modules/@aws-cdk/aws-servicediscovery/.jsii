{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-ec2": "1.91.0",
    "@aws-cdk/aws-elasticloadbalancingv2": "1.91.0",
    "@aws-cdk/aws-route53": "1.91.0",
    "@aws-cdk/core": "1.91.0",
    "constructs": "^3.2.0"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancingv2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancingv2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancingv2",
          "module": "aws_cdk.aws_elasticloadbalancingv2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::ServiceDiscovery",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.21.0 (build 4262b22)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "servicediscovery"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@aws-cdk/aws-servicediscovery",
  "readme": {
    "markdown": "# Amazon ECS Service Discovery Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n\nThis package contains constructs for working with **AWS Cloud Map**\n\nAWS Cloud Map is a fully managed service that you can use to create and\nmaintain a map of the backend services and resources that your applications\ndepend on.\n\nFor further information on AWS Cloud Map,\nsee the [AWS Cloud Map documentation](https://docs.aws.amazon.com/cloud-map)\n\n## HTTP Namespace Example\n\nThe following example creates an AWS Cloud Map namespace that\nsupports API calls, creates a service in that namespace, and\nregisters an instance to it:\n\n```ts lit=test/integ.service-with-http-namespace.lit.ts\nimport * as cdk from '@aws-cdk/core';\nimport * as servicediscovery from '../lib';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-servicediscovery-integ');\n\nconst namespace = new servicediscovery.HttpNamespace(stack, 'MyNamespace', {\n  name: 'covfefe',\n});\n\nconst service1 = namespace.createService('NonIpService', {\n  description: 'service registering non-ip instances',\n});\n\nservice1.registerNonIpInstance('NonIpInstance', {\n  customAttributes: { arn: 'arn:aws:s3:::mybucket' },\n});\n\nconst service2 = namespace.createService('IpService', {\n  description: 'service registering ip instances',\n  healthCheck: {\n    type: servicediscovery.HealthCheckType.HTTP,\n    resourcePath: '/check',\n  },\n});\n\nservice2.registerIpInstance('IpInstance', {\n  ipv4: '54.239.25.192',\n});\n\napp.synth();\n\n```\n\n## Private DNS Namespace Example\n\nThe following example creates an AWS Cloud Map namespace that\nsupports both API calls and DNS queries within a vpc, creates a\nservice in that namespace, and registers a loadbalancer as an\ninstance:\n\n```ts lit=test/integ.service-with-private-dns-namespace.lit.ts\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as cdk from '@aws-cdk/core';\nimport * as servicediscovery from '../lib';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-servicediscovery-integ');\n\nconst vpc = new ec2.Vpc(stack, 'Vpc', { maxAzs: 2 });\n\nconst namespace = new servicediscovery.PrivateDnsNamespace(stack, 'Namespace', {\n  name: 'boobar.com',\n  vpc,\n});\n\nconst service = namespace.createService('Service', {\n  dnsRecordType: servicediscovery.DnsRecordType.A_AAAA,\n  dnsTtl: cdk.Duration.seconds(30),\n  loadBalancer: true,\n});\n\nconst loadbalancer = new elbv2.ApplicationLoadBalancer(stack, 'LB', { vpc, internetFacing: true });\n\nservice.registerLoadBalancer('Loadbalancer', loadbalancer);\n\napp.synth();\n\n```\n\n## Public DNS Namespace Example\n\nThe following example creates an AWS Cloud Map namespace that\nsupports both API calls and public DNS queries, creates a service in\nthat namespace, and registers an IP instance:\n\n```ts lit=test/integ.service-with-public-dns-namespace.lit.ts\nimport * as cdk from '@aws-cdk/core';\nimport * as servicediscovery from '../lib';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-servicediscovery-integ');\n\nconst namespace = new servicediscovery.PublicDnsNamespace(stack, 'Namespace', {\n  name: 'foobar.com',\n});\n\nconst service = namespace.createService('Service', {\n  name: 'foo',\n  dnsRecordType: servicediscovery.DnsRecordType.A,\n  dnsTtl: cdk.Duration.seconds(30),\n  healthCheck: {\n    type: servicediscovery.HealthCheckType.HTTPS,\n    resourcePath: '/healthcheck',\n    failureThreshold: 2,\n  },\n});\n\nservice.registerIpInstance('IpInstance', {\n  ipv4: '54.239.25.192',\n  port: 443,\n});\n\napp.synth();\n\n```\n\nFor DNS namespaces, you can also register instances to services with CNAME records:\n\n```ts lit=test/integ.service-with-cname-record.lit.ts\nimport * as cdk from '@aws-cdk/core';\nimport * as servicediscovery from '../lib';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-servicediscovery-integ');\n\nconst namespace = new servicediscovery.PublicDnsNamespace(stack, 'Namespace', {\n  name: 'foobar.com',\n});\n\nconst service = namespace.createService('Service', {\n  name: 'foo',\n  dnsRecordType: servicediscovery.DnsRecordType.CNAME,\n  dnsTtl: cdk.Duration.seconds(30),\n});\n\nservice.registerCnameInstance('CnameInstance', {\n  instanceCname: 'service.pizza',\n});\n\napp.synth();\n\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-servicediscovery",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.ServiceDiscovery",
      "packageId": "Amazon.CDK.AWS.ServiceDiscovery"
    },
    "java": {
      "maven": {
        "artifactId": "servicediscovery",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.servicediscovery"
    },
    "js": {
      "npm": "@aws-cdk/aws-servicediscovery"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-servicediscovery",
      "module": "aws_cdk.aws_servicediscovery"
    }
  },
  "types": {
    "@aws-cdk/aws-servicediscovery.AliasTargetInstance": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "base": "@aws-cdk/aws-servicediscovery.InstanceBase",
      "docs": {
        "custom": {
          "resource": "AWS::ServiceDiscovery::Instance"
        },
        "remarks": "Currently, the only resource types supported are Elastic Load\nBalancers.",
        "stability": "stable",
        "summary": "Instance that uses Route 53 Alias record type."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.AliasTargetInstance",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/alias-target-instance.ts",
          "line": 45
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.AliasTargetInstanceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/alias-target-instance.ts",
        "line": 29
      },
      "name": "AliasTargetInstance",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Route53 DNS name of the alias target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias-target-instance.ts",
            "line": 43
          },
          "name": "dnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Id of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias-target-instance.ts",
            "line": 33
          },
          "name": "instanceId",
          "overrides": "@aws-cdk/aws-servicediscovery.InstanceBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Cloudmap service to which the instance is registered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias-target-instance.ts",
            "line": 38
          },
          "name": "service",
          "overrides": "@aws-cdk/aws-servicediscovery.InstanceBase",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.IService"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.AliasTargetInstanceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.AliasTargetInstanceProps",
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.BaseInstanceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alias-target-instance.ts",
        "line": 11
      },
      "name": "AliasTargetInstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "DNS name of the target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias-target-instance.ts",
            "line": 15
          },
          "name": "dnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Cloudmap service this resource is registered to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias-target-instance.ts",
            "line": 20
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.IService"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.BaseInstanceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Used when the resource that's associated with the service instance is accessible using values other than an IP address or a domain name (CNAME), i.e. for non-ip-instances."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.BaseInstanceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 21
      },
      "name": "BaseInstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "stable",
            "summary": "Custom attributes of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 34
          },
          "name": "customAttributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatically generated name",
            "stability": "stable",
            "summary": "The id of the instance resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 27
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.BaseNamespaceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.BaseNamespaceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/namespace.ts",
        "line": 28
      },
      "name": "BaseNamespaceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A name for the Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/namespace.ts",
            "line": 32
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "stable",
            "summary": "A description of the Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/namespace.ts",
            "line": 39
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.BaseServiceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "remarks": "Used by HttpNamespace.createService",
        "stability": "stable",
        "summary": "Basic props needed to create a service in a given namespace."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.BaseServiceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/service.ts",
        "line": 50
      },
      "name": "BaseServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "remarks": "Only one of healthCheckConfig or healthCheckCustomConfig can be specified.\nSee: https://docs.aws.amazon.com/cloud-map/latest/api/API_HealthCheckCustomConfig.html",
            "stability": "stable",
            "summary": "Structure containing failure threshold for a custom health checker."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 82
          },
          "name": "customHealthCheck",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.HealthCheckCustomConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "stable",
            "summary": "A description of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 63
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "remarks": "If you specify health check settings, AWS Cloud Map associates the health\ncheck with the records that you specify in DnsConfig. Only one of healthCheckConfig or healthCheckCustomConfig can\nbe specified. Not valid for PrivateDnsNamespaces. If you use healthCheck, you can only register IP instances to\nthis service.",
            "stability": "stable",
            "summary": "Settings for an optional health check."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 73
          },
          "name": "healthCheck",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.HealthCheckConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CloudFormation-generated name",
            "stability": "stable",
            "summary": "A name for the Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 56
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CfnHttpNamespace": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ServiceDiscovery::HttpNamespace",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::ServiceDiscovery::HttpNamespace`."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CfnHttpNamespace",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ServiceDiscovery::HttpNamespace`."
        },
        "locationInModule": {
          "filename": "lib/servicediscovery.generated.ts",
          "line": 154
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.CfnHttpNamespaceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/servicediscovery.generated.ts",
        "line": 94
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 172
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 185
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnHttpNamespace",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 98
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 122
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 127
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 177
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html#cfn-servicediscovery-httpnamespace-tags"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::HttpNamespace.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 145
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html#cfn-servicediscovery-httpnamespace-name"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::HttpNamespace.Name`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 133
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html#cfn-servicediscovery-httpnamespace-description"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::HttpNamespace.Description`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 139
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CfnHttpNamespaceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::ServiceDiscovery::HttpNamespace`."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CfnHttpNamespaceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/servicediscovery.generated.ts",
        "line": 17
      },
      "name": "CfnHttpNamespaceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html#cfn-servicediscovery-httpnamespace-name"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::HttpNamespace.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 23
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html#cfn-servicediscovery-httpnamespace-description"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::HttpNamespace.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 29
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html#cfn-servicediscovery-httpnamespace-tags"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::HttpNamespace.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 35
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CfnInstance": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ServiceDiscovery::Instance",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::ServiceDiscovery::Instance`."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CfnInstance",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ServiceDiscovery::Instance`."
        },
        "locationInModule": {
          "filename": "lib/servicediscovery.generated.ts",
          "line": 324
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.CfnInstanceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/servicediscovery.generated.ts",
        "line": 274
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 341
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 354
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnInstance",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 278
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 346
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html#cfn-servicediscovery-instance-instanceattributes"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Instance.InstanceAttributes`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 303
          },
          "name": "instanceAttributes",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html#cfn-servicediscovery-instance-serviceid"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Instance.ServiceId`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 309
          },
          "name": "serviceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html#cfn-servicediscovery-instance-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Instance.InstanceId`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 315
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CfnInstanceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::ServiceDiscovery::Instance`."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CfnInstanceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/servicediscovery.generated.ts",
        "line": 196
      },
      "name": "CfnInstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html#cfn-servicediscovery-instance-instanceattributes"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Instance.InstanceAttributes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 202
          },
          "name": "instanceAttributes",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html#cfn-servicediscovery-instance-serviceid"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Instance.ServiceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 208
          },
          "name": "serviceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html#cfn-servicediscovery-instance-instanceid"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Instance.InstanceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 214
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CfnPrivateDnsNamespace": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ServiceDiscovery::PrivateDnsNamespace",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::ServiceDiscovery::PrivateDnsNamespace`."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CfnPrivateDnsNamespace",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ServiceDiscovery::PrivateDnsNamespace`."
        },
        "locationInModule": {
          "filename": "lib/servicediscovery.generated.ts",
          "line": 518
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.CfnPrivateDnsNamespaceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/servicediscovery.generated.ts",
        "line": 452
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 538
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 552
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnPrivateDnsNamespace",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 456
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 480
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 485
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 543
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html#cfn-servicediscovery-privatednsnamespace-tags"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::PrivateDnsNamespace.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 509
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html#cfn-servicediscovery-privatednsnamespace-name"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::PrivateDnsNamespace.Name`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 491
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html#cfn-servicediscovery-privatednsnamespace-vpc"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::PrivateDnsNamespace.Vpc`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 497
          },
          "name": "vpc",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html#cfn-servicediscovery-privatednsnamespace-description"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::PrivateDnsNamespace.Description`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 503
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CfnPrivateDnsNamespaceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::ServiceDiscovery::PrivateDnsNamespace`."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CfnPrivateDnsNamespaceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/servicediscovery.generated.ts",
        "line": 365
      },
      "name": "CfnPrivateDnsNamespaceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html#cfn-servicediscovery-privatednsnamespace-name"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::PrivateDnsNamespace.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 371
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html#cfn-servicediscovery-privatednsnamespace-vpc"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::PrivateDnsNamespace.Vpc`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 377
          },
          "name": "vpc",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html#cfn-servicediscovery-privatednsnamespace-description"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::PrivateDnsNamespace.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 383
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html#cfn-servicediscovery-privatednsnamespace-tags"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::PrivateDnsNamespace.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 389
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CfnPublicDnsNamespace": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ServiceDiscovery::PublicDnsNamespace",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::ServiceDiscovery::PublicDnsNamespace`."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CfnPublicDnsNamespace",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ServiceDiscovery::PublicDnsNamespace`."
        },
        "locationInModule": {
          "filename": "lib/servicediscovery.generated.ts",
          "line": 700
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.CfnPublicDnsNamespaceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/servicediscovery.generated.ts",
        "line": 640
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 718
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 731
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnPublicDnsNamespace",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 644
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 668
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 673
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 723
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html#cfn-servicediscovery-publicdnsnamespace-tags"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::PublicDnsNamespace.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 691
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html#cfn-servicediscovery-publicdnsnamespace-name"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::PublicDnsNamespace.Name`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 679
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html#cfn-servicediscovery-publicdnsnamespace-description"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::PublicDnsNamespace.Description`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 685
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CfnPublicDnsNamespaceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::ServiceDiscovery::PublicDnsNamespace`."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CfnPublicDnsNamespaceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/servicediscovery.generated.ts",
        "line": 563
      },
      "name": "CfnPublicDnsNamespaceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html#cfn-servicediscovery-publicdnsnamespace-name"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::PublicDnsNamespace.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 569
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html#cfn-servicediscovery-publicdnsnamespace-description"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::PublicDnsNamespace.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 575
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html#cfn-servicediscovery-publicdnsnamespace-tags"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::PublicDnsNamespace.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 581
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CfnService": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ServiceDiscovery::Service",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::ServiceDiscovery::Service`."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CfnService",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ServiceDiscovery::Service`."
        },
        "locationInModule": {
          "filename": "lib/servicediscovery.generated.ts",
          "line": 943
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.CfnServiceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/servicediscovery.generated.ts",
        "line": 854
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 965
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 982
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnService",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 858
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 882
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 887
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Name"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 892
          },
          "name": "attrName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 970
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-tags"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Service.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 934
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-description"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Service.Description`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 898
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-dnsconfig"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Service.DnsConfig`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 904
          },
          "name": "dnsConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-servicediscovery.CfnService.DnsConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-healthcheckconfig"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Service.HealthCheckConfig`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 910
          },
          "name": "healthCheckConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-servicediscovery.CfnService.HealthCheckConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-healthcheckcustomconfig"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Service.HealthCheckCustomConfig`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 916
          },
          "name": "healthCheckCustomConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-servicediscovery.CfnService.HealthCheckCustomConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-name"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Service.Name`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 922
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-namespaceid"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Service.NamespaceId`."
          },
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 928
          },
          "name": "namespaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CfnService.DnsConfigProperty": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-dnsconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CfnService.DnsConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/servicediscovery.generated.ts",
        "line": 992
      },
      "name": "DnsConfigProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-dnsconfig.html#cfn-servicediscovery-service-dnsconfig-dnsrecords"
            },
            "stability": "external",
            "summary": "`CfnService.DnsConfigProperty.DnsRecords`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 997
          },
          "name": "dnsRecords",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-servicediscovery.CfnService.DnsRecordProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-dnsconfig.html#cfn-servicediscovery-service-dnsconfig-namespaceid"
            },
            "stability": "external",
            "summary": "`CfnService.DnsConfigProperty.NamespaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 1002
          },
          "name": "namespaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-dnsconfig.html#cfn-servicediscovery-service-dnsconfig-routingpolicy"
            },
            "stability": "external",
            "summary": "`CfnService.DnsConfigProperty.RoutingPolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 1007
          },
          "name": "routingPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CfnService.DnsRecordProperty": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-dnsrecord.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CfnService.DnsRecordProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/servicediscovery.generated.ts",
        "line": 1068
      },
      "name": "DnsRecordProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-dnsrecord.html#cfn-servicediscovery-service-dnsrecord-ttl"
            },
            "stability": "external",
            "summary": "`CfnService.DnsRecordProperty.TTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 1073
          },
          "name": "ttl",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-dnsrecord.html#cfn-servicediscovery-service-dnsrecord-type"
            },
            "stability": "external",
            "summary": "`CfnService.DnsRecordProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 1078
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CfnService.HealthCheckConfigProperty": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-healthcheckconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CfnService.HealthCheckConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/servicediscovery.generated.ts",
        "line": 1137
      },
      "name": "HealthCheckConfigProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-healthcheckconfig.html#cfn-servicediscovery-service-healthcheckconfig-type"
            },
            "stability": "external",
            "summary": "`CfnService.HealthCheckConfigProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 1152
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-healthcheckconfig.html#cfn-servicediscovery-service-healthcheckconfig-failurethreshold"
            },
            "stability": "external",
            "summary": "`CfnService.HealthCheckConfigProperty.FailureThreshold`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 1142
          },
          "name": "failureThreshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-healthcheckconfig.html#cfn-servicediscovery-service-healthcheckconfig-resourcepath"
            },
            "stability": "external",
            "summary": "`CfnService.HealthCheckConfigProperty.ResourcePath`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 1147
          },
          "name": "resourcePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CfnService.HealthCheckCustomConfigProperty": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-healthcheckcustomconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CfnService.HealthCheckCustomConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/servicediscovery.generated.ts",
        "line": 1213
      },
      "name": "HealthCheckCustomConfigProperty",
      "namespace": "CfnService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-servicediscovery-service-healthcheckcustomconfig.html#cfn-servicediscovery-service-healthcheckcustomconfig-failurethreshold"
            },
            "stability": "external",
            "summary": "`CfnService.HealthCheckCustomConfigProperty.FailureThreshold`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 1218
          },
          "name": "failureThreshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CfnServiceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::ServiceDiscovery::Service`."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CfnServiceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/servicediscovery.generated.ts",
        "line": 742
      },
      "name": "CfnServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-description"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Service.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 748
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-dnsconfig"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Service.DnsConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 754
          },
          "name": "dnsConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-servicediscovery.CfnService.DnsConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-healthcheckconfig"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Service.HealthCheckConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 760
          },
          "name": "healthCheckConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-servicediscovery.CfnService.HealthCheckConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-healthcheckcustomconfig"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Service.HealthCheckCustomConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 766
          },
          "name": "healthCheckCustomConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-servicediscovery.CfnService.HealthCheckCustomConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-name"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Service.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 772
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-namespaceid"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Service.NamespaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 778
          },
          "name": "namespaceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-tags"
            },
            "stability": "external",
            "summary": "`AWS::ServiceDiscovery::Service.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/servicediscovery.generated.ts",
            "line": 784
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CnameInstance": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "base": "@aws-cdk/aws-servicediscovery.InstanceBase",
      "docs": {
        "custom": {
          "resource": "AWS::ServiceDiscovery::Instance"
        },
        "stability": "stable",
        "summary": "Instance that is accessible using a domain name (CNAME)."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CnameInstance",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cname-instance.ts",
          "line": 49
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.CnameInstanceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cname-instance.ts",
        "line": 33
      },
      "name": "CnameInstance",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The domain name returned by DNS queries for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cname-instance.ts",
            "line": 47
          },
          "name": "cname",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Id of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cname-instance.ts",
            "line": 37
          },
          "name": "instanceId",
          "overrides": "@aws-cdk/aws-servicediscovery.InstanceBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Cloudmap service to which the instance is registered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cname-instance.ts",
            "line": 42
          },
          "name": "service",
          "overrides": "@aws-cdk/aws-servicediscovery.InstanceBase",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.IService"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CnameInstanceBaseProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CnameInstanceBaseProps",
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.BaseInstanceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cname-instance.ts",
        "line": 10
      },
      "name": "CnameInstanceBaseProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "If the service configuration includes a CNAME record, the domain name that you want Route 53 to return in response to DNS queries, for example, example.com. This value is required if the service specified by ServiceId includes settings for an CNAME record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cname-instance.ts",
            "line": 16
          },
          "name": "instanceCname",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.CnameInstanceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.CnameInstanceProps",
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.CnameInstanceBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cname-instance.ts",
        "line": 22
      },
      "name": "CnameInstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Cloudmap service this resource is registered to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cname-instance.ts",
            "line": 26
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.IService"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.DnsRecordType": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.DnsRecordType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/service.ts",
        "line": 387
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "An A record."
          },
          "name": "A"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An AAAA record."
          },
          "name": "AAAA"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Both an A and AAAA record."
          },
          "name": "A_AAAA"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A Srv record."
          },
          "name": "SRV"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A CNAME record."
          },
          "name": "CNAME"
        }
      ],
      "name": "DnsRecordType"
    },
    "@aws-cdk/aws-servicediscovery.DnsServiceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "remarks": "Used by createService() for PrivateDnsNamespace and\nPublicDnsNamespace",
        "stability": "stable",
        "summary": "Service props needed to create a service in a given namespace."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.DnsServiceProps",
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.BaseServiceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/service.ts",
        "line": 89
      },
      "name": "DnsServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "A",
            "remarks": "Supported record types\ninclude A, AAAA, A and AAAA (A_AAAA), CNAME, and SRV.",
            "stability": "stable",
            "summary": "The DNS type of the record that you want AWS Cloud Map to create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 96
          },
          "name": "dnsRecordType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.DnsRecordType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(1)",
            "stability": "stable",
            "summary": "The amount of time, in seconds, that you want DNS resolvers to cache the settings for this record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 104
          },
          "name": "dnsTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Setting this to `true` correctly configures the `routingPolicy`\nand performs some additional validation.",
            "stability": "stable",
            "summary": "Whether or not this service will have an Elastic LoadBalancer registered to it as an AliasTargetInstance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 122
          },
          "name": "loadBalancer",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "WEIGHTED for CNAME records and when loadBalancer is true, MULTIVALUE otherwise",
            "stability": "stable",
            "summary": "The routing policy that you want to apply to all DNS records that AWS Cloud Map creates when you register an instance and specify this service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 112
          },
          "name": "routingPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.RoutingPolicy"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.HealthCheckConfig": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "remarks": "If you specify settings for a health check, AWS Cloud Map\nassociates the health check with all the records that you specify in DnsConfig. Only valid with a PublicDnsNamespace.",
        "stability": "stable",
        "summary": "Settings for an optional Amazon Route 53 health check."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.HealthCheckConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/service.ts",
        "line": 349
      },
      "name": "HealthCheckConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "stable",
            "summary": "The number of consecutive health checks that an endpoint must pass or fail for Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 371
          },
          "name": "failureThreshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'/'",
            "remarks": "Do not use when health check type is TCP.",
            "stability": "stable",
            "summary": "The path that you want Route 53 to request when performing health checks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 363
          },
          "name": "resourcePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HTTP",
            "remarks": "Cannot be modified once created. Supported values are HTTP, HTTPS, and TCP.",
            "stability": "stable",
            "summary": "The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 356
          },
          "name": "type",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.HealthCheckType"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.HealthCheckCustomConfig": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specifies information about an optional custom health check."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.HealthCheckCustomConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/service.ts",
        "line": 377
      },
      "name": "HealthCheckCustomConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "stable",
            "summary": "The number of 30-second intervals that you want Cloud Map to wait after receiving an UpdateInstanceCustomHealthStatus request before it changes the health status of a service instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 384
          },
          "name": "failureThreshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.HealthCheckType": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.HealthCheckType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/service.ts",
        "line": 428
      },
      "members": [
        {
          "docs": {
            "remarks": "If successful, Route 53 submits an HTTP request and waits for an HTTP\nstatus code of 200 or greater and less than 400.",
            "stability": "stable",
            "summary": "Route 53 tries to establish a TCP connection."
          },
          "name": "HTTP"
        },
        {
          "docs": {
            "remarks": "If successful, Route 53 submits an HTTPS request and waits for an\nHTTP status code of 200 or greater and less than 400.  If you specify HTTPS for the value of Type, the endpoint\nmust support TLS v1.0 or later.",
            "stability": "stable",
            "summary": "Route 53 tries to establish a TCP connection."
          },
          "name": "HTTPS"
        },
        {
          "docs": {
            "remarks": "If you specify TCP for Type, don't specify a value for ResourcePath.",
            "stability": "stable",
            "summary": "Route 53 tries to establish a TCP connection."
          },
          "name": "TCP"
        }
      ],
      "name": "HealthCheckType"
    },
    "@aws-cdk/aws-servicediscovery.HttpNamespace": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Define an HTTP Namespace."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.HttpNamespace",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/http-namespace.ts",
          "line": 61
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.HttpNamespaceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.IHttpNamespace"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http-namespace.ts",
        "line": 29
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/http-namespace.ts",
            "line": 31
          },
          "name": "fromHttpNamespaceAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-servicediscovery.HttpNamespaceAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.IHttpNamespace"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a service within the namespace."
          },
          "locationInModule": {
            "filename": "lib/http-namespace.ts",
            "line": 87
          },
          "name": "createService",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-servicediscovery.BaseServiceProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.Service"
            }
          }
        }
      ],
      "name": "HttpNamespace",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-namespace.ts",
            "line": 76
          },
          "name": "httpNamespaceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-namespace.ts",
            "line": 82
          },
          "name": "httpNamespaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-namespace.ts",
            "line": 79
          },
          "name": "httpNamespaceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Namespace Arn for the namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-namespace.ts",
            "line": 54
          },
          "name": "namespaceArn",
          "overrides": "@aws-cdk/aws-servicediscovery.INamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Namespace Id for the namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-namespace.ts",
            "line": 49
          },
          "name": "namespaceId",
          "overrides": "@aws-cdk/aws-servicediscovery.INamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A name for the namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-namespace.ts",
            "line": 44
          },
          "name": "namespaceName",
          "overrides": "@aws-cdk/aws-servicediscovery.INamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Type of the namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-namespace.ts",
            "line": 59
          },
          "name": "type",
          "overrides": "@aws-cdk/aws-servicediscovery.INamespace",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.NamespaceType"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.HttpNamespaceAttributes": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.HttpNamespaceAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http-namespace.ts",
        "line": 9
      },
      "name": "HttpNamespaceAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Namespace ARN for the Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-namespace.ts",
            "line": 23
          },
          "name": "namespaceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Namespace Id for the Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-namespace.ts",
            "line": 18
          },
          "name": "namespaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A name for the Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-namespace.ts",
            "line": 13
          },
          "name": "namespaceName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.HttpNamespaceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.HttpNamespaceProps",
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.BaseNamespaceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http-namespace.ts",
        "line": 7
      },
      "name": "HttpNamespaceProps"
    },
    "@aws-cdk/aws-servicediscovery.IHttpNamespace": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.IHttpNamespace",
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.INamespace"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http-namespace.ts",
        "line": 8
      },
      "name": "IHttpNamespace"
    },
    "@aws-cdk/aws-servicediscovery.IInstance": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.IInstance",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 4
      },
      "name": "IInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The id of the instance resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 9
          },
          "name": "instanceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Cloudmap service this resource is registered to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 14
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.IService"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.INamespace": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.INamespace",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/namespace.ts",
        "line": 3
      },
      "name": "INamespace",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Namespace ARN for the Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/namespace.ts",
            "line": 20
          },
          "name": "namespaceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Namespace Id for the Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/namespace.ts",
            "line": 14
          },
          "name": "namespaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "A name for the Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/namespace.ts",
            "line": 8
          },
          "name": "namespaceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Type of Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/namespace.ts",
            "line": 25
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.NamespaceType"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.IPrivateDnsNamespace": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.IPrivateDnsNamespace",
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.INamespace"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/private-dns-namespace.ts",
        "line": 15
      },
      "name": "IPrivateDnsNamespace"
    },
    "@aws-cdk/aws-servicediscovery.IPublicDnsNamespace": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.IPublicDnsNamespace",
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.INamespace"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/public-dns-namespace.ts",
        "line": 8
      },
      "name": "IPublicDnsNamespace"
    },
    "@aws-cdk/aws-servicediscovery.IService": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.IService",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/service.ts",
        "line": 12
      },
      "name": "IService",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The DnsRecordType used by the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 39
          },
          "name": "dnsRecordType",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.DnsRecordType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The namespace for the Cloudmap Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 22
          },
          "name": "namespace",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.INamespace"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Routing Policy used by the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 44
          },
          "name": "routingPolicy",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.RoutingPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Arn of the namespace that you want to use for DNS configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 34
          },
          "name": "serviceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ID of the namespace that you want to use for DNS configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 28
          },
          "name": "serviceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "A name for the Cloudmap Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 17
          },
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.InstanceBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-servicediscovery",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.InstanceBase",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/resource.ts",
          "line": 126
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.ResourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.IInstance"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 37
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generate a unique instance Id that is safe to pass to CloudMap."
          },
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 51
          },
          "name": "uniqueInstanceId",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "InstanceBase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Id of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 41
          },
          "name": "instanceId",
          "overrides": "@aws-cdk/aws-servicediscovery.IInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Cloudmap service to which the instance is registered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 46
          },
          "name": "service",
          "overrides": "@aws-cdk/aws-servicediscovery.IInstance",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.IService"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.IpInstance": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "base": "@aws-cdk/aws-servicediscovery.InstanceBase",
      "docs": {
        "custom": {
          "resource": "AWS::ServiceDiscovery::Instance"
        },
        "stability": "stable",
        "summary": "Instance that is accessible using an IP address."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.IpInstance",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/ip-instance.ts",
          "line": 77
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.IpInstanceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ip-instance.ts",
        "line": 51
      },
      "name": "IpInstance",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Id of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ip-instance.ts",
            "line": 55
          },
          "name": "instanceId",
          "overrides": "@aws-cdk/aws-servicediscovery.InstanceBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Ipv4 address of the instance, or blank string if none available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ip-instance.ts",
            "line": 65
          },
          "name": "ipv4",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Ipv6 address of the instance, or blank string if none available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ip-instance.ts",
            "line": 70
          },
          "name": "ipv6",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The exposed port of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ip-instance.ts",
            "line": 75
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Cloudmap service to which the instance is registered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ip-instance.ts",
            "line": 60
          },
          "name": "service",
          "overrides": "@aws-cdk/aws-servicediscovery.InstanceBase",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.IService"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.IpInstanceBaseProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.IpInstanceBaseProps",
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.BaseInstanceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ip-instance.ts",
        "line": 9
      },
      "name": "IpInstanceBaseProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "stable",
            "summary": "If the service that you specify contains a template for an A record, the IPv4 address that you want AWS Cloud Map to use for the value of the A record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ip-instance.ts",
            "line": 25
          },
          "name": "ipv4",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "stable",
            "summary": "If the service that you specify contains a template for an AAAA record, the IPv6 address that you want AWS Cloud Map to use for the value of the AAAA record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ip-instance.ts",
            "line": 33
          },
          "name": "ipv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "80",
            "remarks": "This value is also used for\nthe port value in an SRV record if the service that you specify includes an SRV record. You can also specify a\ndefault port that is applied to all instances in the Service configuration.",
            "stability": "stable",
            "summary": "The port on the endpoint that you want AWS Cloud Map to perform health checks on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ip-instance.ts",
            "line": 17
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.IpInstanceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.IpInstanceProps",
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.IpInstanceBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ip-instance.ts",
        "line": 39
      },
      "name": "IpInstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Cloudmap service this resource is registered to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ip-instance.ts",
            "line": 43
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.IService"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.NamespaceType": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.NamespaceType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/namespace.ts",
        "line": 42
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Choose this option if you want your application to use only API calls to discover registered instances."
          },
          "name": "HTTP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Choose this option if you want your application to be able to discover instances using either API calls or using DNS queries in a VPC."
          },
          "name": "DNS_PRIVATE"
        },
        {
          "docs": {
            "remarks": "You aren't required to use both methods.",
            "stability": "stable",
            "summary": "Choose this option if you want your application to be able to discover instances using either API calls or using public DNS queries."
          },
          "name": "DNS_PUBLIC"
        }
      ],
      "name": "NamespaceType"
    },
    "@aws-cdk/aws-servicediscovery.NonIpInstance": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "base": "@aws-cdk/aws-servicediscovery.InstanceBase",
      "docs": {
        "custom": {
          "resource": "AWS::ServiceDiscovery::Instance"
        },
        "remarks": "Specify the other values in Custom attributes.",
        "stability": "stable",
        "summary": "Instance accessible using values other than an IP address or a domain name (CNAME)."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.NonIpInstance",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/non-ip-instance.ts",
          "line": 37
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.NonIpInstanceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/non-ip-instance.ts",
        "line": 26
      },
      "name": "NonIpInstance",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Id of the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/non-ip-instance.ts",
            "line": 30
          },
          "name": "instanceId",
          "overrides": "@aws-cdk/aws-servicediscovery.InstanceBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Cloudmap service to which the instance is registered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/non-ip-instance.ts",
            "line": 35
          },
          "name": "service",
          "overrides": "@aws-cdk/aws-servicediscovery.InstanceBase",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.IService"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.NonIpInstanceBaseProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.NonIpInstanceBaseProps",
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.BaseInstanceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/non-ip-instance.ts",
        "line": 7
      },
      "name": "NonIpInstanceBaseProps"
    },
    "@aws-cdk/aws-servicediscovery.NonIpInstanceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.NonIpInstanceProps",
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.NonIpInstanceBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/non-ip-instance.ts",
        "line": 13
      },
      "name": "NonIpInstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Cloudmap service this resource is registered to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/non-ip-instance.ts",
            "line": 17
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.IService"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.PrivateDnsNamespace": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Define a Service Discovery HTTP Namespace."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.PrivateDnsNamespace",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/private-dns-namespace.ts",
          "line": 69
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.PrivateDnsNamespaceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.IPrivateDnsNamespace"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/private-dns-namespace.ts",
        "line": 37
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/private-dns-namespace.ts",
            "line": 39
          },
          "name": "fromPrivateDnsNamespaceAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-servicediscovery.PrivateDnsNamespaceAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.IPrivateDnsNamespace"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a service within the namespace."
          },
          "locationInModule": {
            "filename": "lib/private-dns-namespace.ts",
            "line": 99
          },
          "name": "createService",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-servicediscovery.DnsServiceProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.Service"
            }
          }
        }
      ],
      "name": "PrivateDnsNamespace",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Namespace Arn of the namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/private-dns-namespace.ts",
            "line": 62
          },
          "name": "namespaceArn",
          "overrides": "@aws-cdk/aws-servicediscovery.INamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Namespace Id of the PrivateDnsNamespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/private-dns-namespace.ts",
            "line": 57
          },
          "name": "namespaceId",
          "overrides": "@aws-cdk/aws-servicediscovery.INamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the PrivateDnsNamespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/private-dns-namespace.ts",
            "line": 52
          },
          "name": "namespaceName",
          "overrides": "@aws-cdk/aws-servicediscovery.INamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/private-dns-namespace.ts",
            "line": 88
          },
          "name": "privateDnsNamespaceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/private-dns-namespace.ts",
            "line": 94
          },
          "name": "privateDnsNamespaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/private-dns-namespace.ts",
            "line": 91
          },
          "name": "privateDnsNamespaceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Type of the namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/private-dns-namespace.ts",
            "line": 67
          },
          "name": "type",
          "overrides": "@aws-cdk/aws-servicediscovery.INamespace",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.NamespaceType"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.PrivateDnsNamespaceAttributes": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.PrivateDnsNamespaceAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/private-dns-namespace.ts",
        "line": 17
      },
      "name": "PrivateDnsNamespaceAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Namespace ARN for the Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/private-dns-namespace.ts",
            "line": 31
          },
          "name": "namespaceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Namespace Id for the Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/private-dns-namespace.ts",
            "line": 26
          },
          "name": "namespaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A name for the Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/private-dns-namespace.ts",
            "line": 21
          },
          "name": "namespaceName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.PrivateDnsNamespaceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.PrivateDnsNamespaceProps",
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.BaseNamespaceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/private-dns-namespace.ts",
        "line": 8
      },
      "name": "PrivateDnsNamespaceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Amazon VPC that you want to associate the namespace with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/private-dns-namespace.ts",
            "line": 12
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.PublicDnsNamespace": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Define a Public DNS Namespace."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.PublicDnsNamespace",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/public-dns-namespace.ts",
          "line": 61
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.PublicDnsNamespaceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.IPublicDnsNamespace"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/public-dns-namespace.ts",
        "line": 29
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/public-dns-namespace.ts",
            "line": 31
          },
          "name": "fromPublicDnsNamespaceAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-servicediscovery.PublicDnsNamespaceAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.IPublicDnsNamespace"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a service within the namespace."
          },
          "locationInModule": {
            "filename": "lib/public-dns-namespace.ts",
            "line": 87
          },
          "name": "createService",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-servicediscovery.DnsServiceProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.Service"
            }
          }
        }
      ],
      "name": "PublicDnsNamespace",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Namespace Arn for the namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-dns-namespace.ts",
            "line": 54
          },
          "name": "namespaceArn",
          "overrides": "@aws-cdk/aws-servicediscovery.INamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Namespace Id for the namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-dns-namespace.ts",
            "line": 49
          },
          "name": "namespaceId",
          "overrides": "@aws-cdk/aws-servicediscovery.INamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A name for the namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-dns-namespace.ts",
            "line": 44
          },
          "name": "namespaceName",
          "overrides": "@aws-cdk/aws-servicediscovery.INamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-dns-namespace.ts",
            "line": 76
          },
          "name": "publicDnsNamespaceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-dns-namespace.ts",
            "line": 82
          },
          "name": "publicDnsNamespaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-dns-namespace.ts",
            "line": 79
          },
          "name": "publicDnsNamespaceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Type of the namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-dns-namespace.ts",
            "line": 59
          },
          "name": "type",
          "overrides": "@aws-cdk/aws-servicediscovery.INamespace",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.NamespaceType"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.PublicDnsNamespaceAttributes": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.PublicDnsNamespaceAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/public-dns-namespace.ts",
        "line": 9
      },
      "name": "PublicDnsNamespaceAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Namespace ARN for the Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-dns-namespace.ts",
            "line": 23
          },
          "name": "namespaceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Namespace Id for the Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-dns-namespace.ts",
            "line": 18
          },
          "name": "namespaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A name for the Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-dns-namespace.ts",
            "line": 13
          },
          "name": "namespaceName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.PublicDnsNamespaceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.PublicDnsNamespaceProps",
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.BaseNamespaceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/public-dns-namespace.ts",
        "line": 7
      },
      "name": "PublicDnsNamespaceProps"
    },
    "@aws-cdk/aws-servicediscovery.RoutingPolicy": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.RoutingPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/service.ts",
        "line": 414
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Route 53 returns the applicable value from one randomly selected instance from among the instances that you registered using the same service."
          },
          "name": "WEIGHTED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If you define a health check for the service and the health check is healthy, Route 53 returns the applicable value for up to eight instances."
          },
          "name": "MULTIVALUE"
        }
      ],
      "name": "RoutingPolicy"
    },
    "@aws-cdk/aws-servicediscovery.Service": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Define a CloudMap Service."
      },
      "fqn": "@aws-cdk/aws-servicediscovery.Service",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/service.ts",
          "line": 198
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.ServiceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.IService"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/service.ts",
        "line": 153
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 155
          },
          "name": "fromServiceAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-servicediscovery.ServiceAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.IService"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Registers a resource that is accessible using a CNAME."
          },
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 321
          },
          "name": "registerCnameInstance",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-servicediscovery.CnameInstanceBaseProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.IInstance"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Registers a resource that is accessible using an IP address."
          },
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 311
          },
          "name": "registerIpInstance",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-servicediscovery.IpInstanceBaseProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.IInstance"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Registers an ELB as a new instance with unique name instanceId in this service."
          },
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 290
          },
          "name": "registerLoadBalancer",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "loadBalancer",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ILoadBalancerV2"
              }
            },
            {
              "name": "customAttributes",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.IInstance"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Registers a resource that is accessible using values other than an IP address or a domain name (CNAME)."
          },
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 301
          },
          "name": "registerNonIpInstance",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-servicediscovery.NonIpInstanceBaseProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-servicediscovery.IInstance"
            }
          }
        }
      ],
      "name": "Service",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The DnsRecordType used by the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 191
          },
          "name": "dnsRecordType",
          "overrides": "@aws-cdk/aws-servicediscovery.IService",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.DnsRecordType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The namespace for the Cloudmap Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 176
          },
          "name": "namespace",
          "overrides": "@aws-cdk/aws-servicediscovery.IService",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.INamespace"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Routing Policy used by the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 196
          },
          "name": "routingPolicy",
          "overrides": "@aws-cdk/aws-servicediscovery.IService",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.RoutingPolicy"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Arn of the namespace that you want to use for DNS configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 186
          },
          "name": "serviceArn",
          "overrides": "@aws-cdk/aws-servicediscovery.IService",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ID of the namespace that you want to use for DNS configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 181
          },
          "name": "serviceId",
          "overrides": "@aws-cdk/aws-servicediscovery.IService",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A name for the Cloudmap Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 171
          },
          "name": "serviceName",
          "overrides": "@aws-cdk/aws-servicediscovery.IService",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.ServiceAttributes": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.ServiceAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/service.ts",
        "line": 141
      },
      "name": "ServiceAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 146
          },
          "name": "dnsRecordType",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.DnsRecordType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 142
          },
          "name": "namespace",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.INamespace"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 147
          },
          "name": "routingPolicy",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.RoutingPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 145
          },
          "name": "serviceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 144
          },
          "name": "serviceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 143
          },
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-servicediscovery.ServiceProps": {
      "assembly": "@aws-cdk/aws-servicediscovery",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-servicediscovery.ServiceProps",
      "interfaces": [
        "@aws-cdk/aws-servicediscovery.DnsServiceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/service.ts",
        "line": 125
      },
      "name": "ServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The namespace that you want to use for DNS configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/service.ts",
            "line": 129
          },
          "name": "namespace",
          "type": {
            "fqn": "@aws-cdk/aws-servicediscovery.INamespace"
          }
        }
      ]
    }
  },
  "version": "1.91.0",
  "fingerprint": "kgb2kglSZ59intgStSJ2K2wc6S+usrm4uTaHOvyB7Hg="
}
